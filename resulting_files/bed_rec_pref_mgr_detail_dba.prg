CREATE PROGRAM bed_rec_pref_mgr_detail:dba
 IF ( NOT (validate(request,0)))
  RECORD request(
    1 program_name = vc
    1 paramlist[*]
      2 meaning = vc
  )
 ENDIF
 RECORD detailrequest(
   1 program_name = vc
   1 paramlist[*]
     2 meaning = vc
   1 detail_mode = i2
 )
 IF ( NOT (validate(reply,0)))
  RECORD reply(
    1 collist[*]
      2 header_text = vc
      2 data_type = i2
      2 hide_ind = i2
    1 rowlist[*]
      2 celllist[*]
        3 date_value = dq8
        3 nbr_value = i4
        3 double_value = f8
        3 string_value = vc
        3 display_flag = i2
    1 high_volume_flag = i2
    1 output_filename = vc
    1 run_status_flag = i2
    1 statlist[*]
      2 statistic_meaning = vc
      2 status_flag = i2
      2 qualifying_items = i4
      2 total_items = i4
    1 status_data
      2 status = c1
      2 subeventstatus[1]
        3 operationname = c25
        3 operationstatus = c1
        3 targetobjectname = c25
        3 targetobjectvalue = vc
  )
 ENDIF
 RECORD detailreply(
   1 collist[*]
     2 header_text = vc
     2 data_type = i2
     2 hide_ind = i2
   1 rowlist[*]
     2 celllist[*]
       3 date_value = dq8
       3 nbr_value = i4
       3 double_value = f8
       3 string_value = vc
       3 display_flag = i2
   1 high_volume_flag = i2
   1 output_filename = vc
   1 run_status_flag = i2
   1 statlist[*]
     2 statistic_meaning = vc
     2 status_flag = i2
     2 qualifying_items = i4
     2 total_items = i4
   1 status_data
     2 status = c1
     2 subeventstatus[1]
       3 operationname = c25
       3 operationstatus = c1
       3 targetobjectname = c25
       3 targetobjectvalue = vc
 )
 RECORD temp(
   1 rowlist[*]
     2 add_ind = i2
     2 celllist[*]
       3 string_value = vc
 )
 EXECUTE prefrtl
 DECLARE resolution_txt = vc
 DECLARE short_desc = vc
 DECLARE failed_txt = vc
 DECLARE recommended_value = vc
 SET detailrequest->detail_mode = 1
 SET detailrequest->program_name = request->program_name
 SET col_cnt = 15
 SET stat = alterlist(reply->collist,col_cnt)
 SET reply->collist[1].header_text = "Check Name"
 SET reply->collist[1].data_type = 1
 SET reply->collist[1].hide_ind = 0
 SET reply->collist[2].header_text = "Preference Name"
 SET reply->collist[2].data_type = 1
 SET reply->collist[2].hide_ind = 0
 SET reply->collist[3].header_text = "Recommended Setting"
 SET reply->collist[3].data_type = 1
 SET reply->collist[3].hide_ind = 0
 SET reply->collist[4].header_text = "Actual Setting"
 SET reply->collist[4].data_type = 1
 SET reply->collist[4].hide_ind = 0
 SET reply->collist[5].header_text = "Level"
 SET reply->collist[5].data_type = 1
 SET reply->collist[5].hide_ind = 0
 SET reply->collist[6].header_text = "Application"
 SET reply->collist[6].data_type = 1
 SET reply->collist[6].hide_ind = 0
 SET reply->collist[7].header_text = "Details"
 SET reply->collist[7].data_type = 1
 SET reply->collist[7].hide_ind = 0
 SET reply->collist[8].header_text = "Privilege 1 Name"
 SET reply->collist[8].data_type = 1
 SET reply->collist[8].hide_ind = 0
 SET reply->collist[9].header_text = "Privilege 1 Setting"
 SET reply->collist[9].data_type = 1
 SET reply->collist[9].hide_ind = 0
 SET reply->collist[10].header_text = "Privilege 2 Name"
 SET reply->collist[10].data_type = 1
 SET reply->collist[10].hide_ind = 0
 SET reply->collist[11].header_text = "Privilege 2 Setting"
 SET reply->collist[11].data_type = 1
 SET reply->collist[11].hide_ind = 0
 SET reply->collist[12].header_text = "View Name"
 SET reply->collist[12].data_type = 1
 SET reply->collist[12].hide_ind = 0
 SET reply->collist[13].header_text = "Component Name"
 SET reply->collist[13].data_type = 1
 SET reply->collist[13].hide_ind = 0
 SET reply->collist[14].header_text = "Database Model or Database Tool"
 SET reply->collist[14].data_type = 1
 SET reply->collist[14].hide_ind = 0
 SET reply->collist[15].header_text = "Resolution"
 SET reply->collist[15].data_type = 1
 SET reply->collist[15].hide_ind = 0
 SET rcnt = 0
 SET reply->run_status_flag = 1
 DECLARE hpref = i4 WITH noconstant(0)
 DECLARE pos_cd = f8 WITH protect, noconstant(0)
 DECLARE loc_cd = f8 WITH protect, noconstant(0)
 DECLARE tprole_id = f8 WITH protect, noconstant(0)
 DECLARE tgrp_cd = f8 WITH protect, noconstant(0)
 DECLARE value = f8 WITH protect, noconstant(0)
 DECLARE powerchart_value = vc
 DECLARE surginet_value = vc
 DECLARE firstnet_value = vc
 DECLARE powerchart_app_desc = vc
 DECLARE surginet_app_desc = vc
 DECLARE firstnet_app_desc = vc
 DECLARE powerchartoff_app_desc = vc
 SELECT INTO "NL:"
  FROM application a
  WHERE a.application_number IN (600005, 820000, 4250111, 961000)
   AND a.active_ind=1
  DETAIL
   IF (a.application_number=600005)
    powerchart_app_desc = a.description
   ELSEIF (a.application_number=820000)
    surginet_app_desc = a.description
   ELSEIF (a.application_number=4250111)
    firstnet_app_desc = a.description
   ELSEIF (a.application_number=961000)
    powerchartoff_app_desc = a.description
   ENDIF
  WITH nocounter
 ;end select
 RECORD tempids(
   1 ids[*]
     2 alt_sel_category_id = f8
     2 position_cd = f8
     2 application_number = f8
   1 ords[*]
     2 position_cd = f8
     2 application_number = f8
 )
 RECORD temprec(
   1 tlist[*]
     2 tprole = f8
   1 plist[*]
     2 tg_id = f8
     2 tp_id = f8
 )
 SET physproxy_cd = 0.0
 SET order_priv_cd = 0.0
 SET prescribe_priv_cd = 0.0
 SET nursereview_cd = 0.0
 SET rxverify_cd = 0.0
 SET add_by_hx_cd = 0.0
 SELECT INTO "NL:"
  FROM code_value cv
  WHERE cv.code_set=6016
   AND cv.cdf_meaning IN ("ORDER", "PRESCRIBE", "NURSEREVIEW", "RXPHYSPROXY", "RXVERIFY",
  "HXORDERS")
   AND cv.active_ind=1
  DETAIL
   IF (cv.cdf_meaning="ORDER")
    order_priv_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="PRESCRIBE")
    prescribe_priv_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="NURSEREVIEW")
    nursereview_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="RXPHYSPROXY")
    physproxy_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="RXVERIFY")
    rxverify_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="HXORDERS")
    add_by_hx_cd = cv.code_value
   ENDIF
  WITH nocounter
 ;end select
 SET yes_cd = 0.0
 SET no_cd = 0.0
 SET yes_except_for_cd = 0.0
 SET no_except_for_cd = 0.0
 SELECT INTO "NL:"
  FROM code_value cv
  WHERE cv.code_set=6017
   AND cv.cdf_meaning IN ("YES", "NO", "EXCLUDE", "INCLUDE")
   AND cv.active_ind=1
  DETAIL
   IF (cv.cdf_meaning="YES")
    yes_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="NO")
    no_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="EXCLUDE")
    yes_except_for_cd = cv.code_value
   ELSEIF (cv.cdf_meaning="INCLUDE")
    no_except_for_cd = cv.code_value
   ENDIF
  WITH nocounter
 ;end select
 SET cat_type_excep_cd = 0.0
 SELECT INTO "NL:"
  FROM code_value cv
  WHERE cv.code_set=6015
   AND cv.cdf_meaning="CATALOGTYPE"
   AND cv.active_ind=1
  DETAIL
   cat_type_excep_cd = cv.code_value
  WITH nocounter
 ;end select
 SET pharm_cat_type_cd = 0.0
 SELECT INTO "NL:"
  FROM code_value cv
  WHERE cv.code_set=6000
   AND cv.cdf_meaning="PHARMACY"
   AND cv.active_ind=1
  DETAIL
   pharm_cat_type_cd = cv.code_value
  WITH nocounter
 ;end select
 SET plsize = size(request->paramlist,5)
 FOR (plcnt = 1 TO plsize)
   CALL echo("******************************************")
   CALL echo(request->paramlist[plcnt].meaning)
   CALL echo("******************************************")
   IF ((request->paramlist[plcnt].meaning="CARENETINDSCHFLAG"))
    DECLARE failed_txt = vc
    SET fail_ind = 0
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETINDSCHFLAG")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET cnotstarted = 0.0
    SET cnotstarted = uar_get_code_by("MEANING",460,"NOTSTARTED")
    SELECT INTO "nl:"
     FROM ops_job_step ojs
     PLAN (ojs
      WHERE cnvtupper(ojs.batch_selection)="DCP_OPS_INP_DC_DORDS")
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "The DCP_OPS_INP_DC_DORDS job is not running. "
    ENDIF
    SELECT INTO "nl:"
     FROM ops_job_step ojs,
      ops_task ot,
      ops_schedule_task ost
     PLAN (ojs
      WHERE cnvtupper(ojs.batch_selection)="DCP_OPS_INP_DC_DORDS")
      JOIN (ot
      WHERE (ot.ops_job_id=(ojs.ops_job_id+ 0)))
      JOIN (ost
      WHERE (ost.ops_task_id=(ot.ops_task_id+ 0))
       AND ((ost.status_cd+ 0)=cnotstarted))
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "The DCP_OPS_INP_DC_DORDS job is not running. "
    ENDIF
    SELECT INTO "nl:"
     FROM config_prefs c
     PLAN (c
      WHERE c.config_name="DSCH_CANCEL")
     DETAIL
      IF (c.config_value != "NONE")
       fail_ind = 1, failed_txt = concat(failed_txt,"The DSCH_CANCEL preference is not set to NONE. "
        )
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = concat(failed_txt,"The DSCH_CANCEL preference is not defined. ")
    ENDIF
    SELECT INTO "nl:"
     FROM config_prefs c
     PLAN (c
      WHERE c.config_name="INDSCH_FLAG")
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = concat(failed_txt,"The INDSCH_FLAG preference is not defined. ")
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INDSCH_FLAG"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = concat(
      "The DCP_OPS_INP_DC_DORDS job is running. The DSCH_CANCEL preference is defined as NONE.",
      " The INDSCH_FLAG preference is defined.")
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "DCPUTIL_SET_CONFIG_PREFS"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETINDSCHHRS"))
    DECLARE failed_txt = vc
    SET fail_ind = 0
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETINDSCHHRS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM config_prefs c
     PLAN (c
      WHERE c.config_name="INDSCH_HRS")
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = concat(failed_txt,"The INDSCH_HRS preference is not defined. ")
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INDSCH_HRS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
     "The INDSCH_HRS preference is defined."
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "DCPUTIL_SET_CONFIG_PREFS"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETOUTDSCHFLAG"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETOUTDSCHFLAG")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET cnotstarted = 0.0
    SET cnotstarted = uar_get_code_by("MEANING",460,"NOTSTARTED")
    SELECT INTO "nl:"
     FROM ops_job_step ojs
     PLAN (ojs
      WHERE cnvtupper(ojs.batch_selection)="DCP_OPS_OUTP_DC_DORDS")
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "The DCP_OPS_OUTP_DC_DORDS job is not running. "
    ENDIF
    SELECT INTO "nl:"
     FROM ops_job_step ojs,
      ops_task ot,
      ops_schedule_task ost
     PLAN (ojs
      WHERE cnvtupper(ojs.batch_selection)="DCP_OPS_OUTP_DC_DORDS")
      JOIN (ot
      WHERE (ot.ops_job_id=(ojs.ops_job_id+ 0)))
      JOIN (ost
      WHERE (ost.ops_task_id=(ot.ops_task_id+ 0))
       AND ((ost.status_cd+ 0)=cnotstarted))
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "The DCP_OPS_OUTP_DC_DORDS job is not running. "
    ENDIF
    SELECT INTO "nl:"
     FROM config_prefs c
     PLAN (c
      WHERE c.config_name="DSCH_CANCEL")
     DETAIL
      IF (c.config_value != "NONE")
       fail_ind = 1, failed_txt = concat(failed_txt,"The DSCH_CANCEL preference is not set to NONE. "
        )
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = concat(failed_txt,"The DSCH_CANCEL preference is not defined. ")
    ENDIF
    SELECT INTO "nl:"
     FROM config_prefs c
     PLAN (c
      WHERE c.config_name="OUTDSCH_FLAG")
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = concat(failed_txt,"The OUTDSCH_FLAG preference is not defined. ")
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "OUTDSCH_FLAG"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = concat(
      "The DCP_OPS_OUTP_DC_DORDS job is running. The DSCH_CANCEL preference is defined as NONE.",
      " The OUTDSCH_FLAG preference is defined.")
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "DCPUTIL_SET_CONFIG_PREFS"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETOUTDSCHHRS"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETOUTDSCHHRS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM config_prefs c
     PLAN (c
      WHERE c.config_name="OUTDSCH_HRS")
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = concat(failed_txt,"The OUTDSCH_HRS preference is not defined. ")
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "OUTDSCH_HRS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
     "The OUTDSCH_HRS preference is defined."
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "DCPUTIL_SET_CONFIG_PREFS"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="GLBAUTOELGRES"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE view_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="GLBAUTOELGRES")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm
     PLAN (dm
      WHERE dm.pref_domain="PATHNET GLB"
       AND dm.pref_section="RESULTENTRY"
       AND dm.pref_name="AutoSelectEligibleResults")
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(cnvtstring(dm
         .application_nbr)),
       view_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Preference not defined."
     SET app_txt = ""
     SET view_txt = ""
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AutoSelectEligibleResults"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = view_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "GLBPrefs"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="GLBSYNCPOSTRES"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE view_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="GLBSYNCPOSTRES")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm
     PLAN (dm
      WHERE dm.pref_domain="PATHNET GLB"
       AND dm.pref_section="RESULTENTRY"
       AND dm.pref_name="SynchronousPostingOfResults")
     DETAIL
      IF (dm.pref_nbr != 0)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(cnvtstring(dm
         .application_nbr)),
       view_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Preference not defined."
     SET app_txt = ""
     SET view_txt = ""
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "SynchronousPostingOfResults"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = view_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "GLBPrefs"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="GLBINSTQUEREC"))
    SET fail_ind = 0
    DECLARE app_txt = vc
    DECLARE view_txt = vc
    DECLARE failed_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="GLBINSTQUEREC")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm
     PLAN (dm
      WHERE dm.pref_domain="PATHNET GLB"
       AND dm.pref_section="RESULTENTRY"
       AND dm.pref_name="KeepDiscernIQRecords")
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(cnvtstring(dm
         .application_nbr)),
       view_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Preference not defined."
     SET app_txt = ""
     SET view_txt = ""
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "KeepDiscernIQRecords"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = view_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "GLBPrefs"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CONTORDINITTM"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CONTORDINITTM")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM eco_flex_schedule efs
     DETAIL
      IF (efs.initial_explosion_hours > 24)
       fail_ind = 1, failed_txt = trim(cnvtstring(efs.initial_explosion_hours))
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not Defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "initial_explosion_hours"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 24"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "ORM_SET_ECO_FLEX"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CONTORDSUBSEQTM"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CONTORDSUBSEQTM")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM eco_flex_schedule efs
     DETAIL
      IF (efs.additional_explosion_hours > 24)
       fail_ind = 1, failed_txt = trim(cnvtstring(efs.additional_explosion_hours))
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not Defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "additional_explosion_hours"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 24"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "ORM_SET_ECO_FLEX"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMORDSTARTTM"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMORDSTARTTM")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="OEPARAM"
       AND dm.pref_name="RXPRIORITYCALCSTART")
      JOIN (a
      WHERE a.application_number=dm.application_nbr)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "RXPRIORITYCALCSTART"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMLOCMEDPROF"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMLOCMEDPROF")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="PROFILE"
       AND dm.pref_name="PATIENTNOTLOCK")
      JOIN (a
      WHERE a.application_number=dm.application_nbr)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PATIENTNOTLOCK"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMRESCHEDDOSE"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMRESCHEDDOSE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="RESCHEDULE"
       AND dm.pref_name="ENABLE ENHANCED RESCHEDULE")
      JOIN (a
      WHERE a.application_number=dm.application_nbr)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE ENHANCED RESCHEDULE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMINVTRACKING"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMINVTRACKING")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="FORMULARY"
       AND dm.pref_name="PROCURE")
      JOIN (a
      WHERE a.application_number=dm.application_nbr)
     DETAIL
      IF (cnvtupper(dm.pref_str) != "DRUG FORMULATION")
       fail_ind = 1, failed_txt = trim(dm.pref_str), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PROCURE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Drug Formulation"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMCHRGNUMBER"))
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET fail_ind = 0
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMCHRGNUMBER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="BILLING"
       AND dm.pref_name="CDM OPTION")
      JOIN (a
      WHERE a.application_number=dm.application_nbr)
     DETAIL
      IF (dm.pref_str != "Manufactured Item")
       fail_ind = 1, failed_txt = trim(dm.pref_str), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CDM OPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Manufactured Item"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMCHRGFUNC"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMCHRGFUNC")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="CCENHPREFS"
       AND dm.pref_name="CCENHCC")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CCENHCC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMPRODSEARCH"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMPRODSEARCH")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="SEARCH"
       AND dm.pref_name="CCENHPRODSEARCH")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CCENHPRODSEARCH"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMDISPDTRANGE"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMDISPDTRANGE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="DISPENSE"
       AND dm.pref_name="FILLRANGE")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FILLRANGE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMPRNREASON"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMPRNREASON")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="PRNREASONREQUIRED"
       AND dm.pref_name="PRN REASON REQUIRED")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PRN REASON REQUIRED"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMSETLVLNOTES"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMSETLVLNOTES")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="ENABLEORDSETLEVELNOTES"
       AND dm.pref_name="ENABLE ORDER SET LEVEL NOTES")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE ORDER SET LEVEL NOTES"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMIDENTSYNC"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMIDENTSYNC")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET"
       AND dm.pref_section="FORMULARY"
       AND dm.pref_name="IDENTSYNC")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "IDENTSYNC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMPRODLINK"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMPRODLINK")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET"
       AND dm.pref_section="FORMULARY"
       AND dm.pref_name="PROCUREGROUP")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PROCUREGROUP"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMPATPROFILE"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMPATPROFILE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="CCENHPREFS"
       AND dm.pref_name="FILTERPATIENTPROFILEBYDISPFROMLOC")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 0)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FILTERPATIENTPROFILEBYDISPFROMLOC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMSIGCODE"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMSIGCODE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="OEPARAM"
       AND dm.pref_name="ENABLESIGPARSER")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 0)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLESIGPARSER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMCOPYORDERS"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMCOPYORDERS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="COPY"
       AND dm.pref_name="CANCOPYORDERS")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CANCOPYORDERS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMUNIQUEIDENT"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMUNIQUEIDENT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET"
       AND dm.pref_section="FRMLRYMGMT"
       AND dm.pref_name="RDDSUNIQUE")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr != 1)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "RDDSUNIQUE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMCHRGWARNING"))
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMCHRGWARNING")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dm,
      application a
     PLAN (dm
      WHERE dm.pref_domain="PHARMNET-INPATIENT"
       AND dm.pref_section="CCENHPREFS"
       AND dm.pref_name="TRANSACTIONSBEFOREWARN")
      JOIN (a
      WHERE a.application_number=dm.application_nbr
       AND a.active_ind=1)
     DETAIL
      IF (dm.pref_nbr > 30)
       fail_ind = 1, failed_txt = trim(cnvtstring(dm.pref_nbr)), app_txt = trim(a.description),
       pref_dom_txt = trim(dm.pref_domain)
      ENDIF
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "TRANSACTIONSBEFOREWARN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 30"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWOPENSECTION"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWOPENSECTION")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=default_open")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        IF (valcnt > 10)
         SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
         SET stat = alterlist(reply->rowlist,row_tot_cnt)
         SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
         SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
         SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "default_open"
         SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 10"
         SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(valcnt))
         SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
         SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
         SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
         SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
         SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=default_open")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        IF (valcnt > 10)
         SET valid_ind = 0
         SET pos_cd = cnvtreal(grpstr)
         SELECT INTO "nl:"
          FROM code_value cv,
           prsnl p
          PLAN (cv
           WHERE cv.code_value=pos_cd
            AND cv.active_ind=1)
           JOIN (p
           WHERE p.position_cd=cv.code_value
            AND p.active_ind=1)
          DETAIL
           valid_ind = 1, posstr = cv.display
          WITH nocounter
         ;end select
         IF (valid_ind=1)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "default_open"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 10"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(valcnt))
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDIF
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=default_open")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        IF (valcnt > 10)
         SET valid_ind = 0
         SET a = findstring("^",grpstr)
         SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
         SET b = textlen(grpstr)
         SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
         SELECT INTO "nl:"
          FROM code_value cv,
           prsnl p
          PLAN (cv
           WHERE cv.code_value=pos_cd
            AND cv.active_ind=1)
           JOIN (p
           WHERE p.position_cd=cv.code_value
            AND p.active_ind=1)
          DETAIL
           valid_ind = 1, posstr = cv.display
          WITH nocounter
         ;end select
         IF (valid_ind=1)
          SET valid_ind = 0
          SELECT INTO "nl:"
           FROM code_value cv
           PLAN (cv
            WHERE cv.code_value=loc_cd)
           DETAIL
            valid_ind = 1, locstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "default_open"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 10"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(valcnt))
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
             locstr))
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDIF
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWSEEKER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWSEEKER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=seeker")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "0")
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "seeker"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Off"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "On"
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=seeker")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "0")
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "seeker"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Off"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "On"
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=seeker")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "0")
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "seeker"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Off"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "On"
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWORDINTEGRATION"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWORDINTEGRATION")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=order_integration")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "0")
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "order_integration"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Off"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "On"
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=order_integration")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "0")
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "order_integration"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Off"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "On"
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=order_integration")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "0")
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "order_integration"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Off"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "On"
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWRESULTCAP2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWRESULTCAP2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=result_cap")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET rescap_fail_ind = 0
          IF (isnumeric(trim(xvalue))=0)
           SET rescap_fail_ind = 1
          ELSE
           IF (((cnvtint(trim(xvalue)) < 1) OR (cnvtint(trim(xvalue)) > 5000)) )
            SET rescap_fail_ind = 1
           ENDIF
          ENDIF
          IF (rescap_fail_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "result_cap"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = ">= 1 and <= 5000"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(xvalue)
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=result_cap")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET rescap_fail_ind = 0
          IF (isnumeric(trim(xvalue))=0)
           SET rescap_fail_ind = 1
          ELSE
           IF (((cnvtint(trim(xvalue)) < 1) OR (cnvtint(trim(xvalue)) > 5000)) )
            SET rescap_fail_ind = 1
           ENDIF
          ENDIF
          IF (rescap_fail_ind=1)
           SET valid_ind = 0
           SET pos_cd = cnvtreal(grpstr)
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "result_cap"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = ">= 1 and <=5000"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(xvalue)
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=result_cap")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET rescap_fail_ind = 0
          IF (isnumeric(trim(xvalue))=0)
           SET rescap_fail_ind = 1
          ELSE
           IF (((cnvtint(trim(xvalue)) < 1) OR (cnvtint(trim(xvalue)) > 5000)) )
            SET rescap_fail_ind = 1
           ENDIF
          ENDIF
          IF (rescap_fail_ind=1)
           SET valid_ind = 0
           SET a = findstring("^",grpstr)
           SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
           SET b = textlen(grpstr)
           SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET valid_ind = 0
            SELECT INTO "nl:"
             FROM code_value cv
             PLAN (cv
              WHERE cv.code_value=loc_cd)
             DETAIL
              valid_ind = 1, locstr = cv.display
             WITH nocounter
            ;end select
            IF (valid_ind=1)
             SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
             SET stat = alterlist(reply->rowlist,row_tot_cnt)
             SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
             SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
             SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "result_cap"
             SET reply->rowlist[row_tot_cnt].celllist[3].string_value = ">= 1 and <= 5000"
             SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(xvalue)
             SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
             SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
             SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
             SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
             SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            ENDIF
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWDEFRETTYPE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWDEFRETTYPE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=retrieve_type")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET user_id = 0
    SET pos_cd = 0
    SET loc_cd = 0
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,255)
      SET j = 0
      SET i = 0
      SET l = 0
      SET i = findstring("prefcontext=reference",dnstr)
      SET j = findstring("prefcontext=user",dnstr)
      SET l = findstring("prefcontext=app",dnstr)
      IF (i=0
       AND j=0
       AND l=0)
       SET a = findstring("prefgroup=",dnstr,1,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefcontext=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,(b+ 1))
       SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefgroup=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET acnt = 0
       SET stat = uar_prefgetentryattrcount(hentry,acnt)
       FOR (y = 0 TO (acnt - 1))
         SET hattr = uar_prefgetentryattr(hentry,y)
         SET valcnt = 0
         SET stat = uar_prefgetattrvalcount(hattr,valcnt)
         FOR (z = 0 TO (valcnt - 1))
           DECLARE xvalue = c255 WITH noconstant("")
           SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
           IF (xvalue="Adm to current"
            AND cxtstr != "user")
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "retrieve_type"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Not = Adm to current"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(xvalue)
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            IF (cxtstr="position")
             SET pos_cd = cnvtreal(grpstr)
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               reply->rowlist[row_tot_cnt].celllist[7].string_value = c.display
              WITH nocounter
             ;end select
            ENDIF
            IF (cxtstr="position location")
             SET a = findstring("^",grpstr)
             SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
             SET b = textlen(grpstr)
             SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               posstr = c.display
              WITH nocounter
             ;end select
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=loc_cd)
              DETAIL
               locstr = c.display
              WITH nocounter
             ;end select
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
            ENDIF
           ENDIF
         ENDFOR
       ENDFOR
      ENDIF
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWENHPERFORMANCE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWENHPERFORMANCE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enhanced_performance")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="0")
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "enhanced_performance"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "On"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Off"
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enhanced_performance")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="0")
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "enhanced_performance"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "On"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Off"
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enhanced_performance")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="0")
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "enhanced_performance"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "On"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Off"
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWBACKMIN"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWBACKMIN")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=bmdi_look_back_min")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET cap_value = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (((cap_value < 15) OR (cap_value > 60)) )
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "bmdi_look_back_min"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = ">= 15 and <= 60"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=bmdi_look_back_min")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET cap_value = 0
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (((cap_value < 15) OR (cap_value > 60)) )
           SET valid_ind = 0
           SET pos_cd = cnvtreal(grpstr)
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "bmdi_look_back_min"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = ">= 15 and <= 60"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=bmdi_look_back_min")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET cap_value = 0
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (((cap_value < 15) OR (cap_value > 60)) )
           SET valid_ind = 0
           SET a = findstring("^",grpstr)
           SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
           SET b = textlen(grpstr)
           SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET valid_ind = 0
            SELECT INTO "nl:"
             FROM code_value cv
             PLAN (cv
              WHERE cv.code_value=loc_cd)
             DETAIL
              valid_ind = 1, locstr = cv.display
             WITH nocounter
            ;end select
            IF (valid_ind=1)
             SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
             SET stat = alterlist(reply->rowlist,row_tot_cnt)
             SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
             SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
             SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "bmdi_look_back_min"
             SET reply->rowlist[row_tot_cnt].celllist[3].string_value = ">= 15 and <= 60"
             SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
             SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
             SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
             SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
             SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
             SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            ENDIF
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWFORWARDMIN"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWFORWARDMIN")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=bmdi_look_forward_min")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET cap_value = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value != 5)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "bmdi_look_forward_min"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "5"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=bmdi_look_forward_min")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET cap_value = 0
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value != 5)
           SET valid_ind = 0
           SET pos_cd = cnvtreal(grpstr)
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "bmdi_look_forward_min"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "5"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=bmdi_look_forward_min")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET cap_value = 0
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value != 5)
           SET valid_ind = 0
           SET a = findstring("^",grpstr)
           SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
           SET b = textlen(grpstr)
           SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET valid_ind = 0
            SELECT INTO "nl:"
             FROM code_value cv
             PLAN (cv
              WHERE cv.code_value=loc_cd)
             DETAIL
              valid_ind = 1, locstr = cv.display
             WITH nocounter
            ;end select
            IF (valid_ind=1)
             SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
             SET stat = alterlist(reply->rowlist,row_tot_cnt)
             SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
             SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
             SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "bmdi_look_forward_min"
             SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "5"
             SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
             SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
             SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
             SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
             SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
             SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            ENDIF
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DOCFLOWSHEETORDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DOCFLOWSHEETORDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs n,
      detail_prefs d,
      application a
     PLAN (n
      WHERE n.pvc_name IN ("R_TIME_SORT", "MAR_TIME_SORT", "C_TIME_SORT", "LV_TIME_SORT")
       AND n.active_ind=1
       AND n.parent_entity_name="DETAIL_PREFS")
      JOIN (d
      WHERE d.detail_prefs_id=n.parent_entity_id
       AND d.position_cd=0
       AND d.prsnl_id=0
       AND d.active_ind=1)
      JOIN (a
      WHERE a.application_number=d.application_number)
     ORDER BY n.pvc_value, n.pvc_name, a.description
     HEAD a.description
      o = 0
     HEAD n.pvc_name
      o = 0
     HEAD n.pvc_value
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "chrono_time_sort", reply->rowlist[row_tot_cnt].celllist[3].
      string_value = "Setting should be defined the same",
      reply->rowlist[row_tot_cnt].celllist[5].string_value = n.pvc_name, reply->rowlist[row_tot_cnt].
      celllist[6].string_value = a.description, reply->rowlist[row_tot_cnt].celllist[12].string_value
       = d.view_name,
      reply->rowlist[row_tot_cnt].celllist[13].string_value = d.comp_name, reply->rowlist[row_tot_cnt
      ].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
      string_value = resolution_txt
      IF (n.pvc_value="1")
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Reverse Chronological"
      ELSE
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Chronological"
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs n,
      app_prefs ap,
      application a
     PLAN (n
      WHERE n.pvc_name IN ("R_TIME_SORT", "MAR_TIME_SORT", "C_TIME_SORT", "LV_TIME_SORT")
       AND n.active_ind=1
       AND n.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=n.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     ORDER BY n.pvc_value, n.pvc_name, a.description
     HEAD a.description
      o = 0
     HEAD n.pvc_name
      o = 0
     HEAD n.pvc_value
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "chrono_time_sort", reply->rowlist[row_tot_cnt].celllist[3].
      string_value = "Setting should be defined the same",
      reply->rowlist[row_tot_cnt].celllist[5].string_value = n.pvc_name, reply->rowlist[row_tot_cnt].
      celllist[6].string_value = a.description, reply->rowlist[row_tot_cnt].celllist[14].string_value
       = "PrefMaint",
      reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      IF (n.pvc_value="1")
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Reverse Chronological"
      ELSE
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Chronological"
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs n,
      detail_prefs d,
      application a,
      code_value cv,
      prsnl p
     PLAN (n
      WHERE n.pvc_name IN ("R_TIME_SORT", "MAR_TIME_SORT", "C_TIME_SORT", "LV_TIME_SORT")
       AND n.active_ind=1
       AND n.parent_entity_name="DETAIL_PREFS")
      JOIN (d
      WHERE d.detail_prefs_id=n.parent_entity_id
       AND d.position_cd > 0
       AND d.active_ind=1)
      JOIN (a
      WHERE a.application_number=d.application_number)
      JOIN (cv
      WHERE cv.code_value=d.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=d.position_cd)
     ORDER BY n.pvc_value, n.pvc_name, a.description,
      cv.display
     HEAD a.description
      o = 0
     HEAD n.pvc_value
      o = 0
     HEAD n.pvc_name
      o = 0
     HEAD cv.display
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "chrono_time_sort", reply->rowlist[row_tot_cnt].celllist[3].
      string_value = "Setting should be defined the same",
      reply->rowlist[row_tot_cnt].celllist[5].string_value = n.pvc_name, reply->rowlist[row_tot_cnt].
      celllist[6].string_value = a.description, reply->rowlist[row_tot_cnt].celllist[7].string_value
       = cv.display,
      reply->rowlist[row_tot_cnt].celllist[12].string_value = d.view_name, reply->rowlist[row_tot_cnt
      ].celllist[13].string_value = d.comp_name, reply->rowlist[row_tot_cnt].celllist[14].
      string_value = "PrefMaint",
      reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      IF (n.pvc_value="1")
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Reverse Chronological"
      ELSE
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Chronological"
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs n,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (n
      WHERE n.pvc_name IN ("R_TIME_SORT", "MAR_TIME_SORT", "C_TIME_SORT", "LV_TIME_SORT")
       AND n.active_ind=1
       AND n.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=n.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY n.pvc_value, n.pvc_name, a.description,
      cv.display
     HEAD a.description
      o = 0
     HEAD n.pvc_value
      o = 0
     HEAD n.pvc_name
      o = 0
     HEAD cv.display
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "chrono_time_sort", reply->rowlist[row_tot_cnt].celllist[3].
      string_value = "Setting should be defined the same",
      reply->rowlist[row_tot_cnt].celllist[5].string_value = n.pvc_name, reply->rowlist[row_tot_cnt].
      celllist[6].string_value = a.description, reply->rowlist[row_tot_cnt].celllist[7].string_value
       = cv.display,
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
      IF (n.pvc_value="1")
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Reverse Chronological"
      ELSE
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Chronological"
      ENDIF
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=chrono_time_sort")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "chrono_time_sort"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
          "Setting should be defined the same"
          IF (cnvtint(trim(xvalue))=0)
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Reverse Chronological"
          ELSE
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Chronological"
          ENDIF
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=chrono_time_sort")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "chrono_time_sort"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
           "Setting should be defined the same"
           IF (cnvtint(trim(xvalue))=0)
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Reverse Chronological"
           ELSE
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Chronological"
           ENDIF
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=chrono_time_sort")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "chrono_time_sort"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
            "Setting should be defined the same"
            IF (cnvtint(trim(xvalue))=0)
             SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Reverse Chronological"
            ELSE
             SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Chronological"
            ENDIF
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="MEDTYPECONPRES"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="MEDTYPECONPRES")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=autocanceldconcnvttorx")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=1)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "autocanceldconcnvttorx"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=autocanceldconcnvttorx")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=1)
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "autocanceldconcnvttorx"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=autocanceldconcnvttorx")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=1)
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "autocanceldconcnvttorx"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="MEDTYPEINPAT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="MEDTYPEINPAT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=autosuspendoncnvttoinpt")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=0)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "autosuspendoncnvttoinpt"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=autosuspendoncnvttoinpt")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=0)
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "autosuspendoncnvttoinpt"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=autosuspendoncnvttoinpt")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=0)
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "autosuspendoncnvttoinpt"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCARERESBYTMFRM"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCARERESBYTMFRM")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=retrieve_type")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtupper(trim(xvalue)) IN ("ADM TO CURRENT", "CLINICAL RANGE", "LAST X RESULTS"))
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "retrieve_type"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
          "not = Adm to current, Clinical range, or Last x results"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=retrieve_type")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtupper(trim(xvalue)) IN ("ADM TO CURRENT", "CLINICAL RANGE", "LAST X RESULTS"))
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "retrieve_type"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
           "not = Adm to current, Clinical range, or Last x results"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PreferenceManager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=retrieve_type")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtupper(trim(xvalue)) IN ("ADM TO CURRENT", "CLINICAL RANGE", "LAST X RESULTS"))
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "retrieve_type"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
            "not = Adm to current, Clinical range, or Last x results"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="IVIEWTMFRAME"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="IVIEWTMFRAME")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=last_x_hours")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET cap_value = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value > 24)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "last_x_hours"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 24"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=last_x_hours")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET cap_value = 0
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value > 24)
           SET valid_ind = 0
           SET pos_cd = cnvtreal(grpstr)
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "last_x_hours"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 24"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=last_x_hours")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET cap_value = 0
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value > 24)
           SET valid_ind = 0
           SET a = findstring("^",grpstr)
           SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
           SET b = textlen(grpstr)
           SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
           SELECT INTO "nl:"
            FROM code_value cv,
             prsnl p
            PLAN (cv
             WHERE cv.code_value=pos_cd
              AND cv.active_ind=1)
             JOIN (p
             WHERE p.position_cd=cv.code_value
              AND p.active_ind=1)
            DETAIL
             valid_ind = 1, posstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET valid_ind = 0
            SELECT INTO "nl:"
             FROM code_value cv
             PLAN (cv
              WHERE cv.code_value=loc_cd)
             DETAIL
              valid_ind = 1, locstr = cv.display
             WITH nocounter
            ;end select
            IF (valid_ind=1)
             SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
             SET stat = alterlist(reply->rowlist,row_tot_cnt)
             SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
             SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
             SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "last_x_hours"
             SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 24"
             SET reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(cap_value))
             SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
             SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
             SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
             SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
             SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            ENDIF
           ENDIF
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETADVANCEDSCHED"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETADVANCEDSCHED")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enablemanageschedule")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=0)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "enablemanageschedule"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 0"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enablemanageschedule")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=0)
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "enablemanageschedule"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 0"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enablemanageschedule")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=orderentry")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=0)
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "enablemanageschedule"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 0"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETENCTRFILTER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETENCTRFILTER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE temp_value = vc
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=encntr_filter")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=intake and output")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET user_id = 0
    SET pos_cd = 0
    SET loc_cd = 0
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,255)
      SET j = 0
      SET i = 0
      SET l = 0
      SET i = findstring("prefcontext=reference",dnstr)
      SET j = findstring("prefcontext=user",dnstr)
      SET l = findstring("prefcontext=app",dnstr)
      IF (i=0
       AND j=0
       AND l=0)
       SET a = findstring("prefgroup=",dnstr,1,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefcontext=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,(b+ 1))
       SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefgroup=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET acnt = 0
       SET stat = uar_prefgetentryattrcount(hentry,acnt)
       FOR (y = 0 TO (acnt - 1))
         SET hattr = uar_prefgetentryattr(hentry,y)
         SET valcnt = 0
         SET stat = uar_prefgetattrvalcount(hattr,valcnt)
         FOR (z = 0 TO (valcnt - 1))
           DECLARE xvalue = c255 WITH noconstant("")
           SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
           IF (xvalue="0*")
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "encntr_filter"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 0"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Intake and Output Tool"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            IF (cxtstr="position")
             SET pos_cd = cnvtreal(grpstr)
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               jj = 0, reply->rowlist[row_tot_cnt].celllist[7].string_value = c.display
              WITH nocounter
             ;end select
            ENDIF
            IF (cxtstr="position location")
             SET a = findstring("^",grpstr)
             SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
             SET b = textlen(grpstr)
             SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               posstr = c.display
              WITH nocounter
             ;end select
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=loc_cd)
              DETAIL
               locstr = c.display
              WITH nocounter
             ;end select
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
            ENDIF
           ENDIF
         ENDFOR
       ENDFOR
      ENDIF
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETIVFLUIDS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETIVFLUIDS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE temp_value = vc
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=iv_integration")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=intake and output")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET user_id = 0
    SET pos_cd = 0
    SET loc_cd = 0
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,255)
      SET j = 0
      SET i = 0
      SET l = 0
      SET i = findstring("prefcontext=reference",dnstr)
      SET j = findstring("prefcontext=user",dnstr)
      SET l = findstring("prefcontext=app",dnstr)
      IF (i=0
       AND j=0
       AND l=0)
       SET a = findstring("prefgroup=",dnstr,1,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefcontext=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,(b+ 1))
       SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefgroup=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET acnt = 0
       SET stat = uar_prefgetentryattrcount(hentry,acnt)
       FOR (y = 0 TO (acnt - 1))
         SET hattr = uar_prefgetentryattr(hentry,y)
         SET valcnt = 0
         SET stat = uar_prefgetattrvalcount(hattr,valcnt)
         FOR (z = 0 TO (valcnt - 1))
           DECLARE xvalue = c255 WITH noconstant("")
           SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
           IF (xvalue="0*")
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "iv_integration"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 0"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Intake and Output Tool"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            IF (cxtstr="position")
             SET pos_cd = cnvtreal(grpstr)
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               jj = 0, reply->rowlist[row_tot_cnt].celllist[7].string_value = c.display
              WITH nocounter
             ;end select
            ENDIF
            IF (cxtstr="position location")
             SET a = findstring("^",grpstr)
             SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
             SET b = textlen(grpstr)
             SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               posstr = c.display
              WITH nocounter
             ;end select
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=loc_cd)
              DETAIL
               locstr = c.display
              WITH nocounter
             ;end select
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
            ENDIF
           ENDIF
         ENDFOR
       ENDFOR
      ENDIF
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETVOLLOOKBACK"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETVOLLOOKBACK")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=default_volume_lookback_mins")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 60)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "default_volume_lookback_mins"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 60"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=default_volume_lookback_mins")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 60)
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "default_volume_lookback_mins"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 60"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=default_volume_lookback_mins")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 60)
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "default_volume_lookback_mins"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 60"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETOFFSETBACK"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETOFFSETBACK")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=offset_back")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 2)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "offset_back"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 2"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=offset_back")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 2)
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "offset_back"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 2"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=offset_back")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 2)
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "offset_back"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 2"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETOFFSETFORWARD"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETOFFSETFORWARD")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE temp_value = vc
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=offset_forward")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=intake and output")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET user_id = 0
    SET pos_cd = 0
    SET loc_cd = 0
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,255)
      SET j = 0
      SET i = 0
      SET l = 0
      SET i = findstring("prefcontext=reference",dnstr)
      SET j = findstring("prefcontext=user",dnstr)
      SET l = findstring("prefcontext=app",dnstr)
      IF (i=0
       AND j=0
       AND l=0)
       SET a = findstring("prefgroup=",dnstr,1,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefcontext=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,(b+ 1))
       SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefgroup=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET acnt = 0
       SET stat = uar_prefgetentryattrcount(hentry,acnt)
       FOR (y = 0 TO (acnt - 1))
         SET hattr = uar_prefgetentryattr(hentry,y)
         SET valcnt = 0
         SET stat = uar_prefgetattrvalcount(hattr,valcnt)
         FOR (z = 0 TO (valcnt - 1))
           DECLARE xvalue = c255 WITH noconstant("")
           SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
           IF (cnvtint(trim(xvalue)) > 1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "offset_forward"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 1"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            IF (cxtstr="position")
             SET pos_cd = cnvtreal(grpstr)
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               jj = 0, reply->rowlist[row_tot_cnt].celllist[7].string_value = c.display
              WITH nocounter
             ;end select
            ENDIF
            IF (cxtstr="position location")
             SET a = findstring("^",grpstr)
             SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
             SET b = textlen(grpstr)
             SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=pos_cd)
              DETAIL
               posstr = c.display
              WITH nocounter
             ;end select
             SELECT INTO "nl:"
              FROM code_value c
              PLAN (c
               WHERE c.code_value=loc_cd)
              DETAIL
               locstr = c.display
              WITH nocounter
             ;end select
             SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
               locstr))
            ENDIF
           ENDIF
         ENDFOR
       ENDFOR
      ENDIF
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETENHANCEDLOADING"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETENHANCEDLOADING")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=io enhanced loading")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="0 - Standard Loading")
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "io enhanced loading"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1 - IV Loading"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=io enhanced loading")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="0 - Standard Loading")
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "io enhanced loading"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1 - IV Loading"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=io enhanced loading")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="0 - Standard Loading")
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "io enhanced loading"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1 - IV Loading"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETADMINSEARCH"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETADMINSEARCH")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enable admin to current search io")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="1 - Enabled")
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value =
          "enable admin to current search io"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1 - Enabled"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enable admin to current search io")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="1 - Enabled")
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value =
           "enable admin to current search io"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1 - Enabled"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=enable admin to current search io")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="1 - Enabled")
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value =
            "enable admin to current search io"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1 - Enabled"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CARENETRESULTCAP2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CARENETRESULTCAP2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=result cap io")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 500)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "result cap io"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 500"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=result cap io")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 500)
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "result cap io"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 500"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position location,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=result cap io")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    DECLARE locstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET loc_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue)) > 500)
          SET valid_ind = 0
          SET a = findstring("^",grpstr)
          SET pos_cd = cnvtreal(substring(1,(a - 1),grpstr))
          SET b = textlen(grpstr)
          SET loc_cd = cnvtreal(substring((a+ 1),((b - a) - 1),grpstr))
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=loc_cd)
            DETAIL
             valid_ind = 1, locstr = cv.display
            WITH nocounter
           ;end select
           IF (valid_ind=1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "result cap io"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<= 500"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(posstr),"/",trim(
              locstr))
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARMEDDOSE2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARMEDDOSE2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      emar_fail_ind = 0
      IF (isnumeric(nvp.pvc_value)=0)
       emar_fail_ind = 1
      ELSE
       IF (cnvtint(trim(nvp.pvc_value)) < 4)
        emar_fail_ind = 1
       ENDIF
      ENDIF
      IF (emar_fail_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = ">= 4",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      emar_fail_ind = 0
      IF (isnumeric(nvp.pvc_value)=0)
       emar_fail_ind = 1
      ELSE
       IF (cnvtint(trim(nvp.pvc_value)) < 4)
        emar_fail_ind = 1
       ENDIF
      ENDIF
      IF (emar_fail_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = ">= 4",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      emar_fail_ind = 0
      IF (isnumeric(nvp.pvc_value)=0)
       emar_fail_ind = 1
      ELSE
       IF (cnvtint(trim(nvp.pvc_value)) < 4)
        emar_fail_ind = 1
       ENDIF
      ENDIF
      IF (emar_fail_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = ">= 4",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      emar_fail_ind = 0
      IF (isnumeric(nvp.pvc_value)=0)
       emar_fail_ind = 1
      ELSE
       IF (cnvtint(trim(nvp.pvc_value)) < 4)
        emar_fail_ind = 1
       ENDIF
      ENDIF
      IF (emar_fail_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = ">= 4",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARLOOKBACKDAYS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARLOOKBACKDAYS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     prev_admin_lookback = cnvtint(trim(nvp.pvc_value))
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_TASK_PREV_ADMIN_LOOKBACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (((prev_admin_lookback < 1) OR (prev_admin_lookback > 5)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_TASK_PREV_ADMIN_LOOKBACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1,2,3,4, or 5"
       IF (nvp.pvc_value="0")
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "All"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = concat(trim(a.description)), reply->rowlist[
       row_tot_cnt].celllist[12].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     prev_admin_lookback = cnvtint(trim(nvp.pvc_value))
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_TASK_PREV_ADMIN_LOOKBACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (((prev_admin_lookback < 1) OR (prev_admin_lookback > 5)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_TASK_PREV_ADMIN_LOOKBACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1,2,3,4, or 5"
       IF (nvp.pvc_value="0")
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "All"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = concat(trim(a.description)), reply->rowlist[
       row_tot_cnt].celllist[12].string_value = dp.view_name,
       reply->rowlist[row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[
       row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15]
       .string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     prev_admin_lookback = cnvtint(trim(nvp.pvc_value))
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_TASK_PREV_ADMIN_LOOKBACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (((prev_admin_lookback < 1) OR (prev_admin_lookback > 5)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_TASK_PREV_ADMIN_LOOKBACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1,2,3,4, or 5"
       IF (nvp.pvc_value="0")
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "All"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt]
       .celllist[6].string_value = concat(trim(a.description)), reply->rowlist[row_tot_cnt].celllist[
       7].string_value = concat(trim(cv.display)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     prev_admin_lookback = cnvtint(trim(nvp.pvc_value))
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_TASK_PREV_ADMIN_LOOKBACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (((prev_admin_lookback < 1) OR (prev_admin_lookback > 5)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_TASK_PREV_ADMIN_LOOKBACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1,2,3,4, or 5"
       IF (nvp.pvc_value="0")
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "All"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt]
       .celllist[6].string_value = concat(trim(a.description)), reply->rowlist[row_tot_cnt].celllist[
       7].string_value = concat(trim(cv.display)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARFORMCHART"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARFORMCHART")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="REFRESH_AFTER_FORM_CHARTING"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.prsnl_id=0
       AND dp.position_cd=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "REFRESH_AFTER_FORM_CHARTING", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="REFRESH_AFTER_FORM_CHARTING"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.prsnl_id=0
       AND ap.position_cd=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "REFRESH_AFTER_FORM_CHARTING", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="REFRESH_AFTER_FORM_CHARTING"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) > 0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "REFRESH_AFTER_FORM_CHARTING", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="REFRESH_AFTER_FORM_CHARTING"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) > 0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "REFRESH_AFTER_FORM_CHARTING", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARLOOKBACKHRS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARLOOKBACKHRS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_BACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) > 48)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_BACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "<= 48",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_BACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) > 48)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_BACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "<= 48",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_BACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) > 48)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_BACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "<= 48",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_BACK"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) > 48)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_BACK", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "<= 48",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="MEDLISTENCNTR2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="MEDLISTENCNTR2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_tab_exists = 0
    SET surginet_tab_exists = 0
    SET firstnet_tab_exists = 0
    SET powerchart_pref_exists = 0
    SET surginet_pref_exists = 0
    SET firstnet_pref_exists = 0
    DECLARE powerchart_pref_value = vc
    DECLARE surginet_pref_value = vc
    DECLARE firstnet_pref_value = vc
    SET powerchart_pref_value = " "
    SET surginet_pref_value = " "
    SET firstnet_pref_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      view_prefs vp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp.pvc_name=outerjoin("MED_LIST_ENCNTR_FILTER")
       AND nvp.active_ind=outerjoin(1))
      JOIN (vp
      WHERE vp.application_number=outerjoin(ap.application_number)
       AND vp.position_cd=outerjoin(0)
       AND vp.prsnl_id=outerjoin(0)
       AND vp.active_ind=outerjoin(1)
       AND vp.frame_type=outerjoin("CHART")
       AND vp.view_name=outerjoin("ORDERMEDLIST"))
     DETAIL
      IF (ap.application_number=600005)
       IF (vp.view_prefs_id > 0)
        powerchart_tab_exists = 1
       ENDIF
       IF (nvp.name_value_prefs_id > 0)
        powerchart_pref_exists = 1, powerchart_pref_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (vp.view_prefs_id > 0)
        surginet_tab_exists = 1
       ENDIF
       IF (nvp.name_value_prefs_id > 0)
        surginet_pref_exists = 1, surginet_pref_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (vp.view_prefs_id > 0)
        firstnet_tab_exists = 1
       ENDIF
       IF (nvp.name_value_prefs_id > 0)
        firstnet_pref_exists = 1, firstnet_pref_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_tab_exists=1
     AND powerchart_pref_value != "ALL")
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MED_LIST_ENCNTR_FILTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALL"
     IF (powerchart_pref_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_pref_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_tab_exists=1
     AND surginet_pref_value != "ALL")
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MED_LIST_ENCNTR_FILTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALL"
     IF (surginet_pref_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_pref_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_tab_exists=1
     AND firstnet_pref_value != "ALL")
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MED_LIST_ENCNTR_FILTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALL"
     IF (firstnet_pref_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_pref_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      prsnl p,
      app_prefs ap,
      name_value_prefs nvp,
      view_prefs vp
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (ap
      WHERE ap.position_cd=outerjoin(cv.code_value)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp
      WHERE nvp.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp.pvc_name=outerjoin("MED_LIST_ENCNTR_FILTER")
       AND nvp.active_ind=outerjoin(1))
      JOIN (vp
      WHERE vp.application_number=outerjoin(ap.application_number)
       AND vp.position_cd=outerjoin(ap.position_cd)
       AND vp.prsnl_id=outerjoin(0)
       AND vp.active_ind=outerjoin(1)
       AND vp.frame_type=outerjoin("CHART")
       AND vp.view_name=outerjoin("ORDERMEDLIST"))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      powerchart_pos_tab_exists = 0, surginet_pos_tab_exists = 0, firstnet_pos_tab_exists = 0
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (vp.view_prefs_id > 0)
        IF (nvp.name_value_prefs_id > 0
         AND nvp.pvc_value != "ALL")
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MED_LIST_ENCNTR_FILTER", reply->rowlist[row_tot_cnt
         ].celllist[3].string_value = "ALL",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Position"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
         row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].
         string_value = "",
         reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
         row_tot_cnt].celllist[15].string_value = resolution_txt
        ELSEIF (nvp.name_value_prefs_id=0)
         IF (((ap.application_number=600005
          AND powerchart_pref_value != "ALL") OR (((ap.application_number=820000
          AND surginet_pref_value != "ALL") OR (ap.application_number=4250111
          AND firstnet_pref_value != "ALL")) )) )
          row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
          stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
          reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
          row_tot_cnt].celllist[2].string_value = "MED_LIST_ENCNTR_FILTER", reply->rowlist[
          row_tot_cnt].celllist[3].string_value = "ALL"
          IF (ap.application_number=600005)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_pref_value, reply->
           rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
          ELSEIF (ap.application_number=820000)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_pref_value, reply->
           rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
          ELSEIF (ap.application_number=4250111)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_pref_value, reply->
           rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
          row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12
          ].string_value = "",
          reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
          celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
          string_value = resolution_txt
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (pc=0
       AND powerchart_pos_tab_exists=1
       AND powerchart_pref_value != "ALL")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_LIST_ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "ALL",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_pref_value, reply->rowlist[
       row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Application",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (sn=0
       AND surginet_pos_tab_exists=1
       AND surginet_pref_value != "ALL")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_LIST_ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "ALL",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_pref_value, reply->rowlist[
       row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Application",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (fn=0
       AND firstnet_pos_tab_exists=1
       AND firstnet_pref_value != "ALL")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_LIST_ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "ALL",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_pref_value, reply->rowlist[
       row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Application",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="MULTUMINTCHECK2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="MULTUMINTCHECK2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULINTR"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ENDIF
       powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ENDIF
       surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ENDIF
       firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULINTR"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULINTR"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULINTR"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULINTR"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "1")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MULINTR", reply->rowlist[row_tot_cnt].celllist[3].string_value
         = "1",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MULINTR", reply->rowlist[row_tot_cnt].celllist[3].
         string_value = "1"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULINTR", reply->rowlist[row_tot_cnt].celllist[3].string_value =
       "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULINTR", reply->rowlist[row_tot_cnt].celllist[3].string_value =
       "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULINTR", reply->rowlist[row_tot_cnt].celllist[3].string_value =
       "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCAREFREETXTALLERGY2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCAREFREETXTALLERGY2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLERGY_FREETEXT_STATUS"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1, powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1, surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1, firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_pref_row_exists=0) OR (powerchart_value != "3")) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_pref_row_exists=0) OR (surginet_value != "3")) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_pref_row_exists=0) OR (firstnet_value != "3")) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv
      WHERE pv.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv.privilege_cd=outerjoin(rxverify_cd)
       AND pv.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLERGY_FREETEXT_STATUS"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (pv.privilege_id > 0
       AND pv.priv_value_cd=yes_cd)
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "2"
        AND nvp.pvc_value != "3")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS", reply->rowlist[row_tot_cnt].celllist[
        3].string_value = "2 or 3",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "RXVerify"
        IF (pv.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default No"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_pref_row_exists=1
         AND powerchart_value != "2"
         AND powerchart_value != "3") OR (((ap.application_number=820000
         AND surginet_pref_row_exists=1
         AND surginet_value != "2"
         AND surginet_value != "3") OR (ap.application_number=4250111
         AND firstnet_pref_row_exists=1
         AND firstnet_value != "2"
         AND firstnet_value != "3")) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "2 or 3"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "RXVerify"
         IF (pv.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default No"
         ELSEIF (pv.privilege_id > 0
          AND pv.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv.privilege_id > 0
          AND pv.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ELSE
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "3")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS", reply->rowlist[row_tot_cnt].celllist[
        3].string_value = "3",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "RXVerify"
        IF (pv.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default No"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_pref_row_exists=1
         AND powerchart_value != "3") OR (((ap.application_number=820000
         AND surginet_pref_row_exists=1
         AND surginet_value != "3") OR (ap.application_number=4250111
         AND firstnet_pref_row_exists=1
         AND firstnet_value != "3")) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "3"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "RXVerify"
         IF (pv.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default No"
         ELSEIF (pv.privilege_id > 0
          AND pv.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv.privilege_id > 0
          AND pv.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (pc=0)
       IF (((powerchart_pref_row_exists=0) OR (((powerchart_pref_row_exists=1
        AND priv_exists_ind=1
        AND powerchart_value != "2"
        AND powerchart_value != "3") OR (powerchart_pref_row_exists=1
        AND priv_exists_ind=0
        AND powerchart_value != "3")) )) )
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS", reply->rowlist[row_tot_cnt].celllist[
        3].string_value = "3"
        IF (powerchart_pref_row_exists=0)
         reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
        ELSE
         reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
        row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
        celllist[7].string_value = cv.display,
        reply->rowlist[row_tot_cnt].celllist[8].string_value = "RXVerify"
        IF (pv.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default No"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ENDIF
      ENDIF
      IF (sn=0)
       IF (((surginet_pref_row_exists=0) OR (((surginet_pref_row_exists=1
        AND priv_exists_ind=1
        AND surginet_value != "2"
        AND surginet_value != "3") OR (surginet_pref_row_exists=1
        AND priv_exists_ind=0
        AND surginet_value != "3")) )) )
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS", reply->rowlist[row_tot_cnt].celllist[
        3].string_value = "3"
        IF (surginet_pref_row_exists=0)
         reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
        ELSE
         reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
        row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
        celllist[7].string_value = cv.display,
        reply->rowlist[row_tot_cnt].celllist[8].string_value = "RXVerify"
        IF (pv.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default No"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ENDIF
      ENDIF
      IF (fn=0)
       IF (((firstnet_pref_row_exists=0) OR (((firstnet_pref_row_exists=1
        AND priv_exists_ind=1
        AND firstnet_value != "2"
        AND firstnet_value != "3") OR (firstnet_pref_row_exists=1
        AND priv_exists_ind=0
        AND firstnet_value != "3")) )) )
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "ALLERGY_FREETEXT_STATUS", reply->rowlist[row_tot_cnt].celllist[
        3].string_value = "3"
        IF (firstnet_pref_row_exists=0)
         reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
        ELSE
         reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
        row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
        celllist[7].string_value = cv.display,
        reply->rowlist[row_tot_cnt].celllist[8].string_value = "RXVerify"
        IF (pv.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default No"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv.privilege_id > 0
         AND pv.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ENDIF
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCAREREVCHKLOAD"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCAREREVCHKLOAD")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="Reverse_Allergy_Check_On_Load"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.prsnl_id=0
       AND dp.position_cd=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "Reverse_Allergy_Check_On_Load", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "Cerner Practice Wizard or PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="Reverse_Allergy_Check_On_Load"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.prsnl_id=0
       AND ap.position_cd=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "Reverse_Allergy_Check_On_Load", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "Cerner Practice Wizard or PrefMaint", reply->rowlist[row_tot_cnt]
       .celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="Reverse_Allergy_Check_On_Load"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "Reverse_Allergy_Check_On_Load", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "Cerner Practice Wizard or PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="Reverse_Allergy_Check_On_Load"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "Reverse_Allergy_Check_On_Load", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "Cerner Practice Wizard or PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCAREMEDINTIO"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCAREMEDINTIO")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_INTEGRATION_IND"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) IN (0, 3))
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_INTEGRATION_IND", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not in (0,3)",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_INTEGRATION_IND"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) IN (0, 3))
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_INTEGRATION_IND", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not in (0,3)",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_INTEGRATION_IND"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) IN (0, 3))
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_INTEGRATION_IND", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not in (0,3)",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_INTEGRATION_IND"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) IN (0, 3))
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_INTEGRATION_IND", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not in (0,3)",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DECSUPPDRUGDRUGINT2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DECSUPPDRUGDRUGINT2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_DRUGINTERRUPTION"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="4")
        powerchart_found = 1
       ENDIF
       powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="4")
        surginet_found = 1
       ENDIF
       surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="4")
        firstnet_found = 1
       ENDIF
       firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DRUGINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "4"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DRUGINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "4"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DRUGINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "4"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_DRUGINTERRUPTION"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "4")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MUL_DRUGINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "4",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MUL_DRUGINTERRUPTION", reply->rowlist[row_tot_cnt].
         celllist[3].string_value = "4"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DRUGINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "4",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DRUGINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "4",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DRUGINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "4",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DECSUPPDRUGFOODINT2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DECSUPPDRUGFOODINT2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_FOODINTERRUPTION"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="3")
        powerchart_found = 1
       ENDIF
       powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="3")
        surginet_found = 1
       ENDIF
       surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="3")
        firstnet_found = 1
       ENDIF
       firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_FOODINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_FOODINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_FOODINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_FOODINTERRUPTION"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "3")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MUL_FOODINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "3",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MUL_FOODINTERRUPTION", reply->rowlist[row_tot_cnt].
         celllist[3].string_value = "3"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_FOODINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_FOODINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_FOODINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DECSUPPDRUGALLERGY"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DECSUPPDRUGALLERGY")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MUL_ALLERGYINTERRUPTION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_ALLERGYINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MUL_ALLERGYINTERRUPTION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_ALLERGYINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MUL_ALLERGYINTERRUPTION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_ALLERGYINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MUL_ALLERGYINTERRUPTION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_ALLERGYINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DECSUPPDUPTHERAPYINT2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DECSUPPDUPTHERAPYINT2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 1
    SET surginet_found = 1
    SET firstnet_found = 1
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_DUPINTERRUPTION"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 0
       ENDIF
       powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 0
       ENDIF
       surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 0
       ENDIF
       firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DUPINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DUPINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DUPINTERRUPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_DUPINTERRUPTION"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value="1")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MUL_DUPINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "0",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MUL_DUPINTERRUPTION", reply->rowlist[row_tot_cnt].
         celllist[3].string_value = "0"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DUPINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DUPINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DUPINTERRUPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DECSUPPOVERRIDEREASON2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DECSUPPOVERRIDEREASON2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SET powerchart_style_found = 0
    SET surginet_style_found = 0
    SET firstnet_style_found = 0
    SET powerchart_override_found = 0
    SET surginet_override_found = 0
    SET firstnet_override_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name IN ("MUL_DS_STYLE", "MUL_OVERRIDEREQUIRED")
       AND nvp.active_ind=1)
     DETAIL
      IF (nvp.pvc_name="MUL_DS_STYLE")
       IF (ap.application_number=600005
        AND nvp.pvc_value="1")
        powerchart_style_found = 1
       ELSEIF (ap.application_number=820000
        AND nvp.pvc_value="1")
        surginet_style_found = 1
       ELSEIF (ap.application_number=4250111
        AND nvp.pvc_value="1")
        firstnet_style_found = 1
       ENDIF
      ELSEIF (nvp.pvc_name="MUL_OVERRIDEREQUIRED")
       IF (ap.application_number=600005)
        powerchart_pref_row_exists = 1
        IF (nvp.pvc_value="1")
         powerchart_override_found = 1
        ENDIF
        powerchart_value = nvp.pvc_value
       ELSEIF (ap.application_number=820000)
        surginet_pref_row_exists = 1
        IF (nvp.pvc_value="1")
         surginet_override_found = 1
        ENDIF
        surginet_value = nvp.pvc_value
       ELSEIF (ap.application_number=4250111)
        firstnet_pref_row_exists = 1
        IF (nvp.pvc_value="1")
         firstnet_override_found = 1
        ENDIF
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_style_found=1
     AND powerchart_override_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_style_found=1
     AND surginet_override_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_style_found=1
     AND firstnet_override_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp1,
      name_value_prefs nvp2,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(cv.code_value)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp1
      WHERE nvp1.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp1.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp1.pvc_name=outerjoin("MUL_DS_STYLE")
       AND nvp1.active_ind=outerjoin(1))
      JOIN (nvp2
      WHERE nvp2.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp2.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp2.pvc_name=outerjoin("MUL_OVERRIDEREQUIRED")
       AND nvp2.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value="1") OR (nvp1.name_value_prefs_id=0
          AND powerchart_style_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "1")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt
           ].celllist[3].string_value = "1",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = powerchart_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND powerchart_override_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt
           ].celllist[3].string_value = "1"
           IF (powerchart_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value="1") OR (nvp1.name_value_prefs_id=0
          AND surginet_style_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "1")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt
           ].celllist[3].string_value = "1",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = surginet_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND surginet_override_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt
           ].celllist[3].string_value = "1"
           IF (surginet_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value="1") OR (nvp1.name_value_prefs_id=0
          AND firstnet_style_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "1")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt
           ].celllist[3].string_value = "1",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = firstnet_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND firstnet_override_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt
           ].celllist[3].string_value = "1"
           IF (firstnet_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND powerchart_style_found=1
       AND powerchart_override_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1"
       IF (powerchart_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND surginet_style_found=1
       AND surginet_override_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1"
       IF (surginet_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND firstnet_style_found=1
       AND firstnet_override_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_OVERRIDEREQUIRED", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1"
       IF (firstnet_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DECSUPPDURGDRUGSEV2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DECSUPPDURGDRUGSEV2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_INTRSEVERITY"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="5")
        powerchart_found = 1
       ENDIF
       powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="5")
        surginet_found = 1
       ENDIF
       surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="5")
        firstnet_found = 1
       ENDIF
       firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_INTRSEVERITY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "5"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_INTRSEVERITY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "5"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_INTRSEVERITY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "5"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_INTRSEVERITY"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "5")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MUL_INTRSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "5",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MUL_INTRSEVERITY", reply->rowlist[row_tot_cnt].
         celllist[3].string_value = "5"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_INTRSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "5",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_INTRSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "5",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_INTRSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "5",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DECSUPPDRUGFOODSEV2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DECSUPPDRUGFOODSEV2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULFSEVERITY"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="3")
        powerchart_found = 1
       ENDIF
       powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="3")
        surginet_found = 1
       ENDIF
       surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="3")
        firstnet_found = 1
       ENDIF
       firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULFSEVERITY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULFSEVERITY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULFSEVERITY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULFSEVERITY"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "3")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MULFSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "3",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MULFSEVERITY", reply->rowlist[row_tot_cnt].
         celllist[3].string_value = "3"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULFSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULFSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULFSEVERITY", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARMEDVERIFY"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARMEDVERIFY")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_VERIFY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS"
       AND nvp.pvc_value IN ("0", "0-Not Required"))
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "MED_VERIFY", reply->rowlist[row_tot_cnt].celllist[3].string_value
       = "1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
      row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = concat(trim(a.description)),
      reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
       = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_VERIFY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.pvc_value IN ("0", "0-Not Required"))
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "MED_VERIFY", reply->rowlist[row_tot_cnt].celllist[3].string_value
       = "1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
      row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = concat(trim(a.description)),
      reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
      row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14]
      .string_value = "PrefMaint",
      reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_VERIFY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS"
       AND nvp.pvc_value IN ("0", "0-Not Required"))
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "MED_VERIFY", reply->rowlist[row_tot_cnt].celllist[3].string_value
       = "1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
      row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = concat(trim(a.description)),
      reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
      rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
      string_value = "PrefMaint",
      reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_VERIFY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.pvc_value IN ("0", "0-Not Required"))
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = "MED_VERIFY", reply->rowlist[row_tot_cnt].celllist[3].string_value
       = "1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
      row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = concat(trim(a.description)),
      reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
      rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
      celllist[13].string_value = dp.comp_name,
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARPERCISION"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARPERCISION")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) != 3)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) != 3)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) != 3)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MED_DOSAGE_PRECISION"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) != 3)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MED_DOSAGE_PRECISION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARENCTRSPECIFIC2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARENCTRSPECIFIC2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD a.application_number
      o = 0
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD a.application_number
      o = 0
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARDEFAULTHRSFWD2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARDEFAULTHRSFWD2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_FWD"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (((cnvtint(trim(nvp.pvc_value)) < 8) OR (cnvtint(trim(nvp.pvc_value)) > 13)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_FWD", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = ">= 8 and <=13",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_FWD"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (((cnvtint(trim(nvp.pvc_value)) < 8) OR (cnvtint(trim(nvp.pvc_value)) > 13)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_FWD", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = ">= 8 and <=13",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_FWD"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (((cnvtint(trim(nvp.pvc_value)) < 8) OR (cnvtint(trim(nvp.pvc_value)) > 13)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_FWD", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = ">= 8 and <=13",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_DEFAULT_HRS_FWD"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (((cnvtint(trim(nvp.pvc_value)) < 8) OR (cnvtint(trim(nvp.pvc_value)) > 13)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_DEFAULT_HRS_FWD", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = ">= 8 and <=13",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARTASKDISP"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARTASKDISP")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_TASK_DISPLAY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) != 2)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_TASK_DISPLAY", reply->rowlist[row_tot_cnt].celllist[3
       ].string_value = "2",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_TASK_DISPLAY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value)) != 2)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_TASK_DISPLAY", reply->rowlist[row_tot_cnt].celllist[3
       ].string_value = "2",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_TASK_DISPLAY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) != 2)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_TASK_DISPLAY", reply->rowlist[row_tot_cnt].celllist[3
       ].string_value = "2",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_SUMMARY_TASK_DISPLAY"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value)) != 2)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_SUMMARY_TASK_DISPLAY", reply->rowlist[row_tot_cnt].celllist[3
       ].string_value = "2",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMARUSEVIEW"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMARUSEVIEW")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_USE_VIEWS"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_USE_VIEWS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not = 0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_USE_VIEWS"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (cnvtint(trim(nvp.pvc_value))=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_USE_VIEWS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not = 0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_USE_VIEWS"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_USE_VIEWS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not = 0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="MAR_USE_VIEWS"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (cnvtint(trim(nvp.pvc_value))=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAR_USE_VIEWS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "not = 0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCARENCNTRFILTER2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCARENCNTRFILTER2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="ENCNTR_FILTER"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
     DETAIL
      IF (nvp.pvc_value != "FOCUS*")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "FOCUS-Selected Encounter",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a
     PLAN (nvp
      WHERE nvp.pvc_name="ENCNTR_FILTER"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (nvp.pvc_value != "FOCUS*")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "FOCUS-Selected Encounter",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[
       row_tot_cnt].celllist[13].string_value = dp.comp_name, reply->rowlist[row_tot_cnt].celllist[14
       ].string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      app_prefs ap,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="ENCNTR_FILTER"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="APP_PREFS")
      JOIN (ap
      WHERE ap.app_prefs_id=nvp.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=ap.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (nvp.pvc_value != "FOCUS*")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "FOCUS-Selected Encounter",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
       string_value = "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      application a,
      code_value cv,
      prsnl p
     PLAN (nvp
      WHERE nvp.pvc_name="ENCNTR_FILTER"
       AND nvp.active_ind=1
       AND nvp.parent_entity_name="DETAIL_PREFS")
      JOIN (dp
      WHERE dp.detail_prefs_id=nvp.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.active_ind=1
       AND p.position_cd=dp.position_cd)
     ORDER BY a.application_number, cv.display
     HEAD cv.display
      IF (nvp.pvc_value != "FOCUS*")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "FOCUS-Selected Encounter",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = concat(trim(a.description)),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(cv.display)), reply->
       rowlist[row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].
       celllist[13].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="RADREQDATE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="RADREQDATE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM rad_sys_controls r
     DETAIL
      IF (r.validate_req_date_ind != 1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "validate_req_date_ind", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(r.validate_req_date_ind
         )), reply->rowlist[row_tot_cnt].celllist[5].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[6].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "RadDBTools",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="RADAUTONOTE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="RADAUTONOTE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM rad_sys_controls r
     DETAIL
      IF (r.ret_auto_note_ind != 1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ret_auto_note_ind", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(r.validate_req_date_ind
         )), reply->rowlist[row_tot_cnt].celllist[5].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[6].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "RadDBTools",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="RADADDENDUM"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="RADADDENDUM")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM rad_sys_controls r
     DETAIL
      IF (r.addendum_pos_flag != 1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "addendum_pos_flag", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = trim(cnvtstring(r.validate_req_date_ind
         )), reply->rowlist[row_tot_cnt].celllist[5].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[6].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "RadDBTools",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="GLCRITRESCOMMENT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="GLCRITRESCOMMENT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dp,
      application a
     PLAN (dp
      WHERE dp.pref_domain="PATHNET GLB"
       AND dp.pref_section="RESULTENTRY"
       AND dp.pref_name="ReqCommForCriticalFlag")
      JOIN (a
      WHERE a.application_number=dp.application_nbr)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = dp.pref_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
       = "Enabled"
      IF (dp.pref_nbr=0)
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Disabled"
      ELSE
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Enabled"
      ENDIF
      reply->rowlist[row_tot_cnt].celllist[5].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[6].string_value = cnvtstring(dp.application_nbr), reply->rowlist[row_tot_cnt].
      celllist[7].string_value = a.description,
      reply->rowlist[row_tot_cnt].celllist[12].string_value = dp.pref_domain, reply->rowlist[
      row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
      string_value = "",
      reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = dp.pref_name
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Enabled"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Preference not defined"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="COREALLRESFLOW"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="COREALLRESFLOW")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      name_value_prefs nvp2,
      application a
     PLAN (dp
      WHERE dp.application_number IN (600005, 961000, 4250111, 610000, 820000)
       AND dp.active_ind=1
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.prsnl_id=0
       AND dp.position_cd=0)
      JOIN (nvp2
      WHERE nvp2.parent_entity_id=outerjoin(dp.detail_prefs_id)
       AND nvp2.parent_entity_name=outerjoin("DETAIL_PREFS")
       AND nvp2.pvc_name=outerjoin("R_EVENT_SET_NAME"))
      JOIN (nvp
      WHERE nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.pvc_name="R_RETRIEVE_YEAR_LIMIT"
       AND nvp.active_ind=1
       AND cnvtint(trim(nvp.pvc_value)) > 3)
      JOIN (a
      WHERE a.application_number=dp.application_number)
     DETAIL
      IF (((nvp2.pvc_value IN ("", " ", null)
       AND nvp2.active_ind=1) OR (nvp2.name_value_prefs_id=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = nvp.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "< 3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = cnvtstring(dp.application_number),
       reply->rowlist[row_tot_cnt].celllist[7].string_value = a.description, reply->rowlist[
       row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].celllist[13
       ].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs nvp,
      detail_prefs dp,
      name_value_prefs nvp2,
      application a,
      prsnl p,
      code_value c
     PLAN (dp
      WHERE dp.application_number IN (600005, 961000, 4250111, 610000, 820000)
       AND dp.active_ind=1
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET")
      JOIN (nvp2
      WHERE nvp2.parent_entity_id=outerjoin(dp.detail_prefs_id)
       AND nvp2.parent_entity_name=outerjoin("DETAIL_PREFS")
       AND nvp2.pvc_name=outerjoin("R_EVENT_SET_NAME"))
      JOIN (nvp
      WHERE nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.pvc_name="R_RETRIEVE_YEAR_LIMIT"
       AND nvp.active_ind=1
       AND cnvtint(trim(nvp.pvc_value)) > 3)
      JOIN (a
      WHERE a.application_number=dp.application_number
       AND a.active_ind=1)
      JOIN (c
      WHERE c.code_value=dp.position_cd
       AND c.active_ind=1)
      JOIN (p
      WHERE p.position_cd=c.code_value
       AND p.active_ind=1)
     ORDER BY a.description, c.display
     HEAD a.description
      set_ind = 1
     HEAD c.code_value
      IF (((nvp2.pvc_value IN ("", " ", null)
       AND nvp2.active_ind=1) OR (nvp2.name_value_prefs_id=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = nvp.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "< 3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = a.description,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = c.display, reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMMDRECALC"))
    SET resolution_txt = ""
    SET short_desc = ""
    SET fail_ind = 0
    DECLARE failed_txt = vc
    DECLARE app_txt = vc
    DECLARE pref_dom_txt = vc
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMMDRECALC")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM dm_prefs dp,
      application a
     PLAN (dp
      WHERE dp.pref_name="DOSECONVERSION"
       AND dp.pref_nbr != 1)
      JOIN (a
      WHERE a.application_number=dp.application_nbr
       AND a.active_ind=1)
     DETAIL
      fail_ind = 1, failed_txt = trim(cnvtstring(dp.pref_nbr)), app_txt = trim(a.description),
      pref_dom_txt = trim(dp.pref_domain)
     WITH nocounter
    ;end select
    IF (curqual=0)
     SET fail_ind = 1
     SET failed_txt = "Not defined"
    ENDIF
    IF (fail_ind=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DOSECONVERSION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = failed_txt
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = app_txt
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = pref_dom_txt
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Phadbtools"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCAREPLRESBKMRK"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCAREPLRESBKMRK")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="NEWRES_QUERY"
       AND np.active_ind=1)
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=600005
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not Set",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      code_value cv,
      prsnl p,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="NEWRES_QUERY"
       AND np.active_ind=1)
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=600005
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     ORDER BY a.description, cv.display
     HEAD a.description
      set_ind = 1
     HEAD cv.code_value
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not Set",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].string_value
       = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCAREPLBKMRK"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCAREPLBKMRK")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="BOOKMARK_EXCLUDE"
       AND np.active_ind=1)
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=600005
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not set",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      code_value cv,
      prsnl p,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="BOOKMARK_EXCLUDE"
       AND np.active_ind=1)
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=600005
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     ORDER BY a.description, cv.display
     HEAD a.description
      set_ind = 1
     HEAD cv.code_value
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not set",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].string_value
       = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EMAREOVERDUELBDAYS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EMAREOVERDUELBDAYS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET set_ind = 0
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="OVERDUE_LOOK_BACK_DAYS"
       AND np.active_ind=1)
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     DETAIL
      set_ind = 1, pval = cnvtint(trim(np.pvc_value))
      IF (((pval > 10) OR (pval=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "between 1 and 10",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = a.description,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      detail_prefs dp,
      application a
     PLAN (np
      WHERE np.parent_entity_name="DETAIL_PREFS"
       AND np.pvc_name="OVERDUE_LOOK_BACK_DAYS"
       AND np.active_ind=1)
      JOIN (dp
      WHERE dp.detail_prefs_id=np.parent_entity_id
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number
       AND a.active_ind=1)
     DETAIL
      set_ind = 1, pval = cnvtint(trim(np.pvc_value))
      IF (((pval > 10) OR (pval=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "between 1 and 10",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = a.description,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].celllist[13].
       string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      code_value cv,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="OVERDUE_LOOK_BACK_DAYS"
       AND np.active_ind=1)
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     ORDER BY ap.application_number, ap.position_cd
     HEAD ap.application_number
      set_ind = 1
     HEAD ap.position_cd
      pval = cnvtint(trim(np.pvc_value))
      IF (((pval > 10) OR (pval=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "between 1 and 10",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = a.description,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      detail_prefs dp,
      code_value cv,
      application a
     PLAN (np
      WHERE np.parent_entity_name="DETAIL_PREFS"
       AND np.pvc_name="OVERDUE_LOOK_BACK_DAYS"
       AND np.active_ind=1)
      JOIN (dp
      WHERE dp.detail_prefs_id=np.parent_entity_id
       AND dp.position_cd > 0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number
       AND a.active_ind=1)
     ORDER BY dp.application_number, dp.position_cd
     HEAD dp.application_number
      set_ind = 1
     HEAD dp.position_cd
      pval = cnvtint(trim(np.pvc_value))
      IF (((pval > 10) OR (pval=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "between 1 and 10",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = a.description,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].celllist[13].
       string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    IF (set_ind=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = overdue_look_back_days
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "between 1 and 10"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CORECHANGEUSER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CORECHANGEUSER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="CHANGEUSER"
       AND np.active_ind=1
       AND np.pvc_value IN ("1", "1-ON"))
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=4250111
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not = 1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      code_value cv,
      prsnl p,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="CHANGEUSER"
       AND np.active_ind=1
       AND np.pvc_value IN ("1", "1-ON"))
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=4250111
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     ORDER BY a.description, cv.display
     HEAD a.description
      set_ind = 1
     HEAD cv.code_value
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not = 1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].string_value
       = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CORESUSPENDUSER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CORESUSPENDUSER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="SUSPEND"
       AND np.active_ind=1
       AND np.pvc_value="1")
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=4250111
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not = 1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      code_value cv,
      prsnl p,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="SUSPEND"
       AND np.active_ind=1
       AND np.pvc_value="1")
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=4250111
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     ORDER BY a.description, cv.display
     HEAD a.description
      set_ind = 1
     HEAD cv.code_value
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "Not = 1",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].string_value
       = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EDEPTLOGON"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EDEPTLOGON")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET found_ind = 0
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="EXIT_CHOICE"
       AND np.active_ind=1
       AND np.pvc_value != "0")
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=4250111
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "0",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt, found_ind = 1
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      app_prefs ap,
      code_value cv,
      prsnl p,
      application a
     PLAN (np
      WHERE np.parent_entity_name="APP_PREFS"
       AND np.pvc_name="EXIT_CHOICE"
       AND np.active_ind=1
       AND np.pvc_value != "0")
      JOIN (ap
      WHERE ap.app_prefs_id=np.parent_entity_id
       AND ap.application_number=4250111
       AND ap.position_cd > 0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (a
      WHERE a.application_number=ap.application_number
       AND a.active_ind=1)
     ORDER BY a.description, cv.display
     HEAD a.description
      set_ind = 1
     HEAD cv.code_value
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "0",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].string_value
       = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
      celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt, found_ind = 1
     WITH nocounter
    ;end select
    IF (found_ind=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = np.pvc_name
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EDEPTRFV"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EDEPTRFV")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET rfvdx = 0.0
    SELECT INTO "nl:"
     FROM code_value c
     WHERE c.code_set=17
      AND c.cdf_meaning="RFV"
      AND c.active_ind=1
     DETAIL
      rfvdx = c.code_value
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      detail_prefs dp,
      view_prefs vp,
      name_value_prefs vc,
      code_value cv,
      application a
     PLAN (np
      WHERE np.pvc_name="DX_DEFAULT_TYPE"
       AND np.parent_entity_name="DETAIL_PREFS"
       AND ((cnvtreal(trim(np.pvc_value)) != rfvdx) OR (np.pvc_value IN ("", " ", null))) )
      JOIN (dp
      WHERE dp.detail_prefs_id=np.parent_entity_id
       AND dp.application_number=4250111
       AND dp.active_ind=1)
      JOIN (vp
      WHERE vp.prsnl_id=dp.prsnl_id
       AND vp.position_cd=dp.position_cd
       AND vp.application_number=dp.application_number
       AND vp.view_name=dp.view_name
       AND vp.view_seq=dp.view_seq
       AND vp.active_ind=1)
      JOIN (vc
      WHERE vc.parent_entity_id=vp.view_prefs_id
       AND vc.parent_entity_name="VIEW_PREFS"
       AND trim(vc.pvc_name)="VIEW_CAPTION")
      JOIN (a
      WHERE a.application_number=dp.application_number
       AND a.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=outerjoin(dp.position_cd)
       AND cv.active_ind=outerjoin(1))
     ORDER BY a.application_number, cv.display
     DETAIL
      IF (((cv.code_value > 0
       AND dp.position_cd > 0) OR (dp.position_cd=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "Not Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value
       IF (dp.position_cd=0)
        reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
        row_tot_cnt].celllist[7].string_value = ""
       ELSE
        reply->rowlist[row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt
        ].celllist[7].string_value = cv.display
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[6].string_value = a.description, reply->rowlist[
       row_tot_cnt].celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].celllist[13
       ].string_value = dp.comp_name,
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PATCAREUNCHART"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PATCAREUNCHART")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      detail_prefs dp,
      application a
     PLAN (np
      WHERE np.parent_entity_name="DETAIL_PREFS"
       AND np.pvc_name="pvNotes.InErrorDocument"
       AND np.active_ind=1
       AND np.pvc_value != "2")
      JOIN (dp
      WHERE dp.detail_prefs_id=np.parent_entity_id
       AND dp.application_number=4250111
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number
       AND a.active_ind=1)
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "2",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6].
      string_value = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
      celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].celllist[13].string_value
       = dp.comp_name,
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM name_value_prefs np,
      detail_prefs dp,
      code_value cv,
      application a
     PLAN (np
      WHERE np.parent_entity_name="DETAIL_PREFS"
       AND np.pvc_name="pvNotes.InErrorDocument"
       AND np.active_ind=1
       AND np.pvc_value != "2")
      JOIN (dp
      WHERE dp.detail_prefs_id=np.parent_entity_id
       AND dp.position_cd > 0
       AND dp.application_number=4250111
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (a
      WHERE a.application_number=dp.application_number
       AND a.active_ind=1)
     ORDER BY a.description, cv.display
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].
      celllist[2].string_value = np.pvc_name, reply->rowlist[row_tot_cnt].celllist[3].string_value =
      "2",
      reply->rowlist[row_tot_cnt].celllist[4].string_value = np.pvc_value, reply->rowlist[row_tot_cnt
      ].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].string_value
       = a.description,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
      celllist[12].string_value = dp.view_name, reply->rowlist[row_tot_cnt].celllist[13].string_value
       = dp.comp_name,
      reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt
      ].celllist[15].string_value = resolution_txt
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DSADHOCMEDS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DSADHOCMEDS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    FREE SET pos
    RECORD pos(
      1 qual[*]
        2 pos_code = f8
        2 valid = i2
        2 pos_disp = vc
    )
    FREE SET pos2
    RECORD pos2(
      1 qual[*]
        2 pos_code = f8
        2 pos_disp = vc
    )
    SET reply->run_status_flag = 1
    SET allow_adhoc_orders = 0
    SET cap_value = 0
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=allow_adhoc_orders")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value=1)
           SET allow_adhoc_orders = 1
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    IF (allow_adhoc_orders=1)
     SET cap_value = 0
     SET hpref = uar_prefcreateinstance(18)
     SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
     SET stat = uar_prefaddattr(hpref,"prefvalue")
     SET stat = uar_prefaddfilter(hpref,"prefentry=adhoc_order_check_allergy")
     SET stat = uar_prefperform(hpref)
     DECLARE count = i4
     SET stat = uar_prefgetentrycount(hpref,count)
     SET i = 0
     DECLARE dnstr = c255 WITH noconstant("")
     DECLARE grpstr = c255 WITH noconstant("")
     DECLARE posstr = c40 WITH noconstant("")
     DECLARE locstr = c40 WITH noconstant("")
     DECLARE viewstr = c255 WITH noconstant("")
     SET strlen = 255
     FOR (x = 0 TO (count - 1))
       SET hentry = uar_prefgetentry(hpref,x)
       SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
       SET a = findstring("prefgroup=",dnstr,1,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefcontext=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,(b+ 1))
       SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET a = findstring("prefgroup=",dnstr,1)
       SET b = findstring("=",dnstr,a)
       SET c = findstring(",",dnstr,a)
       SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
       SET acnt = 0
       SET stat = uar_prefgetentryattrcount(hentry,acnt)
       FOR (y = 0 TO (acnt - 1))
         SET hattr = uar_prefgetentryattr(hentry,y)
         SET valcnt = 0
         SET stat = uar_prefgetattrvalcount(hattr,valcnt)
         DECLARE xvalue = c255 WITH noconstant("")
         FOR (z = 0 TO (valcnt - 1))
           SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
           SET cap_value = cnvtint(trim(xvalue))
           IF (cap_value != 1)
            SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
            SET stat = alterlist(reply->rowlist,row_tot_cnt)
            SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
            SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
            SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "adhoc_order_check_allergy"
            SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
            "Should be 1 if allow_adhoc_orders = 1"
            SET reply->rowlist[row_tot_cnt].celllist[4].string_value = xvalue
            SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
            SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
            SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
            SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
            SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           ENDIF
         ENDFOR
       ENDFOR
     ENDFOR
     CALL uar_prefdestroyinstance(hpref)
    ENDIF
    SET cap_value = 0
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=allow_adhoc_orders")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET cap_value = cnvtint(trim(xvalue))
          IF (cap_value=1)
           SET qcnt = (size(pos->qual,5)+ 1)
           SET stat = alterlist(pos->qual,qcnt)
           SET pos->qual[qcnt].pos_code = cnvtint(trim(grpstr))
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET pcnt = size(pos->qual,5)
    IF (pcnt > 0)
     SET tot_valid = 0
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = value(pcnt)),
       code_value c,
       prsnl p
      PLAN (d)
       JOIN (c
       WHERE (c.code_value=pos->qual[d.seq].pos_code)
        AND c.active_ind=1)
       JOIN (p
       WHERE p.position_cd=c.code_value
        AND p.active_ind=1)
      ORDER BY d.seq
      HEAD d.seq
       pos->qual[d.seq].valid = 1, pos->qual[d.seq].pos_disp = c.display, tot_valid = 1
      WITH nocounter
     ;end select
     IF (tot_valid=1)
      SET cap_value = 0
      SET hpref = uar_prefcreateinstance(18)
      SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
      SET stat = uar_prefaddattr(hpref,"prefvalue")
      SET stat = uar_prefaddfilter(hpref,"prefentry=adhoc_order_check_allergy")
      SET stat = uar_prefperform(hpref)
      DECLARE count = i4
      SET stat = uar_prefgetentrycount(hpref,count)
      SET i = 0
      DECLARE dnstr = c255 WITH noconstant("")
      DECLARE grpstr = c255 WITH noconstant("")
      SET strlen = 255
      FOR (x = 0 TO (count - 1))
        SET hentry = uar_prefgetentry(hpref,x)
        SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
        SET a = findstring("prefgroup=",dnstr,1,1)
        SET b = findstring("=",dnstr,a)
        SET c = findstring(",",dnstr,a)
        SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
        SET acnt = 0
        SET stat = uar_prefgetentryattrcount(hentry,acnt)
        FOR (y = 0 TO (acnt - 1))
          SET hattr = uar_prefgetentryattr(hentry,y)
          SET valcnt = 0
          SET stat = uar_prefgetattrvalcount(hattr,valcnt)
          DECLARE xvalue = c255 WITH noconstant("")
          FOR (z = 0 TO (valcnt - 1))
            SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
            SET cap_value = cnvtint(trim(xvalue))
            IF (cap_value=1)
             SET qcnt = (size(pos2->qual,5)+ 1)
             SET stat = alterlist(pos2->qual,qcnt)
             SET pos2->qual[qcnt].pos_code = cnvtint(trim(grpstr))
            ENDIF
          ENDFOR
        ENDFOR
      ENDFOR
      CALL uar_prefdestroyinstance(hpref)
      SET pcnt2 = size(pos2->qual,5)
      FOR (p = 1 TO pcnt)
        IF ((pos->qual[p].valid=1))
         SET tindex = 0
         IF (pcnt2 > 0)
          SET num = 0
          SET tindex = locateval(num,1,pcnt2,pos->qual[p].pos_code,pos2->qual[num].pos_code)
         ENDIF
         IF (tindex=0)
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "adhoc_order_check_allergy"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value =
          "Should be 1 if allow_adhoc_orders = 1"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "0"
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "position"
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[7].string_value = pos->qual[p].pos_disp
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDIF
      ENDFOR
     ENDIF
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDEFCOMPLIANCESTATUS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDEFCOMPLIANCESTATUS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_COMP_STATUS"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF ( NOT (nvp.pvc_value IN (" ", null)))
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF ( NOT (nvp.pvc_value IN (" ", null)))
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF ( NOT (nvp.pvc_value IN (" ", null)))
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_COMP_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_COMP_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_COMP_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_COMP_STATUS"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value IN (" ", null))
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_COMP_STATUS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDEFINFORMATIONSOURCE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDEFINFORMATIONSOURCE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_INFO_SOURCE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF ( NOT (nvp.pvc_value IN (" ", null)))
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF ( NOT (nvp.pvc_value IN (" ", null)))
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF ( NOT (nvp.pvc_value IN (" ", null)))
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_INFO_SOURCE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_INFO_SOURCE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_INFO_SOURCE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_INFO_SOURCE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value IN (" ", null))
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_INFO_SOURCE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDKDMOCOMMONALITYIND2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDKDMOCOMMONALITYIND2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET build_powerchart_pass = 0
    SET build_surginet_pass = 0
    SET build_firstnet_pass = 0
    SET disp_powerchart_pass = 0
    SET disp_surginet_pass = 0
    SET disp_firstnet_pass = 0
    DECLARE powerchart_value = vc
    DECLARE surginet_value = vc
    DECLARE firstnet_value = vc
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND trim(nvp.pvc_name) IN ("KDMO_RXBUILDER_RX", "KDMO_FIELD_DISP_RX")
       AND nvp.active_ind=1)
     DETAIL
      IF (nvp.pvc_name="KDMO_RXBUILDER_RX"
       AND nvp.pvc_value="0")
       IF (ap.application_number=600005)
        build_powerchart_pass = 1
       ELSEIF (ap.application_number=820000)
        build_surginet_pass = 1
       ELSEIF (ap.application_number=4250111)
        build_firstnet_pass = 1
       ENDIF
      ENDIF
      IF (nvp.pvc_name="KDMO_FIELD_DISP_RX")
       IF (ap.application_number=600005)
        IF (nvp.pvc_value="1")
         disp_powerchart_pass = 1
        ELSE
         powerchart_value = nvp.pvc_value
        ENDIF
       ELSEIF (ap.application_number=820000)
        IF (nvp.pvc_value="1")
         disp_surginet_pass = 1
        ELSE
         surginet_value = nvp.pvc_value
        ENDIF
       ELSEIF (ap.application_number=4250111)
        IF (nvp.pvc_value="1")
         disp_firstnet_pass = 1
        ELSE
         firstnet_value = nvp.pvc_value
        ENDIF
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (build_powerchart_pass=0
     AND disp_powerchart_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "KDMO_FIELD_DISP_RX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (build_surginet_pass=0
     AND disp_surginet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "KDMO_FIELD_DISP_RX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (build_firstnet_pass=0
     AND disp_firstnet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "KDMO_FIELD_DISP_RX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      prsnl p,
      name_value_prefs nvp,
      name_value_prefs nvp2,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      app_prefs ap
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(add_by_hx_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(p.position_cd)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp
      WHERE nvp.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp.pvc_name)=outerjoin("KDMO_FIELD_DISP_RX")
       AND nvp.active_ind=outerjoin(1))
      JOIN (nvp2
      WHERE nvp2.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp2.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp2.pvc_name)=outerjoin("KDMO_RXBUILDER_RX")
       AND nvp2.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      fail = 0, pc = 0, sn = 0,
      fn = 0, priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value != "0") OR (nvp2.name_value_prefs_id=0
          AND build_powerchart_pass=0)) )
          IF (((nvp.name_value_prefs_id > 0
           AND nvp.pvc_value != "1") OR (nvp.name_value_prefs_id=0
           AND disp_powerchart_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "KDMO_FIELD_DISP_RX",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->
           rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
           celllist[12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Add Medication By Hx"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value != "0") OR (nvp2.name_value_prefs_id=0
          AND build_surginet_pass=0)) )
          IF (((nvp.name_value_prefs_id > 0
           AND nvp.pvc_value != "1") OR (nvp.name_value_prefs_id=0
           AND disp_surginet_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "KDMO_FIELD_DISP_RX",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
           row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[
           12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Add Medication By Hx"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value != "0") OR (nvp2.name_value_prefs_id=0
          AND build_firstnet_pass=0)) )
          IF (((nvp.name_value_prefs_id > 0
           AND nvp.pvc_value != "1") OR (nvp.name_value_prefs_id=0
           AND disp_firstnet_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "KDMO_FIELD_DISP_RX",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
           row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[
           12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Add Medication By Hx"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND build_powerchart_pass=0
       AND disp_powerchart_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "KDMO_FIELD_DISP_RX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
       celllist[4].string_value = powerchart_value,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Add Medication By Hx"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND build_surginet_pass=0
       AND disp_surginet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "KDMO_FIELD_DISP_RX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[4].string_value = surginet_value,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Add Medication By Hx"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND build_firstnet_pass=0
       AND disp_firstnet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "KDMO_FIELD_DISP_RX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[4].string_value = firstnet_value,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Add Medication By Hx"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDRXBUILDERENABLE2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDRXBUILDERENABLE2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pass = 1
    SET surginet_pass = 1
    SET firstnet_pass = 1
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="KDMO_RXBUILDER_RX"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value != "1")
        powerchart_pass = 0
       ENDIF
       powerchart_value = nvp.pvc_value
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value != "1")
        surginet_pass = 0
       ENDIF
       surginet_value = nvp.pvc_value
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value != "1")
        firstnet_pass = 0
       ENDIF
       firstnet_value = nvp.pvc_value
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "KDMO_RXBUILDER_RX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "KDMO_RXBUILDER_RX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "KDMO_RXBUILDER_RX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      prsnl p,
      name_value_prefs nvp1,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      app_prefs ap
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(add_by_hx_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(p.position_cd)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp1
      WHERE nvp1.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp1.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp1.pvc_name)=outerjoin("KDMO_RXBUILDER_RX")
       AND nvp1.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      fail = 0, pc = 0, sn = 0,
      fn = 0, priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value != "1") OR (nvp1.name_value_prefs_id=0
          AND powerchart_pass=0)) )
          fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
           row_tot_cnt),
          stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt]
          .celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
          string_value = "KDMO_RXBUILDER_RX",
          reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
          IF (nvp1.name_value_prefs_id > 0)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp1.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position"
          ELSE
           reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Application"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[
          row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12
          ].string_value = "",
          reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
          celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
          string_value = resolution_txt,
          reply->rowlist[row_tot_cnt].celllist[8].string_value = "Add Medication By Hx"
          IF (pv1.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
          IF (pv2.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value != "1") OR (nvp1.name_value_prefs_id=0
          AND surginet_pass=0)) )
          fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
           row_tot_cnt),
          stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt]
          .celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
          string_value = "KDMO_RXBUILDER_RX",
          reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
          IF (nvp1.name_value_prefs_id > 0)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp1.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position"
          ELSE
           reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Application"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
          row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12
          ].string_value = "",
          reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
          celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
          string_value = resolution_txt,
          reply->rowlist[row_tot_cnt].celllist[8].string_value = "Add Medication By Hx"
          IF (pv1.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
          IF (pv2.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value != "1") OR (nvp1.name_value_prefs_id=0
          AND firstnet_pass=0)) )
          fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
           row_tot_cnt),
          stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt]
          .celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
          string_value = "KDMO_RXBUILDER_RX",
          reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
          IF (nvp1.name_value_prefs_id > 0)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp1.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position"
          ELSE
           reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Application"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
          row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12
          ].string_value = "",
          reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
          celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
          string_value = resolution_txt,
          reply->rowlist[row_tot_cnt].celllist[8].string_value = "Add Medication By Hx"
          IF (pv1.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
          IF (pv2.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND powerchart_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "KDMO_RXBUILDER_RX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
       celllist[4].string_value = powerchart_value,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Add Medication By Hx"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND surginet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "KDMO_RXBUILDER_RX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[4].string_value = surginet_value,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Add Medication By Hx"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND firstnet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "KDMO_RXBUILDER_RX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[4].string_value = firstnet_value,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Add Medication By Hx"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDUPCHECKSIMDRUGS2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDUPCHECKSIMDRUGS2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SET powerchart_dupmode_found = 0
    SET surginet_dupmode_found = 0
    SET firstnet_dupmode_found = 0
    SET powerchart_dupcat_found = 0
    SET surginet_dupcat_found = 0
    SET firstnet_dupcat_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name IN ("MULDUPMODE", "MULDUPCAT")
       AND nvp.active_ind=1)
     DETAIL
      IF (nvp.pvc_name="MULDUPMODE")
       IF (ap.application_number=600005
        AND nvp.pvc_value IN ("1", "2"))
        powerchart_dupmode_found = 1
       ELSEIF (ap.application_number=820000
        AND nvp.pvc_value IN ("1", "2"))
        surginet_dupmode_found = 1
       ELSEIF (ap.application_number=4250111
        AND nvp.pvc_value IN ("1", "2"))
        firstnet_dupmode_found = 1
       ENDIF
      ELSEIF (nvp.pvc_name="MULDUPCAT")
       IF (ap.application_number=600005)
        powerchart_pref_row_exists = 1
        IF (nvp.pvc_value="C")
         powerchart_dupcat_found = 1
        ENDIF
        powerchart_value = nvp.pvc_value
       ELSEIF (ap.application_number=820000)
        surginet_pref_row_exists = 1
        IF (nvp.pvc_value="C")
         surginet_dupcat_found = 1
        ENDIF
        surginet_value = nvp.pvc_value
       ELSEIF (ap.application_number=4250111)
        firstnet_pref_row_exists = 1
        IF (nvp.pvc_value="C")
         firstnet_dupcat_found = 1
        ENDIF
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_dupmode_found=1
     AND powerchart_dupcat_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDUPCAT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "C"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_dupmode_found=1
     AND surginet_dupcat_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDUPCAT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "C"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_dupmode_found=1
     AND firstnet_dupcat_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDUPCAT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "C"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp1,
      name_value_prefs nvp2,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(cv.code_value)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp1
      WHERE nvp1.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp1.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp1.pvc_name=outerjoin("MULDUPMODE")
       AND nvp1.active_ind=outerjoin(1))
      JOIN (nvp2
      WHERE nvp2.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp2.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp2.pvc_name=outerjoin("MULDUPCAT")
       AND nvp2.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value IN ("1", "2")) OR (nvp1.name_value_prefs_id=0
          AND powerchart_dupmode_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "C")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[
           3].string_value = "C",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = powerchart_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND powerchart_dupcat_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[
           3].string_value = "C"
           IF (powerchart_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value IN ("1", "2")) OR (nvp1.name_value_prefs_id=0
          AND surginet_dupmode_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "C")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[
           3].string_value = "C",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = surginet_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND surginet_dupcat_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[
           3].string_value = "C"
           IF (surginet_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value IN ("1", "2")) OR (nvp1.name_value_prefs_id=0
          AND firstnet_dupmode_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "C")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[
           3].string_value = "C",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = firstnet_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND firstnet_dupcat_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[
           3].string_value = "C"
           IF (firstnet_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND powerchart_dupmode_found=1
       AND powerchart_dupcat_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "C"
       IF (powerchart_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND surginet_dupmode_found=1
       AND surginet_dupcat_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "C"
       IF (surginet_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND firstnet_dupmode_found=1
       AND firstnet_dupcat_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDUPCAT", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "C"
       IF (firstnet_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDUPTHERAPYCHECK2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDUPTHERAPYCHECK2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULDUPCLASS"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        powerchart_found = 1, powerchart_value = nvp.pvc_value
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        surginet_found = 1, surginet_value = nvp.pvc_value
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        firstnet_found = 1, firstnet_value = nvp.pvc_value
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDUPCLASS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDUPCLASS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDUPCLASS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULDUPCLASS"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "1")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MULDUPCLASS", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "1",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MULDUPCLASS", reply->rowlist[row_tot_cnt].celllist[
         3].string_value = "1"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDUPCLASS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDUPCLASS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDUPCLASS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ALLERGYVOCABCHECK"))
    EXECUTE bed_rec_allergies_vocab_check  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="QUICKADDCHECK"))
    EXECUTE bed_rec_quick_add_check  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ALLERGYVOCABUSER"))
    EXECUTE bed_rec_allergy_vocab_user  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ALLERGYVOCABCOUNT"))
    EXECUTE bed_rec_allergy_vocab_count  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ALLERGYVOCABUSERPN"))
    EXECUTE bed_rec_allergy_user_pn  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDUPCHECKATLEVELS2"))
    EXECUTE bed_rec_dup_check_drug_levels  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDALERTHISTDIALOGENABLE2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDALERTHISTDIALOGENABLE2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SET powerchart_style_found = 0
    SET surginet_style_found = 0
    SET firstnet_style_found = 0
    SET powerchart_alert_found = 0
    SET surginet_alert_found = 0
    SET firstnet_alert_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name IN ("MUL_DS_STYLE", "MUL_DISP_ALERTHX")
       AND nvp.active_ind=1)
     DETAIL
      IF (nvp.pvc_name="MUL_DS_STYLE")
       IF (ap.application_number=600005
        AND nvp.pvc_value="1")
        powerchart_style_found = 1
       ELSEIF (ap.application_number=820000
        AND nvp.pvc_value="1")
        surginet_style_found = 1
       ELSEIF (ap.application_number=4250111
        AND nvp.pvc_value="1")
        firstnet_style_found = 1
       ENDIF
      ELSEIF (nvp.pvc_name="MUL_DISP_ALERTHX")
       IF (ap.application_number=600005)
        powerchart_pref_row_exists = 1
        IF (nvp.pvc_value="1")
         powerchart_alert_found = 1
        ENDIF
        powerchart_value = nvp.pvc_value
       ELSEIF (ap.application_number=820000)
        surginet_pref_row_exists = 1
        IF (nvp.pvc_value="1")
         surginet_alert_found = 1
        ENDIF
        surginet_value = nvp.pvc_value
       ELSEIF (ap.application_number=4250111)
        firstnet_pref_row_exists = 1
        IF (nvp.pvc_value="1")
         firstnet_alert_found = 1
        ENDIF
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_style_found=1
     AND powerchart_alert_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_style_found=1
     AND surginet_alert_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_style_found=1
     AND firstnet_alert_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp1,
      name_value_prefs nvp2,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(cv.code_value)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp1
      WHERE nvp1.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp1.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp1.pvc_name=outerjoin("MUL_DS_STYLE")
       AND nvp1.active_ind=outerjoin(1))
      JOIN (nvp2
      WHERE nvp2.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp2.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND nvp2.pvc_name=outerjoin("MUL_DISP_ALERTHX")
       AND nvp2.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value="1") OR (nvp1.name_value_prefs_id=0
          AND powerchart_style_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "1")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].
           celllist[3].string_value = "1",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = powerchart_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND powerchart_alert_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].
           celllist[3].string_value = "1"
           IF (powerchart_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value="1") OR (nvp1.name_value_prefs_id=0
          AND surginet_style_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "1")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].
           celllist[3].string_value = "1",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = surginet_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND surginet_alert_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].
           celllist[3].string_value = "1"
           IF (surginet_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value="1") OR (nvp1.name_value_prefs_id=0
          AND firstnet_style_found=1)) )
          IF (nvp2.name_value_prefs_id > 0
           AND nvp2.pvc_value != "1")
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].
           celllist[3].string_value = "1",
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp2.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6
           ].string_value = firstnet_app_desc,
           reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
           row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ELSEIF (nvp2.name_value_prefs_id=0
           AND firstnet_alert_found=0)
           row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
           reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
           row_tot_cnt].celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].
           celllist[3].string_value = "1"
           IF (firstnet_pref_row_exists=0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
           row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
           celllist[7].string_value = cv.display,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
           "PrefMaint",
           reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND powerchart_style_found=1
       AND powerchart_alert_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1"
       IF (powerchart_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND surginet_style_found=1
       AND surginet_alert_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1"
       IF (surginet_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND firstnet_style_found=1
       AND firstnet_alert_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DISP_ALERTHX", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1"
       IF (firstnet_pref_row_exists=0)
        reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
       row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[row_tot_cnt].
       celllist[7].string_value = cv.display,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDINTCHECKWINDOWSTYLE2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDINTCHECKWINDOWSTYLE2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_DS_STYLE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        powerchart_found = 1, powerchart_value = nvp.pvc_value
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        surginet_found = 1, surginet_value = nvp.pvc_value
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="1")
        firstnet_found = 1, firstnet_value = nvp.pvc_value
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DS_STYLE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DS_STYLE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MUL_DS_STYLE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MUL_DS_STYLE"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "1")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MUL_DS_STYLE", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "1",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MUL_DS_STYLE", reply->rowlist[row_tot_cnt].
         celllist[3].string_value = "1"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DS_STYLE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DS_STYLE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MUL_DS_STYLE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDINTCHECKSEVERITYSTYLE2"))
    EXECUTE bed_rec_interact_severe_style  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDIVINTCHECKWINDOW2"))
    EXECUTE bed_rec_iv_interact_check  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDENABLESEARCHPOPUP"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDENABLESEARCHPOPUP")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="SEARCH_POPUP_VIEW"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "SEARCH_POPUP_VIEW"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "SEARCH_POPUP_VIEW"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "SEARCH_POPUP_VIEW"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="SEARCH_POPUP_VIEW"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "SEARCH_POPUP_VIEW", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDNONFORMULARYBUTTON"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDNONFORMULARYBUTTON")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_CNVT_RX_TNF"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_CNVT_RX_TNF"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_CNVT_RX_TNF"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_CNVT_RX_TNF"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_CNVT_RX_TNF"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_CNVT_RX_TNF", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDOCORDERHIST"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDOCORDERHIST")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_DOC_ORDER_HISTORY"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_DOC_ORDER_HISTORY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_DOC_ORDER_HISTORY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_DOC_ORDER_HISTORY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_DOC_ORDER_HISTORY"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_DOC_ORDER_HISTORY", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDCOSIGNALLBUTTON"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDCOSIGNALLBUTTON")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AUTO_INVOKE_COSIGN"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1-On and do not auto")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1-On and do not auto")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1-On and do not auto")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AUTO_INVOKE_COSIGN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1-On and do not auto"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AUTO_INVOKE_COSIGN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1-On and do not auto"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AUTO_INVOKE_COSIGN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1-On and do not auto"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AUTO_INVOKE_COSIGN"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1-On and do not auto")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AUTO_INVOKE_COSIGN", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1-On and do not auto",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDORDERSENTWINDOWDISPLAY"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDORDERSENTWINDOWDISPLAY")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AUTO_APPLY_ORD_SENT"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AUTO_APPLY_ORD_SENT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AUTO_APPLY_ORD_SENT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AUTO_APPLY_ORD_SENT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AUTO_APPLY_ORD_SENT"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AUTO_APPLY_ORD_SENT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDCONSOLIDATEDMEDHIST"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDCONSOLIDATEDMEDHIST")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CONSOLIDATED_MED_HISTORY"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CONSOLIDATED_MED_HISTORY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CONSOLIDATED_MED_HISTORY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CONSOLIDATED_MED_HISTORY"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CONSOLIDATED_MED_HISTORY"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "CONSOLIDATED_MED_HISTORY", reply->rowlist[row_tot_cnt].celllist[3
       ].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDAWORDERDETAIL2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDAWORDERDETAIL2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DAW_PERSISTS_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="0")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="0")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="0")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DAW_PERSISTS_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DAW_PERSISTS_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DAW_PERSISTS_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DAW_PERSISTS_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DAW_PERSISTS_ORM", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDEFRTGFORPRESCRIPTIONS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDEFRTGFORPRESCRIPTIONS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_ROUTING_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ROUTING_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ROUTING_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ROUTING_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_ROUTING_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_ROUTING_ORM", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDEFKDMOVALUES2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDDEFKDMOVALUES2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pass = 1
    SET surginet_pass = 1
    SET firstnet_pass = 1
    SET build_powerchart_pass = 1
    SET build_surginet_pass = 1
    SET build_firstnet_pass = 1
    SET admin_powerchart_pass = 0
    SET admin_surginet_pass = 0
    SET admin_firstnet_pass = 0
    SET opt_powerchart_pass = 0
    SET opt_surginet_pass = 0
    SET opt_firstnet_pass = 0
    DECLARE powerchart_value = vc
    DECLARE surginet_value = vc
    DECLARE firstnet_value = vc
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND trim(nvp.pvc_name) IN ("KDMO_RXBUILDER_RX", "KDMO_RXBUILDER_ADMIN",
      "DEFAULT_RXBUILDER_OPTIONS")
       AND nvp.active_ind=1)
     DETAIL
      IF (nvp.pvc_name="KDMO_RXBUILDER_RX"
       AND nvp.pvc_value != "1")
       IF (ap.application_number=600005)
        build_powerchart_pass = 0
       ELSEIF (ap.application_number=820000)
        build_surginet_pass = 0
       ELSEIF (ap.application_number=4250111)
        build_firstnet_pass = 0
       ENDIF
      ENDIF
      IF (nvp.pvc_name="KDMO_RXBUILDER_ADMIN"
       AND nvp.pvc_value="1")
       IF (ap.application_number=600005)
        admin_powerchart_pass = 1
       ELSEIF (ap.application_number=820000)
        admin_surginet_pass = 1
       ELSEIF (ap.application_number=4250111)
        admin_firstnet_pass = 1
       ENDIF
      ENDIF
      IF (nvp.pvc_name="DEFAULT_RXBUILDER_OPTIONS")
       IF (ap.application_number=600005)
        powerchart_value = nvp.pvc_value
        IF (nvp.pvc_value="1")
         opt_powerchart_pass = 1
        ENDIF
       ELSEIF (ap.application_number=820000)
        surginet_value = nvp.pvc_value
        IF (nvp.pvc_value="1")
         opt_surginet_pass = 1
        ENDIF
       ELSEIF (ap.application_number=4250111)
        firstnet_value = nvp.pvc_value
        IF (nvp.pvc_value="1")
         opt_firstnet_pass = 1
        ENDIF
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (((build_powerchart_pass=1) OR (admin_powerchart_pass=1))
     AND opt_powerchart_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_RXBUILDER_OPTIONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     SET powerchart_pass = 0
    ENDIF
    IF (((build_surginet_pass=1) OR (admin_surginet_pass=1))
     AND opt_surginet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_RXBUILDER_OPTIONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     SET surginet_pass = 0
    ENDIF
    IF (((build_firstnet_pass=1) OR (admin_firstnet_pass=1))
     AND opt_firstnet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_RXBUILDER_OPTIONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     SET firstnet_pass = 0
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      prsnl p,
      name_value_prefs nvp,
      name_value_prefs nvp2,
      name_value_prefs nvp3,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      app_prefs ap
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(p.position_cd)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp
      WHERE nvp.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp.pvc_name)=outerjoin("KDMO_RXBUILDER_RX")
       AND nvp.active_ind=outerjoin(1))
      JOIN (nvp2
      WHERE nvp2.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp2.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp2.pvc_name)=outerjoin("KDMO_RXBUILDER_ADMIN")
       AND nvp2.active_ind=outerjoin(1))
      JOIN (nvp3
      WHERE nvp3.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp3.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp3.pvc_name)=outerjoin("DEFAULT_RXBUILDER_OPTIONS")
       AND nvp3.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      fail = 0, pc = 0, sn = 0,
      fn = 0, priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((((nvp.name_value_prefs_id > 0
          AND nvp.pvc_value="1") OR (nvp.name_value_prefs_id=0
          AND build_powerchart_pass=1)) ) OR (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value="1") OR (nvp2.name_value_prefs_id=0
          AND admin_powerchart_pass=1)) )) )
          IF (((nvp3.name_value_prefs_id > 0
           AND nvp3.pvc_value != "1") OR (nvp3.name_value_prefs_id=0
           AND opt_powerchart_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "DEFAULT_RXBUILDER_OPTIONS",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp3.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->
           rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
           celllist[12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((((nvp.name_value_prefs_id > 0
          AND nvp.pvc_value="1") OR (nvp.name_value_prefs_id=0
          AND build_surginet_pass=1)) ) OR (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value="1") OR (nvp2.name_value_prefs_id=0
          AND admin_surginet_pass=1)) )) )
          IF (((nvp3.name_value_prefs_id > 0
           AND nvp3.pvc_value != "1") OR (nvp3.name_value_prefs_id=0
           AND opt_surginet_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "DEFAULT_RXBUILDER_OPTIONS",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp3.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
           row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[
           12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((((nvp.name_value_prefs_id > 0
          AND nvp.pvc_value="1") OR (nvp.name_value_prefs_id=0
          AND build_firstnet_pass=1)) ) OR (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value="1") OR (nvp2.name_value_prefs_id=0
          AND admin_firstnet_pass=1)) )) )
          IF (((nvp3.name_value_prefs_id > 0
           AND nvp3.pvc_value != "1") OR (nvp3.name_value_prefs_id=0
           AND opt_firstnet_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "DEFAULT_RXBUILDER_OPTIONS",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp3.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
           row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[
           12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND powerchart_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_RXBUILDER_OPTIONS", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[4]
       .string_value = powerchart_value,
       reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[
       row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND surginet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_RXBUILDER_OPTIONS", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[4]
       .string_value = surginet_value,
       reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
       row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND firstnet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_RXBUILDER_OPTIONS", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[4]
       .string_value = firstnet_value,
       reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
       row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDCNVTTOINPAT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDCNVTTOINPAT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_CNVT_TO_INPT_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_CNVT_TO_INPT_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_CNVT_TO_INPT_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_CNVT_TO_INPT_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_CNVT_TO_INPT_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENABLE_CNVT_TO_INPT_ORM", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDCNVTTOPRESCRIPTION"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDCNVTTOPRESCRIPTION")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_CNVT_TO_RX_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_CNVT_TO_RX_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_CNVT_TO_RX_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_CNVT_TO_RX_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_CNVT_TO_RX_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENABLE_CNVT_TO_RX_ORM", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDSORTFAVORITESFOLDER2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDSORTFAVORITESFOLDER2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="FAVORITES_SORT"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="0")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="0")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="0")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FAVORITES_SORT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FAVORITES_SORT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FAVORITES_SORT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      prsnl p,
      name_value_prefs nvp1,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      app_prefs ap
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(p.position_cd)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp1
      WHERE nvp1.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp1.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp1.pvc_name)=outerjoin("FAVORITES_SORT")
       AND nvp1.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      fail = 0, pc = 0, sn = 0,
      fn = 0, priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id > 0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value != "0") OR (nvp1.name_value_prefs_id=0
          AND powerchart_found=0)) )
          fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
           row_tot_cnt),
          stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt]
          .celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
          string_value = "FAVORITES_SORT",
          reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
          IF (nvp1.name_value_prefs_id > 0)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp1.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position"
          ELSE
           reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Application"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[
          row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12
          ].string_value = "",
          reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
          celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
          string_value = resolution_txt,
          reply->rowlist[row_tot_cnt].celllist[8].string_value = "Orders"
          IF (pv1.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
          IF (pv2.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value != "0") OR (nvp1.name_value_prefs_id=0
          AND surginet_found=0)) )
          fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
           row_tot_cnt),
          stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt]
          .celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
          string_value = "FAVORITES_SORT",
          reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
          IF (nvp1.name_value_prefs_id > 0)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp1.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position"
          ELSE
           reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Application"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
          row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12
          ].string_value = "",
          reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
          celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
          string_value = resolution_txt,
          reply->rowlist[row_tot_cnt].celllist[8].string_value = "Orders"
          IF (pv1.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
          IF (pv2.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((nvp1.name_value_prefs_id > 0
          AND nvp1.pvc_value != "0") OR (nvp1.name_value_prefs_id=0
          AND firstnet_found=0)) )
          fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
           row_tot_cnt),
          stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt]
          .celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
          string_value = "FAVORITES_SORT",
          reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
          IF (nvp1.name_value_prefs_id > 0)
           reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp1.pvc_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Position"
          ELSE
           reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
           row_tot_cnt].celllist[5].string_value = "Application"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
          row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12
          ].string_value = "",
          reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
          celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
          string_value = resolution_txt,
          reply->rowlist[row_tot_cnt].celllist[8].string_value = "Orders"
          IF (pv1.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
          ELSEIF (pv1.privilege_id > 0
           AND pv1.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
          ENDIF
          reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
          IF (pv2.privilege_id=0)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=yes_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_except_for_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
          ELSEIF (pv2.privilege_id > 0
           AND pv2.priv_value_cd=no_cd)
           reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND powerchart_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "FAVORITES_SORT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Orders"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND surginet_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "FAVORITES_SORT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Orders"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND firstnet_found=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "FAVORITES_SORT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].celllist[
       8].string_value = "Orders"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDORDERDETAILFOCUS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDORDERDETAILFOCUS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="FIRST_DETAIL_TO_SELECT"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="0")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="0")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="0")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FIRST_DETAIL_TO_SELECT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FIRST_DETAIL_TO_SELECT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FIRST_DETAIL_TO_SELECT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="FIRST_DETAIL_TO_SELECT"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "FIRST_DETAIL_TO_SELECT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDFOODDRUGINTCHKDISABLE2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDFOODDRUGINTCHKDISABLE2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pref_row_exists = 0
    SET surginet_pref_row_exists = 0
    SET firstnet_pref_row_exists = 0
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULDFINTR"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       powerchart_pref_row_exists = 1
       IF (nvp.pvc_value="0")
        powerchart_found = 1, powerchart_value = nvp.pvc_value
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       surginet_pref_row_exists = 1
       IF (nvp.pvc_value="0")
        surginet_found = 1, surginet_value = nvp.pvc_value
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       firstnet_pref_row_exists = 1
       IF (nvp.pvc_value="0")
        firstnet_found = 1, firstnet_value = nvp.pvc_value
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_found=0) OR (powerchart_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDFINTR"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     IF (powerchart_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((surginet_found=0) OR (surginet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDFINTR"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     IF (surginet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (((firstnet_found=0) OR (firstnet_pref_row_exists=0)) )
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MULDFINTR"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     IF (firstnet_pref_row_exists=0)
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Defined"
     ELSE
      SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     ENDIF
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MULDFINTR"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (priv_exists_ind=1)
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "0")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "MULDFINTR", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "0",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Order"
        IF (pv1.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
        ELSEIF (pv1.privilege_id > 0
         AND pv1.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
        IF (pv2.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=yes_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_except_for_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
        ELSEIF (pv2.privilege_id > 0
         AND pv2.priv_value_cd=no_cd)
         reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (((ap.application_number=600005
         AND powerchart_found=0) OR (((ap.application_number=820000
         AND surginet_found=0) OR (ap.application_number=4250111
         AND firstnet_found=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "MULDFINTR", reply->rowlist[row_tot_cnt].celllist[3]
         .string_value = "0"
         IF (ap.application_number=600005)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = powerchart_app_desc
         ELSEIF (ap.application_number=820000)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = surginet_app_desc
         ELSEIF (ap.application_number=4250111)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[6].string_value = firstnet_app_desc
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[8].
         string_value = "Order"
         IF (pv1.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
         ELSEIF (pv1.privilege_id > 0
          AND pv1.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
         IF (pv2.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=yes_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_except_for_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
         ELSEIF (pv2.privilege_id > 0
          AND pv2.priv_value_cd=no_cd)
          reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDFINTR", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDFINTR", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (priv_exists_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MULDFINTR", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDUPCHKMEDORDERS2"))
    EXECUTE bed_rec_dup_check_med_orders  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDDUPCHKPHARMORDERS2"))
    EXECUTE bed_rec_dup_check_pharm_ords  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDALLERGYCHKMEDORDERS2"))
    EXECUTE bed_rec_allergy_chk_med_ords  WITH replace("REQUEST",detailrequest), replace("REPLY",
     detailreply)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDPERSISTRTGPRESCRIPTIONS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDPERSISTRTGPRESCRIPTIONS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="PERSIST_ROUTING_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PERSIST_ROUTING_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PERSIST_ROUTING_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PERSIST_ROUTING_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="PERSIST_ROUTING_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "PERSIST_ROUTING_ORM", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDAMBINOFFROOTFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDAMBINOFFROOTFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBINOFFICE_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBINOFFICE_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBINOFFICE_CATALOG_BROWSER_ROOT"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDAMBINOFFHOMEFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDAMBINOFFHOMEFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBINOFFICE_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBINOFFICE_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBINOFFICE_CATALOG_BROWSER_HOME"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBINOFFICE_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDAMBROOTFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDAMBROOTFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBUL_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBUL_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBUL_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBUL_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBUL_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBUL_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBUL_CATALOG_BROWSER_ROOT"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBUL_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDAMBHOMEFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDAMBHOMEFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBUL_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBUL_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBUL_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "AMBUL_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBUL_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBUL_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="AMBUL_CATALOG_BROWSER_HOME"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "AMBUL_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDINPTHOMEFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDINPTHOMEFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="INPT_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INPT_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INPT_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INPT_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="INPT_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "INPT_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="INPT_CATALOG_BROWSER_HOME"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "INPT_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDINPTROOTFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDINPTROOTFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="INPT_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INPT_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INPT_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INPT_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="INPT_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "INPT_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="INPT_CATALOG_BROWSER_ROOT"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "INPT_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="FNDISCHARGEPROCESS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="FNDISCHARGEPROCESS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=cwd")
    SET stat = uar_prefaddfilter(hpref,"prefentry=version")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "2006.01.02")
          SELECT INTO "NL:"
           FROM code_value cv
           WHERE cv.code_value=cnvtreal(grpstr)
            AND cv.active_ind=1
           DETAIL
            row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
            stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
            reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
            row_tot_cnt].celllist[2].string_value = "Depart Process", reply->rowlist[row_tot_cnt].
            celllist[3].string_value = "Yes",
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "No", reply->rowlist[row_tot_cnt].
            celllist[5].string_value = cxtstr, reply->rowlist[row_tot_cnt].celllist[6].string_value
             = firstnet_app_desc,
            reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.description, reply->rowlist[
            row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
            string_value = "FirstNet: TrackingDbTool",
            reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           WITH nocounter
          ;end select
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="FNPATIENTEDUCATION"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="FNPATIENTEDUCATION")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=patienteducation")
    SET stat = uar_prefaddfilter(hpref,"prefentry=new gui")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue="0")
          SELECT INTO "NL:"
           FROM code_value cv
           WHERE cv.code_value=cnvtreal(grpstr)
            AND cv.active_ind=1
           DETAIL
            row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
            stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
            reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
            row_tot_cnt].celllist[2].string_value = "Patient Education", reply->rowlist[row_tot_cnt].
            celllist[3].string_value = "Yes",
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "No", reply->rowlist[row_tot_cnt].
            celllist[5].string_value = cxtstr, reply->rowlist[row_tot_cnt].celllist[6].string_value
             = firstnet_app_desc,
            reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.description, reply->rowlist[
            row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
            string_value = "FirstNet: TrackingDbTool",
            reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           WITH nocounter
          ;end select
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="FNDIAGPROBLIST"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="FNDIAGPROBLIST")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM view_comp_prefs vcp,
      application ap,
      name_value_prefs nvp
     PLAN (vcp
      WHERE vcp.view_name="PROBLEM_DX"
       AND vcp.comp_name="PROBLEM_DX"
       AND vcp.position_cd=0
       AND vcp.prsnl_id=0
       AND vcp.active_ind=1)
      JOIN (ap
      WHERE ap.application_number=vcp.application_number
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="VIEW_COMP_PREFS"
       AND nvp.parent_entity_id=vcp.view_comp_prefs_id
       AND nvp.pvc_name="COMP_DLLNAME"
       AND nvp.active_ind=1)
     ORDER BY ap.description
     DETAIL
      IF (cnvtupper(nvp.pvc_value) != "KIAPROBDX2.DLL")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "COMP_DLLNAME", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "kiaprobdx2.dll",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = ap.description,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "PROBLEM_DX", reply->rowlist[row_tot_cnt].celllist[13].
       string_value = "PROBLEM_DX",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM view_comp_prefs vcp,
      application ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (vcp
      WHERE vcp.view_name="PROBLEM_DX"
       AND vcp.comp_name="PROBLEM_DX"
       AND vcp.position_cd > 0
       AND vcp.prsnl_id=0
       AND vcp.active_ind=1)
      JOIN (ap
      WHERE ap.application_number=vcp.application_number
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=vcp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=vcp.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="VIEW_COMP_PREFS"
       AND nvp.parent_entity_id=vcp.view_comp_prefs_id
       AND nvp.pvc_name="COMP_DLLNAME"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, vcp.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD vcp.position_cd
      IF (cnvtupper(nvp.pvc_value) != "KIAPROBDX2.DLL")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "COMP_DLLNAME", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "kiaprobdx2.dll",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[row_tot_cnt].celllist[6].
       string_value = ap.description,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "PROBLEM_DX", reply->rowlist[row_tot_cnt].celllist[13].
       string_value = "PROBLEM_DX",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EDITONLINEMODE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EDITONLINEMODE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="EOL_MODE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="0")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="0")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="0")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "EOL_MODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "EOL_MODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "EOL_MODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="EOL_MODE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "EOL_MODE", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="FREETEXTPROBLEMS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="FREETEXTPROBLEMS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 4250111)
       AND dp.view_name="PROBLEM"
       AND dp.comp_name="PROBLEM"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="PROBLEM_FREETEXT_STATUS"
       AND nvp.active_ind=1)
     DETAIL
      IF (dp.application_number=600005)
       IF (nvp.pvc_value="3")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (dp.application_number=4250111)
       IF (nvp.pvc_value="3")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PROBLEM_FREETEXT_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Cerner Practice Wizard"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PROBLEM_FREETEXT_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Cerner Practice Wizard"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 4250111)
       AND dp.view_name="PROBLEM"
       AND dp.comp_name="PROBLEM"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="PROBLEM_FREETEXT_STATUS"
       AND nvp.active_ind=1)
     ORDER BY dp.application_number, cv.display, dp.position_cd
     HEAD dp.application_number
      temp_cnt = 0
     HEAD dp.position_cd
      IF (nvp.pvc_value != "3")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "PROBLEM_FREETEXT_STATUS", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "Cerner Practice Wizard", reply->
       rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="FREETEXTDIAGNOSIS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="FREETEXTDIAGNOSIS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 4250111)
       AND dp.view_name="DIAGNOSIS"
       AND dp.comp_name="DIAGNOSIS"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="DIAGNOSIS_FREETEXT_STATUS"
       AND nvp.active_ind=1)
     DETAIL
      IF (dp.application_number=600005)
       IF (nvp.pvc_value="2")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (dp.application_number=4250111)
       IF (nvp.pvc_value="2")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DIAGNOSIS_FREETEXT_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "2"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Cerner Practice Wizard"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DIAGNOSIS_FREETEXT_STATUS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "2"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Cerner Practice Wizard"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 4250111)
       AND dp.view_name="DIAGNOSIS"
       AND dp.comp_name="DIAGNOSIS"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="DIAGNOSIS_FREETEXT_STATUS"
       AND nvp.active_ind=1)
     ORDER BY dp.application_number, cv.display, dp.position_cd
     HEAD dp.application_number
      temp_cnt = 0
     HEAD dp.position_cd
      IF (nvp.pvc_value != "2")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DIAGNOSIS_FREETEXT_STATUS", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "2",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "Cerner Practice Wizard", reply->
       rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="INITLOADRESFLOWSHEET"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="INITLOADRESFLOWSHEET")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="RESULT_CAP"
       AND nvp.active_ind=1)
     ORDER BY dp.application_number
     DETAIL
      IF (dp.application_number=600005)
       powerchart_found = 1
      ELSEIF (dp.application_number=820000)
       surginet_found = 1
      ELSEIF (dp.application_number=4250111)
       firstnet_found = 1
      ENDIF
      fail_result_cap_ind = 0
      IF (isnumeric(nvp.pvc_value)=0)
       fail_result_cap_ind = 1
      ELSE
       IF (cnvtint(nvp.pvc_value) > 1000)
        fail_result_cap_ind = 1
       ENDIF
      ENDIF
      IF (fail_result_cap_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "RESULT_CAP", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "<=1000",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "RESULT_CAP"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<=1000"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "RESULT_CAP"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<=1000"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "RESULT_CAP"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "<=1000"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="RESULT_CAP"
       AND nvp.active_ind=1)
     ORDER BY dp.application_number, cv.display, dp.position_cd
     HEAD dp.application_number
      temp_cnt = 0
     HEAD dp.position_cd
      fail_result_cap_ind = 0
      IF (isnumeric(nvp.pvc_value)=0)
       fail_result_cap_ind = 1
      ELSE
       IF (cnvtint(nvp.pvc_value) > 1000)
        fail_result_cap_ind = 1
       ENDIF
      ENDIF
      IF (fail_result_cap_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "RESULT_CAP", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "<=1000",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="COMMTYPEDISCERNEXPERT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="COMMTYPEDISCERNEXPERT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET found_ind = 0
    SELECT INTO "NL:"
     FROM code_value cv
     PLAN (cv
      WHERE cv.code_set=6006
       AND cv.cdf_meaning="DISCERNEXP"
       AND cv.active_ind=1)
     DETAIL
      found_ind = 1
     WITH nocounter
    ;end select
    IF (found_ind=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Core Core Builder"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="INTERDISPSUMMENCFILTER2"))
    SET row_tot_cnt = 0
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="INTERDISPSUMMENCFILTER2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_failed = 0
    SET surginet_failed = 0
    SET firstnet_failed = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SET powerchart_exists = 0
    SET surginet_exists = 0
    SET firstnet_exists = 0
    SET recommended_value = "1"
    SELECT INTO "nl:"
     FROM view_prefs a,
      view_comp_prefs vcp,
      detail_prefs dp,
      name_value_prefs nvp
     PLAN (a
      WHERE a.application_number IN (600005, 820000, 4250111)
       AND a.view_name="INT_DIS_SUM"
       AND a.position_cd=0
       AND a.prsnl_id=0
       AND a.active_ind=1)
      JOIN (vcp
      WHERE vcp.application_number=a.application_number
       AND vcp.view_name="INT_DIS_SUM"
       AND vcp.comp_name="INT_DIS_SUM"
       AND vcp.position_cd=0
       AND vcp.prsnl_id=0
       AND vcp.active_ind=1
       AND vcp.view_seq=a.view_seq)
      JOIN (dp
      WHERE dp.application_number=outerjoin(vcp.application_number)
       AND dp.view_name=outerjoin(vcp.view_name)
       AND dp.comp_name=outerjoin(vcp.comp_name)
       AND dp.position_cd=outerjoin(vcp.position_cd)
       AND dp.prsnl_id=outerjoin(vcp.prsnl_id)
       AND dp.active_ind=outerjoin(1)
       AND dp.view_seq=outerjoin(vcp.view_seq)
       AND dp.comp_seq=outerjoin(vcp.comp_seq))
      JOIN (nvp
      WHERE nvp.parent_entity_name=outerjoin("DETAIL_PREFS")
       AND nvp.parent_entity_id=outerjoin(dp.detail_prefs_id)
       AND trim(nvp.pvc_name)=outerjoin("INTERDIS_SUM_ENCNTR_SPECIFIC")
       AND nvp.active_ind=outerjoin(1))
     DETAIL
      IF (vcp.application_number=600005)
       powerchart_exists = 1, powerchart_value = nvp.pvc_value
       IF (nvp.pvc_value != recommended_value)
        powerchart_failed = 1
       ENDIF
      ELSEIF (vcp.application_number=820000)
       surginet_exists = 1, surginet_value = nvp.pvc_value
       IF (nvp.pvc_value != recommended_value)
        surginet_failed = 1
       ENDIF
      ELSEIF (vcp.application_number=4250111)
       firstnet_exists = 1, firstnet_value = nvp.pvc_value
       IF (nvp.pvc_value != recommended_value)
        firstnet_failed = 1
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_failed=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = recommended_value
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_failed=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = recommended_value
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_failed=1)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = recommended_value
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    FREE SET temp_dis
    RECORD temp_dis(
      1 pos[*]
        2 app = i4
        2 code = f8
        2 global_ind = i2
        2 tab = i2
    )
    SET dis_cnt = 0
    SELECT INTO "nl:"
     FROM code_value cv,
      view_comp_prefs a,
      prsnl p
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (a
      WHERE a.application_number > outerjoin(0)
       AND a.position_cd=outerjoin(p.position_cd)
       AND a.prsnl_id=outerjoin(0)
       AND a.active_ind=outerjoin(1))
     ORDER BY cv.code_value, a.application_number
     HEAD REPORT
      dis_cnt = 0
     HEAD cv.code_value
      dis_cnt = (dis_cnt+ 3), stat = alterlist(temp_dis->pos,dis_cnt), temp_dis->pos[(dis_cnt - 2)].
      code = cv.code_value,
      temp_dis->pos[(dis_cnt - 2)].app = 600005, temp_dis->pos[(dis_cnt - 2)].global_ind = 1,
      temp_dis->pos[(dis_cnt - 1)].code = cv.code_value,
      temp_dis->pos[(dis_cnt - 1)].app = 820000, temp_dis->pos[(dis_cnt - 1)].global_ind = 1,
      temp_dis->pos[dis_cnt].code = cv.code_value,
      temp_dis->pos[dis_cnt].app = 4250111, temp_dis->pos[dis_cnt].global_ind = 1
     HEAD a.application_number
      IF (a.application_number=600005)
       temp_dis->pos[(dis_cnt - 2)].global_ind = 0
      ENDIF
      IF (a.application_number=820000)
       temp_dis->pos[(dis_cnt - 1)].global_ind = 0
      ENDIF
      IF (a.application_number=4250111)
       temp_dis->pos[dis_cnt].global_ind = 0
      ENDIF
     DETAIL
      IF (a.view_name="INT_DIS_SUM"
       AND a.comp_name="INT_DIS_SUM")
       IF (a.application_number=600005)
        temp_dis->pos[(dis_cnt - 2)].tab = 1
       ENDIF
       IF (a.application_number=820000)
        temp_dis->pos[(dis_cnt - 1)].tab = 1
       ENDIF
       IF (a.application_number=4250111)
        temp_dis->pos[dis_cnt].tab = 1
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (dis_cnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = value(dis_cnt)),
       code_value cv,
       detail_prefs dp,
       name_value_prefs nvp
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=temp_dis->pos[d.seq].code))
       JOIN (dp
       WHERE dp.application_number=outerjoin(temp_dis->pos[d.seq].app)
        AND dp.view_name=outerjoin("INT_DIS_SUM")
        AND dp.comp_name=outerjoin("INT_DIS_SUM")
        AND dp.position_cd=outerjoin(cv.code_value)
        AND dp.prsnl_id=outerjoin(0)
        AND dp.active_ind=outerjoin(1))
       JOIN (nvp
       WHERE nvp.parent_entity_name=outerjoin("DETAIL_PREFS")
        AND nvp.parent_entity_id=outerjoin(dp.detail_prefs_id)
        AND trim(nvp.pvc_name)=outerjoin("INTERDIS_SUM_ENCNTR_SPECIFIC")
        AND nvp.active_ind=outerjoin(1))
      ORDER BY cv.display, cv.code_value, dp.application_number
      HEAD cv.code_value
       pc = 0, sn = 0, fn = 0
      DETAIL
       IF (dp.application_number=600005
        AND (((temp_dis->pos[d.seq].global_ind=1)
        AND powerchart_exists=1) OR ((temp_dis->pos[d.seq].tab=1))) )
        pc = 1
        IF (((nvp.name_value_prefs_id > 0
         AND nvp.pvc_value != recommended_value) OR (nvp.name_value_prefs_id=0
         AND ((powerchart_exists=1
         AND powerchart_failed=1) OR (powerchart_exists=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Position"
         IF (nvp.name_value_prefs_id=0
          AND powerchart_exists=1)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
          row_tot_cnt].celllist[5].string_value = "Application"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12]
         .string_value = "",
         reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
         string_value = resolution_txt
        ENDIF
       ELSEIF (dp.application_number=820000
        AND (((temp_dis->pos[d.seq].global_ind=1)
        AND surginet_exists=1) OR ((temp_dis->pos[d.seq].tab=1))) )
        sn = 1
        IF (((nvp.name_value_prefs_id > 0
         AND nvp.pvc_value != recommended_value) OR (nvp.name_value_prefs_id=0
         AND ((surginet_exists=1
         AND surginet_failed=1) OR (surginet_exists=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Position"
         IF (nvp.name_value_prefs_id=0
          AND surginet_exists=1)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
          row_tot_cnt].celllist[5].string_value = "Application"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12]
         .string_value = "",
         reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
         string_value = resolution_txt
        ENDIF
       ELSEIF (dp.application_number=4250111
        AND (((temp_dis->pos[d.seq].global_ind=1)
        AND firstnet_exists=1) OR ((temp_dis->pos[d.seq].tab=1))) )
        fn = 1
        IF (((nvp.name_value_prefs_id > 0
         AND nvp.pvc_value != recommended_value) OR (nvp.name_value_prefs_id=0
         AND ((firstnet_exists=1
         AND firstnet_failed=1) OR (firstnet_exists=0)) )) )
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Position"
         IF (nvp.name_value_prefs_id=0
          AND firstnet_exists=1)
          reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
          row_tot_cnt].celllist[5].string_value = "Application"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
         row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12]
         .string_value = "",
         reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
         string_value = resolution_txt
        ENDIF
       ENDIF
       IF (dp.detail_prefs_id=0
        AND (temp_dis->pos[d.seq].global_ind=1)
        AND (((temp_dis->pos[d.seq].app=600005)
        AND powerchart_failed=1) OR ((((temp_dis->pos[d.seq].app=820000)
        AND surginet_failed=1) OR ((temp_dis->pos[d.seq].app=4250111)
        AND firstnet_failed=1)) )) )
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].
        celllist[3].string_value = "1",
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
        reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
        row_tot_cnt].celllist[15].string_value = resolution_txt, reply->rowlist[row_tot_cnt].
        celllist[5].string_value = "Application"
        IF ((temp_dis->pos[d.seq].app=600005))
         reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
         row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF ((temp_dis->pos[d.seq].app=820000))
         reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
         row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF ((temp_dis->pos[d.seq].app=4250111))
         reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
         row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
       ENDIF
       IF (dp.detail_prefs_id=0
        AND (temp_dis->pos[d.seq].global_ind=0)
        AND (temp_dis->pos[d.seq].tab=1)
        AND (((temp_dis->pos[d.seq].app=600005)
        AND ((powerchart_failed=1) OR (powerchart_exists=0)) ) OR ((((temp_dis->pos[d.seq].app=820000
       )
        AND ((surginet_failed=1) OR (surginet_exists=0)) ) OR ((temp_dis->pos[d.seq].app=4250111)
        AND ((firstnet_failed=1) OR (firstnet_exists=0)) )) )) )
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "INTERDIS_SUM_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].
        celllist[3].string_value = "1",
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
        reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
        row_tot_cnt].celllist[15].string_value = resolution_txt
        IF ((temp_dis->pos[d.seq].app=600005))
         IF (powerchart_exists=1)
          reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
          row_tot_cnt].celllist[4].string_value = powerchart_value
         ELSE
          reply->rowlist[row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[
          row_tot_cnt].celllist[4].string_value = ""
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF ((temp_dis->pos[d.seq].app=820000))
         IF (surginet_exists=1)
          reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
          row_tot_cnt].celllist[4].string_value = surginet_value
         ELSE
          reply->rowlist[row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[
          row_tot_cnt].celllist[4].string_value = ""
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF ((temp_dis->pos[d.seq].app=4250111))
         IF (firstnet_exists=1)
          reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[
          row_tot_cnt].celllist[4].string_value = firstnet_value
         ELSE
          reply->rowlist[row_tot_cnt].celllist[5].string_value = "Position", reply->rowlist[
          row_tot_cnt].celllist[4].string_value = ""
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
       ENDIF
      WITH nocounter
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="MEDADMINENCFILTER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="MEDADMINENCFILTER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MAW_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MAW_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MAW_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MAW_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="MAW_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MAW_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PALENCFILTER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PALENCFILTER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111)
       AND dp.view_name="PIP"
       AND dp.comp_name="PIP"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="PIP_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1)
     DETAIL
      IF (dp.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (dp.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (dp.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PIP_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PIP_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PIP_ENCNTR_SPECIFIC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111)
       AND dp.view_name="PIP"
       AND dp.comp_name="PIP"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="PIP_ENCNTR_SPECIFIC"
       AND nvp.active_ind=1)
     ORDER BY dp.application_number, cv.display, dp.position_cd
     HEAD dp.application_number
      temp_cnt = 0
     HEAD dp.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "PIP_ENCNTR_SPECIFIC", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="TRANSFERCANCELENCFILTER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="TRANSFERCANCELENCFILTER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="TRANSFERCXL_ENCNTR_FILTER"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="FOCUS")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="FOCUS")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="FOCUS")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "TRANSFERCXL_ENCNTR_FILTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "FOCUS"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "TRANSFERCXL_ENCNTR_FILTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "FOCUS"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "TRANSFERCXL_ENCNTR_FILTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "FOCUS"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="TRANSFERCXL_ENCNTR_FILTER"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "FOCUS")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "TRANSFERCXL_ENCNTR_FILTER", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "FOCUS",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="FLOWSHEETENCFILTER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="FLOWSHEETENCFILTER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111)
       AND dp.view_name="CHARTSUMM"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="FILTER_BY_SELECTED_ENCOUNTER"
       AND nvp.active_ind=1)
     ORDER BY dp.application_number
     DETAIL
      IF (dp.application_number=600005)
       powerchart_found = 1
      ELSEIF (dp.application_number=820000)
       surginet_found = 1
      ELSEIF (dp.application_number=4250111)
       firstnet_found = 1
      ENDIF
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "FILTER_BY_SELECTED_ENCOUNTER", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FILTER_BY_SELECTED_ENCOUNTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FILTER_BY_SELECTED_ENCOUNTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "FILTER_BY_SELECTED_ENCOUNTER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "not set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111)
       AND dp.view_name="CHARTSUMM"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="DETAIL_PREFS"
       AND nvp.parent_entity_id=dp.detail_prefs_id
       AND nvp.pvc_name="FILTER_BY_SELECTED_ENCOUNTER"
       AND nvp.active_ind=1)
     ORDER BY dp.application_number, cv.display, dp.position_cd
     HEAD dp.application_number
      temp_cnt = 0
     HEAD dp.position_cd
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "FILTER_BY_SELECTED_ENCOUNTER", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ADVGRAPHINGENCFILTER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ADVGRAPHINGENCFILTER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=default,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=encntr_filter")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "1")
          SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
          SET stat = alterlist(reply->rowlist,row_tot_cnt)
          SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
          SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
          SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "encntr_filter"
          SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "On"
          SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Off"
          SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
          SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
          SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
          SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
          SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=position,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=encntr_filter")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    DECLARE cxtstr = c255 WITH noconstant("")
    DECLARE viewstr = c255 WITH noconstant("")
    DECLARE posstr = c40 WITH noconstant("")
    SET pos_cd = 0
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefcontext=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,(b+ 1))
      SET cxtstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET a = findstring("prefgroup=",dnstr,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET viewstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (xvalue != "1")
          SET valid_ind = 0
          SET pos_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM code_value cv,
            prsnl p
           PLAN (cv
            WHERE cv.code_value=pos_cd
             AND cv.active_ind=1)
            JOIN (p
            WHERE p.position_cd=cv.code_value
             AND p.active_ind=1)
           DETAIL
            valid_ind = 1, posstr = cv.display
           WITH nocounter
          ;end select
          IF (valid_ind=1)
           SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
           SET stat = alterlist(reply->rowlist,row_tot_cnt)
           SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
           SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
           SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "encntr_filter"
           SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "On"
           SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Off"
           SET reply->rowlist[row_tot_cnt].celllist[5].string_value = cxtstr
           SET reply->rowlist[row_tot_cnt].celllist[6].string_value = ""
           SET reply->rowlist[row_tot_cnt].celllist[7].string_value = posstr
           SET reply->rowlist[row_tot_cnt].celllist[12].string_value = viewstr
           SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "Preference Manager"
           SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
          ENDIF
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
   ENDIF
   IF ((request->paramlist[plcnt].meaning="SENDSCHEDMEDSPHARM"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="SENDSCHEDMEDSPHARM")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_SEND_TO_PHARM_FOR_SCHEDULE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value != "1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value != "1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value != "1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_SEND_TO_PHARM_FOR_SCHEDULE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_SEND_TO_PHARM_FOR_SCHEDULE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ALLOW_SEND_TO_PHARM_FOR_SCHEDULE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "not = 1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_SEND_TO_PHARM_FOR_SCHEDULE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value="1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_SEND_TO_PHARM_FOR_SCHEDULE", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "not = 1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CLEARORDPHYSAFTERSIGN"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CLEARORDPHYSAFTERSIGN")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CLEAR_ORDERING_DOC_AFTER_SIGN"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CLEAR_ORDERING_DOC_AFTER_SIGN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CLEAR_ORDERING_DOC_AFTER_SIGN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CLEAR_ORDERING_DOC_AFTER_SIGN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CLEAR_ORDERING_DOC_AFTER_SIGN"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "CLEAR_ORDERING_DOC_AFTER_SIGN", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DEFICD9SEARCHTYPE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DEFICD9SEARCHTYPE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_ICD9_SEARCH_TYPE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ICD9_SEARCH_TYPE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ICD9_SEARCH_TYPE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ICD9_SEARCH_TYPE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_ICD9_SEARCH_TYPE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_ICD9_SEARCH_TYPE", reply->rowlist[row_tot_cnt].celllist[3
       ].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DEFPRINTLEAFLET"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DEFPRINTLEAFLET")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_PRINT_LEAFLET_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="0")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="0")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="0")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_PRINT_LEAFLET_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_PRINT_LEAFLET_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_PRINT_LEAFLET_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_PRINT_LEAFLET_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_PRINT_LEAFLET_ORM", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DISCHARGEMODORDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DISCHARGEMODORDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DSCH_MODIFY_ORDER"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="WARN")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="WARN")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="WARN")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_MODIFY_ORDER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "WARN"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_MODIFY_ORDER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "WARN"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_MODIFY_ORDER"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "WARN"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DSCH_MODIFY_ORDER"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "WARN")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DSCH_MODIFY_ORDER", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "WARN",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DISCHARGENEWPRESCRIP"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DISCHARGENEWPRESCRIP")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DSCH_NEW_PRESCRIPTION"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="ALLOW")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="ALLOW")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="ALLOW")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_NEW_PRESCRIPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALLOW"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_NEW_PRESCRIPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALLOW"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_NEW_PRESCRIPTION"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALLOW"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DSCH_NEW_PRESCRIPTION"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "ALLOW")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DSCH_NEW_PRESCRIPTION", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "ALLOW",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ENABLEADVSEARCH"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ENABLEADVSEARCH")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_ADVANCED_SEARCH_OPTIONS"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_ADVANCED_SEARCH_OPTIONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_ADVANCED_SEARCH_OPTIONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_ADVANCED_SEARCH_OPTIONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_ADVANCED_SEARCH_OPTIONS"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENABLE_ADVANCED_SEARCH_OPTIONS", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ENABLEPROFILEINTRCHECK"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ENABLEPROFILEINTRCHECK")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_PROFILE_INTRCHECK"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_PROFILE_INTRCHECK"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_PROFILE_INTRCHECK"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ENABLE_PROFILE_INTRCHECK"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_PROFILE_INTRCHECK"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ENABLE_PROFILE_INTRCHECK", reply->rowlist[row_tot_cnt].celllist[3
       ].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DOCMEDSORDPHYS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DOCMEDSORDPHYS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_HX_ORDERING_PHYS_PROMPT"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="0")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="0")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="0")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_HX_ORDERING_PHYS_PROMPT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_HX_ORDERING_PHYS_PROMPT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_HX_ORDERING_PHYS_PROMPT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_HX_ORDERING_PHYS_PROMPT"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ORM_HX_ORDERING_PHYS_PROMPT", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ENABLENAVBUTTONS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ENABLENAVBUTTONS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="VIEW_NAV_BUTTONS"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "VIEW_NAV_BUTTONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "VIEW_NAV_BUTTONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "VIEW_NAV_BUTTONS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="VIEW_NAV_BUTTONS"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "VIEW_NAV_BUTTONS", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CORERETCNT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CORERETCNT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp1
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111, 961000)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp1
      WHERE nvp1.parent_entity_name=outerjoin("DETAIL_PREFS")
       AND nvp1.parent_entity_id=outerjoin(dp.detail_prefs_id)
       AND nvp1.pvc_name=outerjoin("DIRECT_CHARTING")
       AND nvp1.active_ind=outerjoin(1))
     DETAIL
      IF (nvp1.name_value_prefs_id=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "", reply->rowlist[row_tot_cnt].celllist[3].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "no DIRECT_CHARTING pref", reply->
       rowlist[row_tot_cnt].celllist[5].string_value = "Application"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ELSEIF (dp.application_number=961000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchartoff_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp1,
      name_value_prefs nvp2,
      name_value_prefs nvp3,
      name_value_prefs nvp4
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111, 961000)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp1
      WHERE nvp1.parent_entity_name="DETAIL_PREFS"
       AND nvp1.parent_entity_id=dp.detail_prefs_id
       AND nvp1.pvc_name="DIRECT_CHARTING"
       AND nvp1.pvc_value="1"
       AND nvp1.active_ind=1)
      JOIN (nvp2
      WHERE nvp2.parent_entity_name="DETAIL_PREFS"
       AND nvp2.parent_entity_id=dp.detail_prefs_id
       AND nvp2.pvc_name="C_EVENT_SET_NAME"
       AND nvp2.pvc_value=" "
       AND nvp2.active_ind=1)
      JOIN (nvp3
      WHERE nvp3.parent_entity_name="DETAIL_PREFS"
       AND nvp3.parent_entity_id=dp.detail_prefs_id
       AND nvp3.pvc_name="C_RETRIEVE_TYPE"
       AND nvp3.pvc_value="2"
       AND nvp3.active_ind=1)
      JOIN (nvp4
      WHERE nvp4.parent_entity_name="DETAIL_PREFS"
       AND nvp4.parent_entity_id=dp.detail_prefs_id
       AND nvp4.pvc_name="C_RETRIEVE_CNT"
       AND nvp4.active_ind=1)
     ORDER BY dp.application_number, nvp4.name_value_prefs_id
     HEAD nvp4.name_value_prefs_id
      fail_ret_cnt_ind = 0
      IF (isnumeric(nvp4.pvc_value)=0)
       fail_ret_cnt_ind = 1
      ELSE
       IF (cnvtint(nvp4.pvc_value) > 100)
        fail_ret_cnt_ind = 1
       ENDIF
      ENDIF
      IF (fail_ret_cnt_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "C_RETRIEVE_CNT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "<=100",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp4.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ELSEIF (dp.application_number=961000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchartoff_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      name_value_prefs nvp1,
      name_value_prefs nvp2,
      name_value_prefs nvp3,
      name_value_prefs nvp4
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111, 961000)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd=0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (nvp1
      WHERE nvp1.parent_entity_name="DETAIL_PREFS"
       AND nvp1.parent_entity_id=dp.detail_prefs_id
       AND nvp1.pvc_name="DIRECT_CHARTING"
       AND nvp1.pvc_value="0"
       AND nvp1.active_ind=1)
      JOIN (nvp2
      WHERE nvp2.parent_entity_name="DETAIL_PREFS"
       AND nvp2.parent_entity_id=dp.detail_prefs_id
       AND nvp2.pvc_name="R_EVENT_SET_NAME"
       AND nvp2.pvc_value=" "
       AND nvp2.active_ind=1)
      JOIN (nvp3
      WHERE nvp3.parent_entity_name="DETAIL_PREFS"
       AND nvp3.parent_entity_id=dp.detail_prefs_id
       AND nvp3.pvc_name="R_RETRIEVE_TYPE"
       AND nvp3.pvc_value="2"
       AND nvp3.active_ind=1)
      JOIN (nvp4
      WHERE nvp4.parent_entity_name="DETAIL_PREFS"
       AND nvp4.parent_entity_id=dp.detail_prefs_id
       AND nvp4.pvc_name="R_RETRIEVE_CNT"
       AND nvp4.active_ind=1)
     ORDER BY dp.application_number, nvp4.name_value_prefs_id
     HEAD nvp4.name_value_prefs_id
      fail_ret_cnt_ind = 0
      IF (isnumeric(nvp4.pvc_value)=0)
       fail_ret_cnt_ind = 1
      ELSE
       IF (cnvtint(nvp4.pvc_value) > 100)
        fail_ret_cnt_ind = 1
       ENDIF
      ENDIF
      IF (fail_ret_cnt_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "R_RETRIEVE_CNT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "<=100",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp4.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ELSEIF (dp.application_number=961000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchartoff_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp1
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111, 961000)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp1
      WHERE nvp1.parent_entity_name=outerjoin("DETAIL_PREFS")
       AND nvp1.parent_entity_id=outerjoin(dp.detail_prefs_id)
       AND nvp1.pvc_name=outerjoin("DIRECT_CHARTING")
       AND nvp1.active_ind=outerjoin(1))
     ORDER BY dp.application_number, cv.display, nvp1.name_value_prefs_id
     HEAD nvp1.name_value_prefs_id
      IF (nvp1.name_value_prefs_id=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "", reply->rowlist[row_tot_cnt].celllist[3].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "no DIRECT_CHARTING pref", reply->
       rowlist[row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ELSEIF (dp.application_number=961000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchartoff_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp1,
      name_value_prefs nvp2,
      name_value_prefs nvp3,
      name_value_prefs nvp4
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111, 961000)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp1
      WHERE nvp1.parent_entity_name="DETAIL_PREFS"
       AND nvp1.parent_entity_id=dp.detail_prefs_id
       AND nvp1.pvc_name="DIRECT_CHARTING"
       AND nvp1.pvc_value="1"
       AND nvp1.active_ind=1)
      JOIN (nvp2
      WHERE nvp2.parent_entity_name="DETAIL_PREFS"
       AND nvp2.parent_entity_id=dp.detail_prefs_id
       AND nvp2.pvc_name="C_EVENT_SET_NAME"
       AND nvp2.pvc_value=" "
       AND nvp2.active_ind=1)
      JOIN (nvp3
      WHERE nvp3.parent_entity_name="DETAIL_PREFS"
       AND nvp3.parent_entity_id=dp.detail_prefs_id
       AND nvp3.pvc_name="C_RETRIEVE_TYPE"
       AND nvp3.pvc_value="2"
       AND nvp3.active_ind=1)
      JOIN (nvp4
      WHERE nvp4.parent_entity_name="DETAIL_PREFS"
       AND nvp4.parent_entity_id=dp.detail_prefs_id
       AND nvp4.pvc_name="C_RETRIEVE_CNT"
       AND nvp4.active_ind=1)
     ORDER BY dp.application_number, cv.display, nvp4.name_value_prefs_id
     HEAD nvp4.name_value_prefs_id
      fail_ret_cnt_ind = 0
      IF (isnumeric(nvp4.pvc_value)=0)
       fail_ret_cnt_ind = 1
      ELSE
       IF (cnvtint(nvp4.pvc_value) > 100)
        fail_ret_cnt_ind = 1
       ENDIF
      ENDIF
      IF (fail_ret_cnt_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "C_RETRIEVE_CNT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "<=100",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp4.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ELSEIF (dp.application_number=961000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchartoff_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM detail_prefs dp,
      code_value cv,
      prsnl p,
      name_value_prefs nvp1,
      name_value_prefs nvp2,
      name_value_prefs nvp3,
      name_value_prefs nvp4
     PLAN (dp
      WHERE dp.application_number IN (600005, 820000, 4250111, 961000)
       AND dp.view_name="FLOWSHEET"
       AND dp.comp_name="FLOWSHEET"
       AND dp.position_cd > 0
       AND dp.prsnl_id=0
       AND dp.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=dp.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=dp.position_cd
       AND p.active_ind=1)
      JOIN (nvp1
      WHERE nvp1.parent_entity_name="DETAIL_PREFS"
       AND nvp1.parent_entity_id=dp.detail_prefs_id
       AND nvp1.pvc_name="DIRECT_CHARTING"
       AND nvp1.pvc_value="0"
       AND nvp1.active_ind=1)
      JOIN (nvp2
      WHERE nvp2.parent_entity_name="DETAIL_PREFS"
       AND nvp2.parent_entity_id=dp.detail_prefs_id
       AND nvp2.pvc_name="R_EVENT_SET_NAME"
       AND nvp2.pvc_value=" "
       AND nvp2.active_ind=1)
      JOIN (nvp3
      WHERE nvp3.parent_entity_name="DETAIL_PREFS"
       AND nvp3.parent_entity_id=dp.detail_prefs_id
       AND nvp3.pvc_name="R_RETRIEVE_TYPE"
       AND nvp3.pvc_value="2"
       AND nvp3.active_ind=1)
      JOIN (nvp4
      WHERE nvp4.parent_entity_name="DETAIL_PREFS"
       AND nvp4.parent_entity_id=dp.detail_prefs_id
       AND nvp4.pvc_name="R_RETRIEVE_CNT"
       AND nvp4.active_ind=1)
     ORDER BY dp.application_number, cv.display, nvp4.name_value_prefs_id
     HEAD nvp4.name_value_prefs_id
      fail_ret_cnt_ind = 0
      IF (isnumeric(nvp4.pvc_value)=0)
       fail_ret_cnt_ind = 1
      ELSE
       IF (cnvtint(nvp4.pvc_value) > 100)
        fail_ret_cnt_ind = 1
       ENDIF
      ENDIF
      IF (fail_ret_cnt_ind=1)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "R_RETRIEVE_CNT", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "<=100",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp4.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (dp.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (dp.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (dp.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ELSEIF (dp.application_number=961000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchartoff_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EXCLUDERENEWREQ"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EXCLUDERENEWREQ")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="EXCLUDE_RENEWALS_FROM_DRC"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "EXCLUDE_RENEWALS_FROM_DRC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "EXCLUDE_RENEWALS_FROM_DRC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "EXCLUDE_RENEWALS_FROM_DRC"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="EXCLUDE_RENEWALS_FROM_DRC"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "EXCLUDE_RENEWALS_FROM_DRC", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ALLERGYNODEPOML"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ALLERGYNODEPOML")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HIDE_ALLERGY_NODE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HIDE_ALLERGY_NODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HIDE_ALLERGY_NODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HIDE_ALLERGY_NODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HIDE_ALLERGY_NODE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "HIDE_ALLERGY_NODE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PROBLEMNODEPOML"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PROBLEMNODEPOML")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HIDE_PROBLEM_NODE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HIDE_PROBLEM_NODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HIDE_PROBLEM_NODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HIDE_PROBLEM_NODE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HIDE_PROBLEM_NODE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "HIDE_PROBLEM_NODE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="HISTMEDIHOMEFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="HISTMEDIHOMEFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HXMEDS_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_HOME"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HXMEDS_CATALOG_BROWSER_HOME"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HXMEDS_CATALOG_BROWSER_HOME"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_HOME", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="HISTMEDIROOTFOLDER"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="HISTMEDIROOTFOLDER")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp,
      dummyt d,
      alt_sel_cat a
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HXMEDS_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
      JOIN (d
      WHERE isnumeric(nvp.pvc_value) > 0)
      JOIN (a
      WHERE nvp.pvc_value > " "
       AND a.alt_sel_category_id=cnvtreal(nvp.pvc_value))
     DETAIL
      IF (ap.application_number=600005)
       powerchart_found = 1
      ELSEIF (ap.application_number=820000)
       surginet_found = 1
      ELSEIF (ap.application_number=4250111)
       firstnet_found = 1
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_ROOT"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "Set"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set"
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HXMEDS_CATALOG_BROWSER_ROOT"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((nvp.pvc_value=" ") OR (nvp.pvc_value > " "
       AND isnumeric(nvp.pvc_value)=0)) )
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
    SET tcnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="HXMEDS_CATALOG_BROWSER_ROOT"
       AND nvp.pvc_value > " "
       AND nvp.active_ind=1)
     DETAIL
      IF (isnumeric(nvp.pvc_value) != 0)
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].alt_sel_category_id
        = cnvtreal(nvp.pvc_value),
       tempids->ids[tcnt].position_cd = ap.position_cd, tempids->ids[tcnt].application_number = ap
       .application_number
      ENDIF
     WITH nocounter
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       code_value cv,
       alt_sel_cat a,
       dummyt d1
      PLAN (d)
       JOIN (cv
       WHERE (cv.code_value=tempids->ids[d.seq].position_cd))
       JOIN (d1)
       JOIN (a
       WHERE (a.alt_sel_category_id=tempids->ids[d.seq].alt_sel_category_id))
      DETAIL
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "HXMEDS_CATALOG_BROWSER_ROOT", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "Set",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = "Not Set", reply->rowlist[row_tot_cnt].
       celllist[5].string_value = "Position"
       IF ((tempids->ids[d.seq].application_number=600005))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=820000))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF ((tempids->ids[d.seq].application_number=4250111))
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      WITH nocounter, outerjoin = d, dontexist
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ENHVIEWENABLED"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ENHVIEWENABLED")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="TOOLBAR_STYLE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "TOOLBAR_STYLE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "TOOLBAR_STYLE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "TOOLBAR_STYLE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="TOOLBAR_STYLE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "TOOLBAR_STYLE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CHANGESUPERVISPHYS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CHANGESUPERVISPHYS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CHG_SUP_PHY_ALLOWED_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CHG_SUP_PHY_ALLOWED_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CHG_SUP_PHY_ALLOWED_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CHG_SUP_PHY_ALLOWED_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=ap.position_cd
       AND plr.person_id=0
       AND plr.ppr_cd=0
       AND plr.location_cd=0
       AND plr.active_ind=1)
      JOIN (pv
      WHERE pv.priv_loc_reltn_id=plr.priv_loc_reltn_id
       AND pv.privilege_cd=physproxy_cd
       AND pv.priv_value_cd=yes_cd
       AND pv.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CHG_SUP_PHY_ALLOWED_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "CHG_SUP_PHY_ALLOWED_ORM", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="WRAPCLINDISPLINE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="WRAPCLINDISPLINE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CLIN_DISPLAY_WRAP"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CLIN_DISPLAY_WRAP"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CLIN_DISPLAY_WRAP"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "CLIN_DISPLAY_WRAP"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="CLIN_DISPLAY_WRAP"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "CLIN_DISPLAY_WRAP", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CUSTOMVIEWDEFAULT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CUSTOMVIEWDEFAULT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_CUSTOM_VIEW"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_CUSTOM_VIEW"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_CUSTOM_VIEW"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_CUSTOM_VIEW"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_CUSTOM_VIEW"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_CUSTOM_VIEW", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PRESCROUTEDEFAULT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PRESCROUTEDEFAULT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_ROUTING_TO_ALL"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ROUTING_TO_ALL"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ROUTING_TO_ALL"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DEFAULT_ROUTING_TO_ALL"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DEFAULT_ROUTING_TO_ALL"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DEFAULT_ROUTING_TO_ALL", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ORDNAMEHYPERLINK"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ORDNAMEHYPERLINK")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DISABLE_ORDER_INFO_LINK"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DISABLE_ORDER_INFO_LINK"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DISABLE_ORDER_INFO_LINK"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DISABLE_ORDER_INFO_LINK"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DISABLE_ORDER_INFO_LINK"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DISABLE_ORDER_INFO_LINK", reply->rowlist[row_tot_cnt].celllist[3]
       .string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DIAGBILLINGVALIDITY"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DIAGBILLINGVALIDITY")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DX_CHECK_BILLING_VALIDITY_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DX_CHECK_BILLING_VALIDITY_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DX_CHECK_BILLING_VALIDITY_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DX_CHECK_BILLING_VALIDITY_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DX_CHECK_BILLING_VALIDITY_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "DX_CHECK_BILLING_VALIDITY_ORM", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DISPMOREOPTIONKDMO2"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DISPMOREOPTIONKDMO2")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_pass = 1
    SET surginet_pass = 1
    SET firstnet_pass = 1
    SET build_powerchart_pass = 1
    SET build_surginet_pass = 1
    SET build_firstnet_pass = 1
    SET admin_powerchart_pass = 0
    SET admin_surginet_pass = 0
    SET admin_firstnet_pass = 0
    SET more_powerchart_pass = 0
    SET more_surginet_pass = 0
    SET more_firstnet_pass = 0
    DECLARE powerchart_value = vc
    DECLARE surginet_value = vc
    DECLARE firstnet_value = vc
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND trim(nvp.pvc_name) IN ("KDMO_RXBUILDER_RX", "KDMO_RXBUILDER_ADMIN", "MORE_ROUTEFORM")
       AND nvp.active_ind=1)
     DETAIL
      IF (nvp.pvc_name="KDMO_RXBUILDER_RX"
       AND nvp.pvc_value != "1")
       IF (ap.application_number=600005)
        build_powerchart_pass = 0
       ELSEIF (ap.application_number=820000)
        build_surginet_pass = 0
       ELSEIF (ap.application_number=4250111)
        build_firstnet_pass = 0
       ENDIF
      ENDIF
      IF (nvp.pvc_name="KDMO_RXBUILDER_ADMIN"
       AND nvp.pvc_value="1")
       IF (ap.application_number=600005)
        admin_powerchart_pass = 1
       ELSEIF (ap.application_number=820000)
        admin_surginet_pass = 1
       ELSEIF (ap.application_number=4250111)
        admin_firstnet_pass = 1
       ENDIF
      ENDIF
      IF (nvp.pvc_name="MORE_ROUTEFORM")
       IF (ap.application_number=600005)
        powerchart_value = nvp.pvc_value
        IF (nvp.pvc_value="1")
         more_powerchart_pass = 1
        ENDIF
       ELSEIF (ap.application_number=820000)
        surginet_value = nvp.pvc_value
        IF (nvp.pvc_value="1")
         more_surginet_pass = 1
        ENDIF
       ELSEIF (ap.application_number=4250111)
        firstnet_value = nvp.pvc_value
        IF (nvp.pvc_value="1")
         more_firstnet_pass = 1
        ENDIF
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (((build_powerchart_pass=1) OR (admin_powerchart_pass=1))
     AND more_powerchart_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MORE_ROUTEFORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     SET powerchart_pass = 0
    ENDIF
    IF (((build_surginet_pass=1) OR (admin_surginet_pass=1))
     AND more_surginet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MORE_ROUTEFORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     SET surginet_pass = 0
    ENDIF
    IF (((build_firstnet_pass=1) OR (admin_firstnet_pass=1))
     AND more_firstnet_pass=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "MORE_ROUTEFORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
     SET firstnet_pass = 0
    ENDIF
    SELECT INTO "nl:"
     FROM code_value cv,
      prsnl p,
      name_value_prefs nvp,
      name_value_prefs nvp2,
      name_value_prefs nvp3,
      priv_loc_reltn plr,
      privilege pv1,
      privilege pv2,
      privilege_exception pe1,
      privilege_exception pe2,
      app_prefs ap
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv1
      WHERE pv1.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv1.privilege_cd=outerjoin(order_priv_cd)
       AND pv1.active_ind=outerjoin(1))
      JOIN (pv2
      WHERE pv2.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv2.privilege_cd=outerjoin(prescribe_priv_cd)
       AND pv2.active_ind=outerjoin(1))
      JOIN (pe1
      WHERE pe1.privilege_id=outerjoin(pv1.privilege_id)
       AND pe1.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe1.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe1.active_ind=outerjoin(1))
      JOIN (pe2
      WHERE pe2.privilege_id=outerjoin(pv2.privilege_id)
       AND pe2.exception_type_cd=outerjoin(cat_type_excep_cd)
       AND pe2.exception_id=outerjoin(pharm_cat_type_cd)
       AND pe2.active_ind=outerjoin(1))
      JOIN (ap
      WHERE ap.position_cd=outerjoin(p.position_cd)
       AND ap.prsnl_id=outerjoin(0)
       AND ap.active_ind=outerjoin(1))
      JOIN (nvp
      WHERE nvp.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp.pvc_name)=outerjoin("KDMO_RXBUILDER_RX")
       AND nvp.active_ind=outerjoin(1))
      JOIN (nvp2
      WHERE nvp2.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp2.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp2.pvc_name)=outerjoin("KDMO_RXBUILDER_ADMIN")
       AND nvp2.active_ind=outerjoin(1))
      JOIN (nvp3
      WHERE nvp3.parent_entity_name=outerjoin("APP_PREFS")
       AND nvp3.parent_entity_id=outerjoin(ap.app_prefs_id)
       AND trim(nvp3.pvc_name)=outerjoin("MORE_ROUTEFORM")
       AND nvp3.active_ind=outerjoin(1))
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      fail = 0, pc = 0, sn = 0,
      fn = 0, priv_exists_ind = 0
      IF (((pv1.privilege_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_cd) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=yes_except_for_cd
       AND pe1.privilege_exception_id=0) OR (((pv1.privilege_id > 0
       AND pv1.priv_value_cd=no_except_for_cd
       AND pe1.privilege_exception_id > 0) OR (((pv2.privilege_id=0) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_cd) OR (((pv2.privilege_id > 0
       AND pv2.priv_value_cd=yes_except_for_cd
       AND pe2.privilege_exception_id=0) OR (pv2.privilege_id > 0
       AND pv2.priv_value_cd=no_except_for_cd
       AND pe2.privilege_exception_id > 0)) )) )) )) )) )) )) )
       priv_exists_ind = 1
      ENDIF
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (ap.application_number IN (600005, 820000, 4250111))
       IF (priv_exists_ind=1)
        IF (ap.application_number=600005)
         IF (((((nvp.name_value_prefs_id > 0
          AND nvp.pvc_value="1") OR (nvp.name_value_prefs_id=0
          AND build_powerchart_pass=1)) ) OR (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value="1") OR (nvp2.name_value_prefs_id=0
          AND admin_powerchart_pass=1)) )) )
          IF (((nvp3.name_value_prefs_id > 0
           AND nvp3.pvc_value != "1") OR (nvp3.name_value_prefs_id=0
           AND more_powerchart_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "MORE_ROUTEFORM",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp3.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->
           rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].
           celllist[12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=820000)
         IF (((((nvp.name_value_prefs_id > 0
          AND nvp.pvc_value="1") OR (nvp.name_value_prefs_id=0
          AND build_surginet_pass=1)) ) OR (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value="1") OR (nvp2.name_value_prefs_id=0
          AND admin_surginet_pass=1)) )) )
          IF (((nvp3.name_value_prefs_id > 0
           AND nvp3.pvc_value != "1") OR (nvp3.name_value_prefs_id=0
           AND more_surginet_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "MORE_ROUTEFORM",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp3.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
           row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[
           12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ELSEIF (ap.application_number=4250111)
         IF (((((nvp.name_value_prefs_id > 0
          AND nvp.pvc_value="1") OR (nvp.name_value_prefs_id=0
          AND build_firstnet_pass=1)) ) OR (((nvp2.name_value_prefs_id > 0
          AND nvp2.pvc_value="1") OR (nvp2.name_value_prefs_id=0
          AND admin_firstnet_pass=1)) )) )
          IF (((nvp3.name_value_prefs_id > 0
           AND nvp3.pvc_value != "1") OR (nvp3.name_value_prefs_id=0
           AND more_firstnet_pass=0)) )
           fail_ind = 1, row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,
            row_tot_cnt),
           stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt), reply->rowlist[row_tot_cnt
           ].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt].celllist[2].
           string_value = "MORE_ROUTEFORM",
           reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
           IF (nvp3.name_value_prefs_id > 0)
            reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Position"
           ELSE
            reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
            row_tot_cnt].celllist[5].string_value = "Application"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
           row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[
           12].string_value = "",
           reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
           celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].
           string_value = resolution_txt,
           reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
           IF (pv1.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
           ELSEIF (pv1.privilege_id > 0
            AND pv1.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
           ENDIF
           reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
           IF (pv2.privilege_id=0)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=yes_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_except_for_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
           ELSEIF (pv2.privilege_id > 0
            AND pv2.priv_value_cd=no_cd)
            reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
           ENDIF
          ENDIF
         ENDIF
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (priv_exists_ind=1
       AND pc=0
       AND powerchart_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MORE_ROUTEFORM", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[4]
       .string_value = powerchart_value,
       reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc, reply->rowlist[
       row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND sn=0
       AND surginet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MORE_ROUTEFORM", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[4]
       .string_value = surginet_value,
       reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc, reply->rowlist[
       row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
      IF (priv_exists_ind=1
       AND fn=0
       AND firstnet_pass=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "MORE_ROUTEFORM", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp3.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[4]
       .string_value = firstnet_value,
       reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc, reply->rowlist[
       row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt].celllist[12].
       string_value = "",
       reply->rowlist[row_tot_cnt].celllist[13].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[14].string_value = "PrefMaint", reply->rowlist[row_tot_cnt].celllist[15].string_value
        = resolution_txt,
       reply->rowlist[row_tot_cnt].celllist[8].string_value = "Order"
       IF (pv1.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No except for"
       ELSEIF (pv1.privilege_id > 0
        AND pv1.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "No"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[10].string_value = "Prescribe"
       IF (pv2.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Not defined, default Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=yes_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "Yes except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_except_for_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No except for"
       ELSEIF (pv2.privilege_id > 0
        AND pv2.priv_value_cd=no_cd)
        reply->rowlist[row_tot_cnt].celllist[11].string_value = "No"
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="ONETIMEAUTOCOMPLETE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="ONETIMEAUTOCOMPLETE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ONE_TIME_AUTO_COMPLETE_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ONE_TIME_AUTO_COMPLETE_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ONE_TIME_AUTO_COMPLETE_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ONE_TIME_AUTO_COMPLETE_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ONE_TIME_AUTO_COMPLETE_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ONE_TIME_AUTO_COMPLETE_ORM", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DIAGTYPEDEFAULTORD"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DIAGTYPEDEFAULTORD")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_DEFAULT_DX_TYPE"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="BILLING")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="BILLING")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="BILLING")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DEFAULT_DX_TYPE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "BILLING"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DEFAULT_DX_TYPE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "BILLING"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DEFAULT_DX_TYPE"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "BILLING"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_DEFAULT_DX_TYPE"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "BILLING")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ORM_DEFAULT_DX_TYPE", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "BILLING",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PHARMCHARGEORDDISP"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PHARMCHARGEORDDISP")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_DISP_CHARGE_ONLY_ORDERS"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="3")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="3")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="3")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DISP_CHARGE_ONLY_ORDERS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DISP_CHARGE_ONLY_ORDERS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DISP_CHARGE_ONLY_ORDERS"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_DISP_CHARGE_ONLY_ORDERS"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "3")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ORM_DISP_CHARGE_ONLY_ORDERS", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "3",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PROBLEMDIAGCTRLORD"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PROBLEMDIAGCTRLORD")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_DISP_DX_ASSN"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DISP_DX_ASSN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DISP_DX_ASSN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "ORM_DISP_DX_ASSN"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ORM_DISP_DX_ASSN"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ORM_DISP_DX_ASSN", reply->rowlist[row_tot_cnt].celllist[3].
       string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PRESCORDDETAILSEQ"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PRESCORDDETAILSEQ")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="VIRTUAL_ORDER_DETAIL_SEQUENCING"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "VIRTUAL_ORDER_DETAIL_SEQUENCING"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "VIRTUAL_ORDER_DETAIL_SEQUENCING"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "VIRTUAL_ORDER_DETAIL_SEQUENCING"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "1"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="VIRTUAL_ORDER_DETAIL_SEQUENCING"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "1")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "VIRTUAL_ORDER_DETAIL_SEQUENCING", reply->rowlist[row_tot_cnt].
       celllist[3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PRINTDEANUM"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PRINTDEANUM")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="PRINT_DEA_ORM"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (((nvp.pvc_value="2") OR (nvp.pvc_value="3")) )
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (((nvp.pvc_value="2") OR (nvp.pvc_value="3")) )
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (((nvp.pvc_value="2") OR (nvp.pvc_value="3")) )
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PRINT_DEA_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "2 or 3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PRINT_DEA_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "2 or 3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "PRINT_DEA_ORM"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "2 or 3"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="PRINT_DEA_ORM"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "2")
       IF (nvp.pvc_value != "3")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "PRINT_DEA_ORM", reply->rowlist[row_tot_cnt].celllist[3].
        string_value = "2 or 3",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
        reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
        row_tot_cnt].celllist[15].string_value = resolution_txt
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="EDITONLINEMODEAVAIL"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="EDITONLINEMODEAVAIL")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="SHOW_EOL"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="0")
        powerchart_found = 1
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="0")
        surginet_found = 1
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="0")
        firstnet_found = 1
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (powerchart_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "SHOW_EOL"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (surginet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "SHOW_EOL"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    IF (firstnet_found=0)
     SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
     SET stat = alterlist(reply->rowlist,row_tot_cnt)
     SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
     SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
     SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "SHOW_EOL"
     SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
     SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
     SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
     SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
     SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
     SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
     SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
    ENDIF
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="SHOW_EOL"
       AND nvp.active_ind=1)
     ORDER BY ap.application_number, cv.display, ap.position_cd
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value != "0")
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "SHOW_EOL", reply->rowlist[row_tot_cnt].celllist[3].string_value
        = "0",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Position"
       IF (ap.application_number=600005)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       ELSEIF (ap.application_number=820000)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       ELSEIF (ap.application_number=4250111)
        reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
       reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
       row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter
    ;end select
   ENDIF
   IF ((request->paramlist[plcnt].meaning="DISCHMODPRESCRIPT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="DISCHMODPRESCRIPT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_eval = 0
    SET surginet_eval = 0
    SET firstnet_eval = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DSCH_MODIFY_ORDER"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="REJECT")
        powerchart_eval = 1
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="REJECT")
        surginet_eval = 1
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="REJECT")
        firstnet_eval = 1
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_eval=1) OR (((surginet_eval=1) OR (firstnet_eval=1)) )) )
     SET powerchart_found = 0
     SET surginet_found = 0
     SET firstnet_found = 0
     SELECT INTO "nl:"
      FROM app_prefs ap,
       name_value_prefs nvp
      PLAN (ap
       WHERE ap.application_number IN (600005, 820000, 4250111)
        AND ap.position_cd=0
        AND ap.prsnl_id=0
        AND ap.active_ind=1)
       JOIN (nvp
       WHERE nvp.parent_entity_name="APP_PREFS"
        AND nvp.parent_entity_id=ap.app_prefs_id
        AND nvp.pvc_name="DSCH_MODIFY_PRESCRIPTION"
        AND nvp.active_ind=1)
      DETAIL
       IF (ap.application_number=600005)
        IF (nvp.pvc_value="ALLOW")
         powerchart_found = 1
        ELSE
         powerchart_value = nvp.pvc_value
        ENDIF
       ELSEIF (ap.application_number=820000)
        IF (nvp.pvc_value="ALLOW")
         surginet_found = 1
        ELSE
         surginet_value = nvp.pvc_value
        ENDIF
       ELSEIF (ap.application_number=4250111)
        IF (nvp.pvc_value="ALLOW")
         firstnet_found = 1
        ELSE
         firstnet_value = nvp.pvc_value
        ENDIF
       ENDIF
      WITH nocounter
     ;end select
     IF (powerchart_eval=1)
      IF (powerchart_found=0)
       SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
       SET stat = alterlist(reply->rowlist,row_tot_cnt)
       SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
       SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
       SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_MODIFY_PRESCRIPTION"
       SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALLOW"
       SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
       SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
       SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
       SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     ENDIF
     IF (surginet_eval=1)
      IF (surginet_found=0)
       SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
       SET stat = alterlist(reply->rowlist,row_tot_cnt)
       SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
       SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
       SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_MODIFY_PRESCRIPTION"
       SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALLOW"
       SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
       SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
       SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
       SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     ENDIF
     IF (firstnet_eval=1)
      IF (firstnet_found=0)
       SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
       SET stat = alterlist(reply->rowlist,row_tot_cnt)
       SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
       SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
       SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "DSCH_MODIFY_PRESCRIPTION"
       SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "ALLOW"
       SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
       SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
       SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
       SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     ENDIF
    ENDIF
    SET tcnt = 0
    SET scnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="DSCH_MODIFY_ORDER"
       AND nvp.active_ind=1)
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value="REJECT")
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].position_cd = ap
       .position_cd,
       tempids->ids[tcnt].application_number = ap.application_number
      ENDIF
      scnt = (scnt+ 1), stat = alterlist(tempids->ords,scnt), tempids->ords[scnt].position_cd = ap
      .position_cd,
      tempids->ords[scnt].application_number = ap.application_number
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM (dummyt d  WITH seq = scnt),
      app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp,
      dummyt d1
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name != "DSCH_MODIFY_ORDER"
       AND nvp.active_ind=1)
      JOIN (d1)
      JOIN (d
      WHERE (tempids->ords[d.seq].position_cd=ap.position_cd)
       AND (tempids->ords[d.seq].application_number=ap.application_number))
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((ap.application_number=600005
       AND powerchart_eval=1) OR (((ap.application_number=820000
       AND surginet_eval=1) OR (ap.application_number=4250111
       AND firstnet_eval=1)) )) )
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].position_cd = ap
       .position_cd,
       tempids->ids[tcnt].application_number = ap.application_number
      ENDIF
     WITH nocounter, outerjoin = d1, dontexist
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       app_prefs ap,
       code_value cv,
       prsnl p,
       name_value_prefs nvp
      PLAN (d
       WHERE (tempids->ids[d.seq].position_cd > 0))
       JOIN (ap
       WHERE (ap.application_number=tempids->ids[d.seq].application_number)
        AND (ap.position_cd=tempids->ids[d.seq].position_cd)
        AND ap.prsnl_id=0
        AND ap.active_ind=1)
       JOIN (cv
       WHERE cv.code_value=ap.position_cd
        AND cv.active_ind=1)
       JOIN (p
       WHERE p.position_cd=ap.position_cd
        AND p.active_ind=1)
       JOIN (nvp
       WHERE nvp.parent_entity_name="APP_PREFS"
        AND nvp.parent_entity_id=ap.app_prefs_id
        AND nvp.pvc_name="DSCH_MODIFY_PRESCRIPTION"
        AND nvp.active_ind=1)
      ORDER BY ap.application_number, ap.position_cd
      HEAD ap.application_number
       temp_cnt = 0
      HEAD ap.position_cd
       IF (nvp.pvc_value != "ALLOW")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "DSCH_MODIFY_PRESCRIPTION", reply->rowlist[row_tot_cnt].
        celllist[3].string_value = "ALLOW",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF ((tempids->ids[d.seq].application_number=600005))
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF ((tempids->ids[d.seq].application_number=820000))
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF ((tempids->ids[d.seq].application_number=4250111))
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
        reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
        row_tot_cnt].celllist[15].string_value = resolution_txt
       ENDIF
      WITH nocounter
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="THERAPEUTICVOCABTYPE"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="THERAPEUTICVOCABTYPE")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_eval = 0
    SET surginet_eval = 0
    SET firstnet_eval = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_ADVANCED_SEARCH_OPTIONS"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_eval = 1
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_eval = 1
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_eval = 1
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    IF (((powerchart_eval=1) OR (((surginet_eval=1) OR (firstnet_eval=1)) )) )
     SET powerchart_found = 0
     SET surginet_found = 0
     SET firstnet_found = 0
     SELECT INTO "nl:"
      FROM app_prefs ap,
       name_value_prefs nvp
      PLAN (ap
       WHERE ap.application_number IN (600005, 820000, 4250111)
        AND ap.position_cd=0
        AND ap.prsnl_id=0
        AND ap.active_ind=1)
       JOIN (nvp
       WHERE nvp.parent_entity_name="APP_PREFS"
        AND nvp.parent_entity_id=ap.app_prefs_id
        AND nvp.pvc_name="THERAPEUTIC_VOCABULARY_TYPE"
        AND nvp.active_ind=1)
      DETAIL
       IF (ap.application_number=600005)
        IF (nvp.pvc_value="0")
         powerchart_found = 1
        ELSE
         powerchart_value = nvp.pvc_value
        ENDIF
       ELSEIF (ap.application_number=820000)
        IF (nvp.pvc_value="0")
         surginet_found = 1
        ELSE
         surginet_value = nvp.pvc_value
        ENDIF
       ELSEIF (ap.application_number=4250111)
        IF (nvp.pvc_value="0")
         firstnet_found = 1
        ELSE
         firstnet_value = nvp.pvc_value
        ENDIF
       ENDIF
      WITH nocounter
     ;end select
     IF (powerchart_eval=1)
      IF (powerchart_found=0)
       SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
       SET stat = alterlist(reply->rowlist,row_tot_cnt)
       SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
       SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
       SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "THERAPEUTIC_VOCABULARY_TYPE"
       SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
       SET reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value
       SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
       SET reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
       SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
       SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     ENDIF
     IF (surginet_eval=1)
      IF (surginet_found=0)
       SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
       SET stat = alterlist(reply->rowlist,row_tot_cnt)
       SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
       SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
       SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "THERAPEUTIC_VOCABULARY_TYPE"
       SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
       SET reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value
       SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
       SET reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
       SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
       SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     ENDIF
     IF (firstnet_eval=1)
      IF (firstnet_found=0)
       SET row_tot_cnt = (size(reply->rowlist,5)+ 1)
       SET stat = alterlist(reply->rowlist,row_tot_cnt)
       SET stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt)
       SET reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc
       SET reply->rowlist[row_tot_cnt].celllist[2].string_value = "THERAPEUTIC_VOCABULARY_TYPE"
       SET reply->rowlist[row_tot_cnt].celllist[3].string_value = "0"
       SET reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value
       SET reply->rowlist[row_tot_cnt].celllist[5].string_value = "Application"
       SET reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
       SET reply->rowlist[row_tot_cnt].celllist[7].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[12].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[13].string_value = ""
       SET reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint"
       SET reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     ENDIF
    ENDIF
    SET tcnt = 0
    SET scnt = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ENABLE_ADVANCED_SEARCH_OPTIONS"
       AND nvp.active_ind=1)
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (nvp.pvc_value="1")
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].position_cd = ap
       .position_cd,
       tempids->ids[tcnt].application_number = ap.application_number
      ENDIF
      scnt = (scnt+ 1), stat = alterlist(tempids->ords,scnt), tempids->ords[scnt].position_cd = ap
      .position_cd,
      tempids->ords[scnt].application_number = ap.application_number
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM (dummyt d  WITH seq = scnt),
      app_prefs ap,
      code_value cv,
      prsnl p,
      name_value_prefs nvp,
      dummyt d1
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd > 0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (cv
      WHERE cv.code_value=ap.position_cd
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=ap.position_cd
       AND p.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name != "ENABLE_ADVANCED_SEARCH_OPTIONS"
       AND nvp.active_ind=1)
      JOIN (d1)
      JOIN (d
      WHERE (tempids->ords[d.seq].position_cd=ap.position_cd)
       AND (tempids->ords[d.seq].application_number=ap.application_number))
     HEAD ap.application_number
      temp_cnt = 0
     HEAD ap.position_cd
      IF (((ap.application_number=600005
       AND powerchart_eval=1) OR (((ap.application_number=820000
       AND surginet_eval=1) OR (ap.application_number=4250111
       AND firstnet_eval=1)) )) )
       tcnt = (tcnt+ 1), stat = alterlist(tempids->ids,tcnt), tempids->ids[tcnt].position_cd = ap
       .position_cd,
       tempids->ids[tcnt].application_number = ap.application_number
      ENDIF
     WITH nocounter, outerjoin = d1, dontexist
    ;end select
    IF (tcnt > 0)
     SELECT INTO "nl:"
      FROM (dummyt d  WITH seq = tcnt),
       app_prefs ap,
       code_value cv,
       prsnl p,
       name_value_prefs nvp
      PLAN (d
       WHERE (tempids->ids[d.seq].position_cd > 0))
       JOIN (ap
       WHERE (ap.application_number=tempids->ids[d.seq].application_number)
        AND (ap.position_cd=tempids->ids[d.seq].position_cd)
        AND ap.prsnl_id=0
        AND ap.active_ind=1)
       JOIN (cv
       WHERE cv.code_value=ap.position_cd
        AND cv.active_ind=1)
       JOIN (p
       WHERE p.position_cd=ap.position_cd
        AND p.active_ind=1)
       JOIN (nvp
       WHERE nvp.parent_entity_name="APP_PREFS"
        AND nvp.parent_entity_id=ap.app_prefs_id
        AND nvp.pvc_name="THERAPEUTIC_VOCABULARY_TYPE"
        AND nvp.active_ind=1)
      ORDER BY ap.application_number, ap.position_cd
      HEAD ap.application_number
       temp_cnt = 0
      HEAD ap.position_cd
       IF (nvp.pvc_value != "0")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "THERAPEUTIC_VOCABULARY_TYPE", reply->rowlist[row_tot_cnt].
        celllist[3].string_value = "0",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF ((tempids->ids[d.seq].application_number=600005))
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF ((tempids->ids[d.seq].application_number=820000))
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF ((tempids->ids[d.seq].application_number=4250111))
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[13].string_value = "",
        reply->rowlist[row_tot_cnt].celllist[14].string_value = "PrefMaint", reply->rowlist[
        row_tot_cnt].celllist[15].string_value = resolution_txt
       ENDIF
      WITH nocounter
     ;end select
    ENDIF
   ENDIF
   IF ((request->paramlist[plcnt].meaning="PREVPATIENTEDU"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="PREVPATIENTEDU")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE prvreln_var = f8 WITH constant(uar_get_code_by("MEANING",16409,"PRVRELN")), protect
    SET tcnt = 0
    SET cnt = 0
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking provider role,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=hide previously selected")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    DECLARE tpname = c40 WITH noconstant("")
    DECLARE tgname = c40 WITH noconstant("")
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    SET strlen = 255
    DECLARE entstr = c150
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET d = findstring("prefentry=",dnstr,1)
      IF (d > 0)
       SET e = findstring("=",dnstr,d)
       SET f = findstring(",",dnstr,d)
       SET entstr = substring((e+ 1),((f - e) - 1),dnstr)
      ELSE
       SET entstr = ""
      ENDIF
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      SET tprole_id = cnvtreal(grpstr)
      SET tcnt = (tcnt+ 1)
      SET stat = alterlist(temprec->tlist,tcnt)
      SET temprec->tlist[tcnt].tprole = tprole_id
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=1)
          SET valid_ind = 0
          SELECT INTO "nl:"
           FROM track_reference tr,
            code_value cv
           PLAN (tr
            WHERE tr.tracking_ref_id=tprole_id
             AND tr.tracking_ref_type_cd=prvreln_var)
            JOIN (cv
            WHERE cv.code_value=tr.tracking_group_cd
             AND cv.active_ind=1)
           DETAIL
            row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
            stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
            reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
            row_tot_cnt].celllist[2].string_value = "hide previously selected", reply->rowlist[
            row_tot_cnt].celllist[3].string_value = "0 - display previously selected",
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "1 - hide previously selected",
            reply->rowlist[row_tot_cnt].celllist[5].string_value = "Tracking provider role", reply->
            rowlist[row_tot_cnt].celllist[6].string_value = "",
            reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(tr.display)," (",trim(
              cv.display),")"), reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->
            rowlist[row_tot_cnt].celllist[14].string_value = "Tracking DbTool",
            reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           WITH nocounter
          ;end select
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=hide previously selected")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
         SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
         IF (cnvtint(trim(xvalue))=1)
          SET valid_ind = 0
          SET tgrp_cd = cnvtreal(grpstr)
          SELECT INTO "nl:"
           FROM (dummyt d  WITH seq = tcnt),
            track_reference tr,
            dummyt d1
           PLAN (tr)
            JOIN (d1)
            JOIN (d
            WHERE (tr.tracking_ref_id=temprec->tlist[d.seq].tprole))
           ORDER BY tr.tracking_ref_id
           DETAIL
            cnt = (cnt+ 1), stat = alterlist(temprec->plist,cnt), temprec->plist[cnt].tp_id = tr
            .tracking_ref_id
           WITH nocounter, outerjoin = d1, dontexist
          ;end select
          SELECT INTO "nl:"
           FROM (dummyt d  WITH seq = cnt),
            track_reference tr,
            code_value cv
           PLAN (d)
            JOIN (tr
            WHERE (tr.tracking_ref_id=temprec->plist[d.seq].tp_id)
             AND tr.tracking_group_cd=tgrp_cd
             AND tr.tracking_ref_type_cd=prvreln_var)
            JOIN (cv
            WHERE cv.code_value=tgrp_cd
             AND cv.code_set=16370
             AND cv.active_ind=1)
           DETAIL
            row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
            stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
            reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
            row_tot_cnt].celllist[2].string_value = "hide previously selected", reply->rowlist[
            row_tot_cnt].celllist[3].string_value = "0 - display previously selected",
            reply->rowlist[row_tot_cnt].celllist[4].string_value = "1 - hide previously selected",
            reply->rowlist[row_tot_cnt].celllist[5].string_value = "Tracking provider role", reply->
            rowlist[row_tot_cnt].celllist[6].string_value = "",
            reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(tr.display),"(",trim(
              cv.display),")"), reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->
            rowlist[row_tot_cnt].celllist[14].string_value = "Tracking DbTool",
            reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
           WITH nocounter
          ;end select
         ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
   ENDIF
   IF ((request->paramlist[plcnt].meaning="OVERWRITEPREVCLIN"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="OVERWRITEPREVCLIN")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE prvreln_var = f8 WITH constant(uar_get_code_by("MEANING",16409,"PRVRELN")), protect
    SET tcnt = 0
    SET cnt = 0
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking provider role,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=clinical")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=depart tab section")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    DECLARE tpname = c40 WITH noconstant("")
    DECLARE tgname = c40 WITH noconstant("")
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    SET strlen = 255
    DECLARE entstr = c150
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET d = findstring("prefentry=",dnstr,1)
      IF (d > 0)
       SET e = findstring("=",dnstr,d)
       SET f = findstring(",",dnstr,d)
       SET entstr = substring((e+ 1),((f - e) - 1),dnstr)
      ELSE
       SET entstr = ""
      ENDIF
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      SET tprole_id = cnvtreal(grpstr)
      SET tcnt = (tcnt+ 1)
      SET stat = alterlist(temprec->tlist,tcnt)
      SET temprec->tlist[tcnt].tprole = tprole_id
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        DECLARE xvalstr = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET a = findstring(";",xvalue,1,1)
          SET b = textlen(xvalue)
          SET xvalstr = substring((a+ 1),((b - a) - 1),xvalue)
          IF (cnvtint(trim(xvalstr))=0)
           SET valid_ind = 0
           SELECT INTO "nl:"
            FROM track_reference tr,
             code_value cv
            PLAN (tr
             WHERE tr.tracking_ref_id=tprole_id
              AND tr.tracking_ref_type_cd=prvreln_var)
             JOIN (cv
             WHERE cv.code_value=tr.tracking_group_cd
              AND cv.active_ind=1)
            DETAIL
             row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
             stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
             reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
             row_tot_cnt].celllist[2].string_value = "Clinical overwrite", reply->rowlist[row_tot_cnt
             ].celllist[3].string_value = "1 - overwrite",
             reply->rowlist[row_tot_cnt].celllist[4].string_value = "0 - don't overwrite", reply->
             rowlist[row_tot_cnt].celllist[5].string_value = "Tracking provider role", reply->
             rowlist[row_tot_cnt].celllist[6].string_value = "",
             reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(tr.display)," (",trim
              (cv.display),")"), reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->
             rowlist[row_tot_cnt].celllist[14].string_value = "Tracking DbTool",
             reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            WITH nocounter
           ;end select
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=clinical")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=depart tab section")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        DECLARE xvalstr = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET a = findstring(";",xvalue,1,1)
          SET b = textlen(xvalue)
          SET xvalstr = substring((a+ 1),((b - a) - 1),xvalue)
          IF (cnvtint(trim(xvalstr))=0)
           SET valid_ind = 0
           SET tgrp_cd = cnvtreal(grpstr)
           SELECT INTO "nl:"
            FROM (dummyt d  WITH seq = tcnt),
             track_reference tr,
             dummyt d1
            PLAN (tr)
             JOIN (d1)
             JOIN (d
             WHERE (tr.tracking_ref_id=temprec->tlist[d.seq].tprole))
            ORDER BY tr.tracking_ref_id
            DETAIL
             cnt = (cnt+ 1), stat = alterlist(temprec->plist,cnt), temprec->plist[cnt].tp_id = tr
             .tracking_ref_id
            WITH nocounter, outerjoin = d1, dontexist
           ;end select
           SELECT INTO "nl:"
            FROM (dummyt d  WITH seq = cnt),
             track_reference tr,
             code_value cv
            PLAN (d)
             JOIN (tr
             WHERE (tr.tracking_ref_id=temprec->plist[d.seq].tp_id)
              AND tr.tracking_group_cd=tgrp_cd
              AND tr.tracking_ref_type_cd=prvreln_var)
             JOIN (cv
             WHERE cv.code_value=tgrp_cd
              AND cv.code_set=16370
              AND cv.active_ind=1)
            DETAIL
             row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
             stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
             reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
             row_tot_cnt].celllist[2].string_value = "Clinical overwrite", reply->rowlist[row_tot_cnt
             ].celllist[3].string_value = "1 - overwrite",
             reply->rowlist[row_tot_cnt].celllist[4].string_value = "0 - don't overwrite", reply->
             rowlist[row_tot_cnt].celllist[5].string_value = "Tracking provider role", reply->
             rowlist[row_tot_cnt].celllist[6].string_value = "",
             reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(tr.display)," (",trim
              (cv.display),")"), reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->
             rowlist[row_tot_cnt].celllist[14].string_value = "Tracking DbTool",
             reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            WITH nocounter
           ;end select
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
   ENDIF
   IF ((request->paramlist[plcnt].meaning="OVERWRITEPREVPAT"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="OVERWRITEPREVPAT")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE prvreln_var = f8 WITH constant(uar_get_code_by("MEANING",16409,"PRVRELN")), protect
    SET tcnt = 0
    SET cnt = 0
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking provider role,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=patient")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=depart tab section")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    DECLARE tpname = c40 WITH noconstant("")
    DECLARE tgname = c40 WITH noconstant("")
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    SET strlen = 255
    DECLARE entstr = c150
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET d = findstring("prefentry=",dnstr,1)
      IF (d > 0)
       SET e = findstring("=",dnstr,d)
       SET f = findstring(",",dnstr,d)
       SET entstr = substring((e+ 1),((f - e) - 1),dnstr)
      ELSE
       SET entstr = ""
      ENDIF
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      SET tprole_id = cnvtreal(grpstr)
      SET tcnt = (tcnt+ 1)
      SET stat = alterlist(temprec->tlist,tcnt)
      SET temprec->tlist[tcnt].tprole = tprole_id
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        DECLARE xvalstr = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET a = findstring(";",xvalue,1,1)
          SET b = textlen(xvalue)
          SET xvalstr = substring((a+ 1),((b - a) - 1),xvalue)
          IF (cnvtint(trim(xvalstr))=0)
           SET valid_ind = 0
           SET tprole_id = cnvtreal(grpstr)
           SELECT INTO "nl:"
            FROM track_reference tr,
             code_value cv
            PLAN (tr
             WHERE tr.tracking_ref_id=tprole_id
              AND tr.tracking_ref_type_cd=prvreln_var)
             JOIN (cv
             WHERE cv.code_value=tr.tracking_group_cd
              AND cv.active_ind=1)
            DETAIL
             row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
             stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
             reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
             row_tot_cnt].celllist[2].string_value = "Patient overwrite", reply->rowlist[row_tot_cnt]
             .celllist[3].string_value = "1 - overwrite",
             reply->rowlist[row_tot_cnt].celllist[4].string_value = "0 - don't overwrite", reply->
             rowlist[row_tot_cnt].celllist[5].string_value = "Tracking provider role", reply->
             rowlist[row_tot_cnt].celllist[6].string_value = "",
             reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(tr.display),"(",trim(
               cv.display),")"), reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->
             rowlist[row_tot_cnt].celllist[14].string_value = "Tracking DbTool",
             reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            WITH nocounter
           ;end select
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    CALL uar_prefdestroyinstance(hpref)
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=patient")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=depart tab section")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        DECLARE xvalstr = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET a = findstring(";",xvalue,1,1)
          SET b = textlen(xvalue)
          SET xvalstr = substring((a+ 1),((b - a) - 1),xvalue)
          IF (cnvtint(trim(xvalstr))=0)
           SET valid_ind = 0
           SET tgrp_cd = cnvtreal(grpstr)
           SELECT INTO "nl:"
            FROM (dummyt d  WITH seq = tcnt),
             track_reference tr,
             dummyt d1
            PLAN (tr)
             JOIN (d1)
             JOIN (d
             WHERE (tr.tracking_ref_id=temprec->tlist[d.seq].tprole))
            ORDER BY tr.tracking_ref_id
            DETAIL
             cnt = (cnt+ 1), stat = alterlist(temprec->plist,cnt), temprec->plist[cnt].tp_id = tr
             .tracking_ref_id
            WITH nocounter, outerjoin = d1, dontexist
           ;end select
           SELECT INTO "nl:"
            FROM (dummyt d  WITH seq = cnt),
             track_reference tr,
             code_value cv
            PLAN (d)
             JOIN (tr
             WHERE (tr.tracking_ref_id=temprec->plist[d.seq].tp_id)
              AND tr.tracking_group_cd=tgrp_cd
              AND tr.tracking_ref_type_cd=prvreln_var)
             JOIN (cv
             WHERE cv.code_value=tgrp_cd
              AND cv.code_set=16370
              AND cv.active_ind=1)
            DETAIL
             row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
             stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
             reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
             row_tot_cnt].celllist[2].string_value = "Patient overwrite", reply->rowlist[row_tot_cnt]
             .celllist[3].string_value = "1 - overwrite",
             reply->rowlist[row_tot_cnt].celllist[4].string_value = "0 - don't overwrite", reply->
             rowlist[row_tot_cnt].celllist[5].string_value = "Tracking provider role", reply->
             rowlist[row_tot_cnt].celllist[6].string_value = "",
             reply->rowlist[row_tot_cnt].celllist[7].string_value = concat(trim(tr.display),"(",trim(
               cv.display),")"), reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->
             rowlist[row_tot_cnt].celllist[14].string_value = "Tracking DbTool",
             reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            WITH nocounter
           ;end select
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
   ENDIF
   IF ((request->paramlist[plcnt].meaning="MISSINGINFOWARN"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="MISSINGINFOWARN")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE yes = f8 WITH constant(uar_get_code_by("MEANING",20317,"YES")), protect
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=missing followup warning")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=patienteducation")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET valid_ind = 0
          SET tgrp_cd = cnvtreal(grpstr)
          SET value = cnvtreal(trim(xvalue))
          DECLARE val_disp = vc WITH noconstant("")
          SELECT INTO "nl:"
           FROM code_value c
           PLAN (c
            WHERE c.code_value=value)
           DETAIL
            val_disp = c.display
           WITH nocounter
          ;end select
          IF (cnvtint(trim(xvalue)) != yes)
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=tgrp_cd
              AND cv.code_set=16370
              AND cv.active_ind=1)
            DETAIL
             row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
             stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
             reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
             row_tot_cnt].celllist[2].string_value = "missing follow-up warning", reply->rowlist[
             row_tot_cnt].celllist[3].string_value = "Yes",
             reply->rowlist[row_tot_cnt].celllist[4].string_value = val_disp, reply->rowlist[
             row_tot_cnt].celllist[5].string_value = "Tracking group", reply->rowlist[row_tot_cnt].
             celllist[6].string_value = firstnet_app_desc,
             reply->rowlist[row_tot_cnt].celllist[7].string_value = trim(cv.display), reply->rowlist[
             row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
             string_value = "Tracking DbTool",
             reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            WITH nocounter
           ;end select
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
   ENDIF
   IF ((request->paramlist[plcnt].meaning="AUTOSAVEPATINSTEMR"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="AUTOSAVEPATINSTEMR")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE yes = f8 WITH constant(uar_get_code_by("MEANING",20317,"YES")), protect
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=save on print")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=patienteducation")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET valid_ind = 0
          SET tgrp_cd = cnvtreal(grpstr)
          SET value = cnvtreal(trim(xvalue))
          DECLARE val_disp = vc WITH noconstant("")
          SELECT INTO "nl:"
           FROM code_value c
           PLAN (c
            WHERE c.code_value=value)
           DETAIL
            val_disp = c.display
           WITH nocounter
          ;end select
          IF (cnvtint(trim(xvalue)) != yes)
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=tgrp_cd
              AND cv.code_set=16370
              AND cv.active_ind=1)
            DETAIL
             row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
             stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
             reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
             row_tot_cnt].celllist[2].string_value = "save on print", reply->rowlist[row_tot_cnt].
             celllist[3].string_value = "Yes",
             reply->rowlist[row_tot_cnt].celllist[4].string_value = val_disp, reply->rowlist[
             row_tot_cnt].celllist[5].string_value = "Tracking group", reply->rowlist[row_tot_cnt].
             celllist[6].string_value = firstnet_app_desc,
             reply->rowlist[row_tot_cnt].celllist[7].string_value = trim(cv.display), reply->rowlist[
             row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
             string_value = "Tracking DbTool",
             reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            WITH nocounter
           ;end select
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
   ENDIF
   IF ((request->paramlist[plcnt].meaning="CLOSEPATEDUWINDOW"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="CLOSEPATEDUWINDOW")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    DECLARE yes = f8 WITH constant(uar_get_code_by("MEANING",20317,"YES")), protect
    SET hpref = uar_prefcreateinstance(18)
    SET stat = uar_prefsetbasedn(hpref,"prefcontext=tracking group,prefroot=prefroot")
    SET stat = uar_prefaddattr(hpref,"prefvalue")
    SET stat = uar_prefaddfilter(hpref,"prefentry=exit on ok")
    SET stat = uar_prefaddfilter(hpref,"prefgroup=patienteducation")
    SET stat = uar_prefperform(hpref)
    DECLARE count = i4
    SET stat = uar_prefgetentrycount(hpref,count)
    SET i = 0
    DECLARE dnstr = c255 WITH noconstant("")
    DECLARE grpstr = c255 WITH noconstant("")
    SET strlen = 255
    FOR (x = 0 TO (count - 1))
      SET hentry = uar_prefgetentry(hpref,x)
      SET stat = uar_prefgetentryname(hentry,dnstr,strlen)
      SET a = findstring("prefgroup=",dnstr,1,1)
      SET b = findstring("=",dnstr,a)
      SET c = findstring(",",dnstr,a)
      SET grpstr = substring((b+ 1),((c - b) - 1),dnstr)
      SET acnt = 0
      SET stat = uar_prefgetentryattrcount(hentry,acnt)
      FOR (y = 0 TO (acnt - 1))
        SET hattr = uar_prefgetentryattr(hentry,y)
        SET valcnt = 0
        SET stat = uar_prefgetattrvalcount(hattr,valcnt)
        DECLARE xvalue = c255 WITH noconstant("")
        FOR (z = 0 TO (valcnt - 1))
          SET stat = uar_prefgetattrval(hattr,xvalue,255,z)
          SET valid_ind = 0
          SET tgrp_cd = cnvtreal(grpstr)
          SET value = cnvtreal(trim(xvalue))
          DECLARE val_disp = vc WITH noconstant("")
          SELECT INTO "nl:"
           FROM code_value c
           PLAN (c
            WHERE c.code_value=value)
           DETAIL
            val_disp = c.display
           WITH nocounter
          ;end select
          IF (cnvtint(trim(xvalue)) != yes)
           SELECT INTO "nl:"
            FROM code_value cv
            PLAN (cv
             WHERE cv.code_value=tgrp_cd
              AND cv.code_set=16370
              AND cv.active_ind=1)
            DETAIL
             row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
             stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
             reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
             row_tot_cnt].celllist[2].string_value = "exit on ok", reply->rowlist[row_tot_cnt].
             celllist[3].string_value = "Yes",
             reply->rowlist[row_tot_cnt].celllist[4].string_value = val_disp, reply->rowlist[
             row_tot_cnt].celllist[5].string_value = "Tracking group", reply->rowlist[row_tot_cnt].
             celllist[6].string_value = firstnet_app_desc,
             reply->rowlist[row_tot_cnt].celllist[7].string_value = trim(cv.display), reply->rowlist[
             row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].
             string_value = "Tracking DbTool",
             reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
            WITH nocounter
           ;end select
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
   ENDIF
   IF ((request->paramlist[plcnt].meaning="NURSEREVIEWPORDERS"))
    SET resolution_txt = ""
    SET short_desc = ""
    SELECT INTO "nl:"
     FROM br_rec b,
      br_long_text bl
     PLAN (b
      WHERE b.rec_mean="NURSEREVIEWPORDERS")
      JOIN (bl
      WHERE bl.long_text_id=b.resolution_txt_id)
     DETAIL
      resolution_txt = trim(bl.long_text), short_desc = trim(b.short_desc)
     WITH nocounter
    ;end select
    SET powerchart_value = " "
    SET surginet_value = " "
    SET firstnet_value = " "
    SET powerchart_found = 0
    SET surginet_found = 0
    SET firstnet_found = 0
    SELECT INTO "nl:"
     FROM app_prefs ap,
      name_value_prefs nvp
     PLAN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=0
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_INVOKE_NURSE_REVIEW"
       AND nvp.active_ind=1)
     DETAIL
      IF (ap.application_number=600005)
       IF (nvp.pvc_value="1")
        powerchart_found = 1, powerchart_value = nvp.pvc_value
       ELSE
        powerchart_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=820000)
       IF (nvp.pvc_value="1")
        surginet_found = 1, surginet_value = nvp.pvc_value
       ELSE
        surginet_value = nvp.pvc_value
       ENDIF
      ELSEIF (ap.application_number=4250111)
       IF (nvp.pvc_value="1")
        firstnet_found = 1, firstnet_value = nvp.pvc_value
       ELSE
        firstnet_value = nvp.pvc_value
       ENDIF
      ENDIF
     WITH nocounter
    ;end select
    SELECT INTO "nl:"
     FROM code_value cv,
      app_prefs ap,
      prsnl p,
      name_value_prefs nvp,
      priv_loc_reltn plr,
      privilege pv,
      dummyt d
     PLAN (cv
      WHERE cv.code_set=88
       AND cv.active_ind=1)
      JOIN (p
      WHERE p.position_cd=cv.code_value
       AND p.active_ind=1)
      JOIN (plr
      WHERE plr.position_cd=outerjoin(p.position_cd)
       AND plr.person_id=outerjoin(0)
       AND plr.ppr_cd=outerjoin(0)
       AND plr.location_cd=outerjoin(0)
       AND plr.active_ind=outerjoin(1))
      JOIN (pv
      WHERE pv.priv_loc_reltn_id=outerjoin(plr.priv_loc_reltn_id)
       AND pv.privilege_cd=outerjoin(nursereview_cd)
       AND pv.active_ind=outerjoin(1))
      JOIN (d)
      JOIN (ap
      WHERE ap.application_number IN (600005, 820000, 4250111)
       AND ap.position_cd=cv.code_value
       AND ap.prsnl_id=0
       AND ap.active_ind=1)
      JOIN (nvp
      WHERE nvp.parent_entity_name="APP_PREFS"
       AND nvp.parent_entity_id=ap.app_prefs_id
       AND nvp.pvc_name="ALLOW_INVOKE_NURSE_REVIEW"
       AND nvp.active_ind=1)
     ORDER BY cv.display, p.position_cd, ap.application_number
     HEAD p.position_cd
      pc = 0, sn = 0, fn = 0,
      failone_ind = 0, failtwo_ind = 0
     HEAD ap.application_number
      IF (ap.application_number=600005)
       pc = 1
      ELSEIF (ap.application_number=820000)
       sn = 1
      ELSEIF (ap.application_number=4250111)
       fn = 1
      ENDIF
      IF (((pv.privilege_id=0) OR (pv.privilege_id > 0
       AND pv.priv_value_cd=yes_cd)) )
       failone_ind = 1
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value != "1")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].
        celllist[3].string_value = "1",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Nurse Review"
        IF (pv.privilege_id=0)
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
        ELSE
         reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (ap.application_number=600005
         AND powerchart_found=0)
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[
         6].string_value = powerchart_app_desc,
         reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
         row_tot_cnt].celllist[8].string_value = "Nurse Review"
         IF (pv.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSE
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ELSEIF (ap.application_number=820000
         AND surginet_found=0)
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[
         6].string_value = surginet_app_desc,
         reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
         row_tot_cnt].celllist[8].string_value = "Nurse Review"
         IF (pv.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSE
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ELSEIF (ap.application_number=4250111
         AND firstnet_found=0)
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[
         6].string_value = firstnet_app_desc,
         reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
         row_tot_cnt].celllist[8].string_value = "Nurse Review"
         IF (pv.privilege_id=0)
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
         ELSE
          reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
         ENDIF
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ELSEIF (pv.privilege_id > 0
       AND pv.priv_value_cd=no_cd)
       failtwo_ind = 1
       IF (nvp.name_value_prefs_id > 0
        AND nvp.pvc_value="1")
        row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
         = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
        reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt
        ].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].
        celllist[3].string_value = "0",
        reply->rowlist[row_tot_cnt].celllist[4].string_value = nvp.pvc_value, reply->rowlist[
        row_tot_cnt].celllist[5].string_value = "Position"
        IF (ap.application_number=600005)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = powerchart_app_desc
        ELSEIF (ap.application_number=820000)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = surginet_app_desc
        ELSEIF (ap.application_number=4250111)
         reply->rowlist[row_tot_cnt].celllist[6].string_value = firstnet_app_desc
        ENDIF
        reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt
        ].celllist[8].string_value = "Nurse Review", reply->rowlist[row_tot_cnt].celllist[9].
        string_value = "No",
        reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
        celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
        "PrefMaint",
        reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
       ELSEIF (nvp.name_value_prefs_id=0)
        IF (ap.application_number=600005
         AND powerchart_found=1)
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[
         6].string_value = powerchart_app_desc,
         reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
         row_tot_cnt].celllist[8].string_value = "Nurse Review", reply->rowlist[row_tot_cnt].
         celllist[9].string_value = "No",
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ELSEIF (ap.application_number=820000
         AND surginet_found=1)
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[
         6].string_value = surginet_app_desc,
         reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
         row_tot_cnt].celllist[8].string_value = "Nurse Review", reply->rowlist[row_tot_cnt].
         celllist[9].string_value = "No",
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ELSEIF (ap.application_number=4250111
         AND firstnet_found=1)
         row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt),
         stat = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
         reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[
         row_tot_cnt].celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[
         row_tot_cnt].celllist[3].string_value = "1",
         reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
         row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[
         6].string_value = firstnet_app_desc,
         reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[
         row_tot_cnt].celllist[8].string_value = "Nurse Review", reply->rowlist[row_tot_cnt].
         celllist[9].string_value = "No",
         reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
         celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
         "PrefMaint",
         reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
        ENDIF
       ENDIF
      ENDIF
     FOOT  p.position_cd
      IF (failtwo_ind=1
       AND powerchart_found=1
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Nurse Review", reply->rowlist[row_tot_cnt].celllist[9].
       string_value = "No",
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ELSEIF (failone_ind=1
       AND powerchart_found=0
       AND pc=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = powerchart_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = powerchart_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Nurse Review"
       IF (pv.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (failtwo_ind=1
       AND surginet_found=1
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Nurse Review", reply->rowlist[row_tot_cnt].celllist[9].
       string_value = "No",
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ELSEIF (failone_ind=1
       AND surginet_found=0
       AND sn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = surginet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = surginet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Nurse Review"
       IF (pv.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
      IF (failtwo_ind=1
       AND firstnet_found=1
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Nurse Review", reply->rowlist[row_tot_cnt].celllist[9].
       string_value = "No",
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ELSEIF (failone_ind=1
       AND firstnet_found=0
       AND fn=0)
       row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
        = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
       reply->rowlist[row_tot_cnt].celllist[1].string_value = short_desc, reply->rowlist[row_tot_cnt]
       .celllist[2].string_value = "ALLOW_INVOKE_NURSE_REVIEW", reply->rowlist[row_tot_cnt].celllist[
       3].string_value = "1",
       reply->rowlist[row_tot_cnt].celllist[4].string_value = firstnet_value, reply->rowlist[
       row_tot_cnt].celllist[5].string_value = "Application", reply->rowlist[row_tot_cnt].celllist[6]
       .string_value = firstnet_app_desc,
       reply->rowlist[row_tot_cnt].celllist[7].string_value = cv.display, reply->rowlist[row_tot_cnt]
       .celllist[8].string_value = "Nurse Review"
       IF (pv.privilege_id=0)
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Not defined, default Yes"
       ELSE
        reply->rowlist[row_tot_cnt].celllist[9].string_value = "Yes"
       ENDIF
       reply->rowlist[row_tot_cnt].celllist[12].string_value = "", reply->rowlist[row_tot_cnt].
       celllist[13].string_value = "", reply->rowlist[row_tot_cnt].celllist[14].string_value =
       "PrefMaint",
       reply->rowlist[row_tot_cnt].celllist[15].string_value = resolution_txt
      ENDIF
     WITH nocounter, outerjoin = d
    ;end select
   ENDIF
   SET detailscnt = size(detailreply->rowlist,5)
   IF (detailscnt > 0)
    SELECT INTO "nl:"
     FROM (dummyt d  WITH seq = value(detailscnt))
     DETAIL
      row_tot_cnt = (size(reply->rowlist,5)+ 1), stat = alterlist(reply->rowlist,row_tot_cnt), stat
       = alterlist(reply->rowlist[row_tot_cnt].celllist,col_cnt),
      reply->rowlist[row_tot_cnt].celllist[1].string_value = detailreply->rowlist[d.seq].celllist[1].
      string_value, reply->rowlist[row_tot_cnt].celllist[2].string_value = detailreply->rowlist[d.seq
      ].celllist[2].string_value, reply->rowlist[row_tot_cnt].celllist[3].string_value = detailreply
      ->rowlist[d.seq].celllist[3].string_value,
      reply->rowlist[row_tot_cnt].celllist[4].string_value = detailreply->rowlist[d.seq].celllist[4].
      string_value, reply->rowlist[row_tot_cnt].celllist[5].string_value = detailreply->rowlist[d.seq
      ].celllist[5].string_value, reply->rowlist[row_tot_cnt].celllist[6].string_value = detailreply
      ->rowlist[d.seq].celllist[6].string_value,
      reply->rowlist[row_tot_cnt].celllist[7].string_value = detailreply->rowlist[d.seq].celllist[7].
      string_value, reply->rowlist[row_tot_cnt].celllist[8].string_value = detailreply->rowlist[d.seq
      ].celllist[8].string_value, reply->rowlist[row_tot_cnt].celllist[9].string_value = detailreply
      ->rowlist[d.seq].celllist[9].string_value,
      reply->rowlist[row_tot_cnt].celllist[10].string_value = detailreply->rowlist[d.seq].celllist[10
      ].string_value, reply->rowlist[row_tot_cnt].celllist[11].string_value = detailreply->rowlist[d
      .seq].celllist[11].string_value, reply->rowlist[row_tot_cnt].celllist[12].string_value =
      detailreply->rowlist[d.seq].celllist[12].string_value,
      reply->rowlist[row_tot_cnt].celllist[13].string_value = detailreply->rowlist[d.seq].celllist[13
      ].string_value, reply->rowlist[row_tot_cnt].celllist[14].string_value = detailreply->rowlist[d
      .seq].celllist[14].string_value, reply->rowlist[row_tot_cnt].celllist[15].string_value =
      detailreply->rowlist[d.seq].celllist[15].string_value
     WITH nocounter
    ;end select
   ENDIF
   SET stat = initrec(detailreply)
 ENDFOR
#exit_script
 SET reply->status_data.status = "S"
END GO

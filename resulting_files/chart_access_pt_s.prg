CREATE PROGRAM chart_access_pt_s
 PROMPT
  "Output to File/Printer/MINE " = mine,
  "Enter Beginning Date of Report in MMDDYYYY Format " = curdate,
  "Enter Ending Date of Report in MMDDYYYY Format " = curdate,
  "Enter Patient Medical Record Number (REQUIRED INPUT) " = ""
 SET mrn_ind = 0.0
 SET stat = uar_get_meaning_by_codeset(4,"MRN",1,mrn_ind)
 SET beg_date = cnvtdatetime(
  IF (( $2=curdate))  $2
  ELSE cnvtdate( $2)
  ENDIF
  ,0)
 SET end_date = cnvtdatetime(
  IF (( $3=curdate))  $3
  ELSE cnvtdate( $3)
  ENDIF
  ,235959)
 SET maxsecs = 0
 IF (validate(isodbc,0)=1)
  SET maxsecs = 15
 ENDIF
 SELECT DISTINCT INTO  $1
  p.person_id, p.prsnl_id, p.ppa_first_dt_tm"DD-MMM-YYYY  HH:MM:SS;;D",
  p.ppa_last_dt_tm"DD-MMM-YYYY  HH:MM:SS;;D", p.computer_name, pe.name_full_formatted,
  pe.birth_dt_tm, pe.person_id, pa.alias,
  pa.person_id, person_alias_type_disp = uar_get_code_display(pa.person_alias_type_cd), p
  .view_caption,
  pr.name_full_formatted, position_disp = uar_get_code_display(pr.position_cd), ppa_first_dt =
  cnvtdatetime(p.ppa_first_dt_tm),
  date1 = format(p.ppa_first_dt_tm,"mm/dd/yyyy;;d")
  FROM person_prsnl_activity p,
   person pe,
   person_alias pa,
   prsnl pr
  PLAN (p
   WHERE p.ppa_first_dt_tm BETWEEN cnvtdatetime(
    IF (( $2=curdate))  $2
    ELSE cnvtdate( $2)
    ENDIF
    ,0) AND cnvtdatetime(
    IF (( $3=curdate))  $3
    ELSE cnvtdate( $3)
    ENDIF
    ,235959))
   JOIN (pe
   WHERE p.person_id=pe.person_id)
   JOIN (pa
   WHERE p.person_id=pa.person_id
    AND (pa.alias= $4)
    AND pa.person_alias_type_cd=mrn_ind)
   JOIN (pr
   WHERE p.prsnl_id=pr.person_id)
  ORDER BY pe.name_full_formatted, date1, 0
  HEAD REPORT
   m_numlines = 0,
   SUBROUTINE cclrtf_print(par_flag,par_startcol,par_numcol,par_blob,par_bloblen,par_check)
     m_output_buffer_len = 0, blob_out = fillstring(32768," "), blob_buf = fillstring(200," "),
     blob_len = 0, m_linefeed = concat(char(10)), textindex = 0,
     numcol = par_numcol, whiteflag = 0,
     CALL uar_rtf(par_blob,par_bloblen,blob_out,size(blob_out),m_output_buffer_len,par_flag),
     m_output_buffer_len = minval(m_output_buffer_len,size(trim(blob_out)))
     IF (m_output_buffer_len > 0)
      m_cc = 1
      WHILE (m_cc > 0)
       m_cc2 = findstring(m_linefeed,blob_out,m_cc),
       IF (m_cc2)
        blob_len = (m_cc2 - m_cc)
        IF (blob_len <= par_numcol)
         m_blob_buf = substring(m_cc,blob_len,blob_out), col par_startcol
         IF (par_check)
          CALL print(trim(check(m_blob_buf)))
         ELSE
          CALL print(trim(m_blob_buf))
         ENDIF
         row + 1
        ELSE
         m_blobbuf = substring(m_cc,blob_len,blob_out),
         CALL cclrtf_printline(par_startcol,par_numcol,m_blobbuf,blob_len,par_check), row + 1
        ENDIF
        IF (m_cc2 >= m_output_buffer_len)
         m_cc = 0
        ELSE
         m_cc = (m_cc2+ 1)
        ENDIF
       ELSE
        blob_len = ((m_output_buffer_len - m_cc)+ 1), m_blobbuf = substring(m_cc,blob_len,blob_out),
        CALL cclrtf_printline(par_startcol,par_numcol,m_blobbuf,blob_len,par_check),
        m_cc = 0
       ENDIF
      ENDWHILE
     ENDIF
   END ;Subroutine report
   ,
   SUBROUTINE cclrtf_printline(par_startcol,par_numcol,blob_out,blob_len,par_check)
     textindex = 0, numcol = par_numcol, whiteflag = 0,
     lastline = 0, m_linefeed = concat(char(10)), m_maxchar = concat(char(128)),
     m_find = 0
     WHILE (blob_len > 0)
       IF (blob_len <= par_numcol)
        numcol = blob_len, lastline = 1
       ENDIF
       textindex = (m_cc+ par_numcol)
       IF (lastline=0)
        whiteflag = 0
        WHILE (whiteflag=0)
         IF (((substring(textindex,1,blob_out)=" ") OR (substring(textindex,1,blob_out)=m_linefeed))
         )
          whiteflag = 1
         ELSE
          textindex = (textindex - 1)
         ENDIF
         ,
         IF (((textindex=m_cc) OR (textindex=0)) )
          textindex = (m_cc+ par_numcol), whiteflag = 1
         ENDIF
        ENDWHILE
        numcol = ((textindex - m_cc)+ 1)
       ENDIF
       m_blob_buf = substring(m_cc,numcol,blob_out)
       IF (m_blob_buf > " ")
        col par_startcol
        IF (par_check)
         CALL print(trim(check(m_blob_buf)))
        ELSE
         CALL print(trim(m_blob_buf))
        ENDIF
        row + 1
       ELSE
        blob_len = 0
       ENDIF
       m_cc = (m_cc+ numcol)
       IF (blob_len > numcol)
        blob_len = (blob_len - numcol)
       ELSE
        blob_len = 0
       ENDIF
     ENDWHILE
   END ;Subroutine report
   ,
   row 1, col 48, "CHART ACCESS FOR SPECIFIC PATIENT",
   row + 2
  HEAD PAGE
   row + 3, col 5, "Report Generated By:",
   curuser, col 44, "Report Generated On:",
   curdate, col 84, "Page:",
   curpage, row + 3, col 14,
   "From:", col 20, beg_date"mmm/dd/yyyy;;d",
   col 63, "To:", col 69,
   end_date"mmm/dd/yyyy;;d", row + 1, col 14,
   "*************************************************************************************************************",
   row + 1, name_full_formatted1 = substring(1,50,pe.name_full_formatted),
   alias1 = substring(1,20,pa.alias), col 5, "Patient Name:",
   col 26, name_full_formatted1, col 75,
   "Medical Record #:", col 94, alias1,
   row + 1, col 5, "Date of Birth:",
   col 26, pe.birth_dt_tm, row + 1,
   col 5, "Time Access Began:", col 26,
   "Tab Accessed:", col 57, "User Name:",
   col 84, "Position:", col 103,
   "Computer Name:", row + 2
  DETAIL
   name_full_formatted2 = substring(1,30,pr.name_full_formatted), computer_name1 = substring(1,20,p
    .computer_name), view_caption1 = substring(1,30,p.view_caption),
   position_disp1 = substring(1,20,position_disp), col 5, p.ppa_first_dt_tm,
   col 26, view_caption1, col 57,
   name_full_formatted2, col 84, position_disp1,
   col 103, computer_name1, row + 1
  FOOT REPORT
   col 5, "Report Generated by:", curuser,
   col 51, "Report Generated on:", curdate
  WITH maxcol = 500, noheading, format = variable,
   time = value(maxsecs)
 ;end select
END GO

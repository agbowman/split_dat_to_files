CREATE PROGRAM edw_create_bb_product_event:dba
 SELECT INTO value(bbprdevt_extractfile)
  FROM (dummyt d  WITH seq = value(cur_list_size))
  WHERE cur_list_size > 0
  DETAIL
   col 0, health_system_id, v_bar,
   health_system_source_id, v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].product_event_id,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].product_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].encntr_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].encntr_nk,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].person_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].order_id,16))), v_bar,
   CALL print("0"),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].bb_result_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].contributor_system_cd,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].event_dt_tm,0,
      cnvtdatetimeutc(prdct_evnt->qual[d.seq].event_dt_tm,3)),utc_timezone_index,"MM/DD/YYYY HH:mm"))
   ),
   v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].event_dt_tm,cnvtint(prdct_evnt->
      qual[d.seq].event_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0","              ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].event_tm_zn))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].event_prsnl_id,16))),
   v_bar,
   CALL print(trim(prdct_evnt->qual[d.seq].event_status_flg)), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].event_type_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].international_unit,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].inventory_area_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].organization_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].overrie_ind,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].override_reason_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].owner_area_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].prsnl_id,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].qty,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].related_product_event_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].volume,16,4))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].assign_intl_units,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].assign_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].assign_reason_cd,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_assign_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_assign_intl_units,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].prov_id,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].from_device_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].to_device_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].device_reason_cd,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].from_inv_area_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].from_owner_area_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].to_inv_area_cd,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].to_owner_area_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].transfer_reason_cd,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].crossmatch_exp_dt_tm,
      0,cnvtdatetimeutc(prdct_evnt->qual[d.seq].crossmatch_exp_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm"))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].crossmatch_exp_dt_tm,cnvtint(
      prdct_evnt->qual[d.seq].crossmatch_exp_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0",
    "              ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].crossmatch_exp_tm_zn))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].crossmatch_qty,16,4))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].reinstate_reason_cd,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].release_dt_tm,0,
      cnvtdatetimeutc(prdct_evnt->qual[d.seq].release_dt_tm,3)),utc_timezone_index,"MM/DD/YYYY HH:mm"
     ))), v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].release_dt_tm,cnvtint(prdct_evnt->
      qual[d.seq].release_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0","              ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].release_tm_zn))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].release_prsnl_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].release_qty,16,4))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].release_reason_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].xm_reason_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].autoclave_ind,16))),
   v_bar,
   CALL print(trim(replace(prdct_evnt->qual[d.seq].box_nbr,str_find,str_replace,3))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].destroyed_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].destruction_org_id,16))),
   v_bar,
   CALL print(trim(replace(prdct_evnt->qual[d.seq].manifest_nbr,str_find,str_replace,3))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].method_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].disposed_intl_units,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].disposed_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].disposition_reason_cd,16))), v_bar,
   CALL print(trim(replace(prdct_evnt->qual[d.seq].accessory,str_find,str_replace,3))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].crossover_reason_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].device_type_cd,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].cur_expire_dt_tm,0,
      cnvtdatetimeutc(prdct_evnt->qual[d.seq].cur_expire_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm"))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].cur_expire_dt_tm,cnvtint(prdct_evnt
      ->qual[d.seq].cur_expire_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0","              ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_expire_tm_zn))), v_bar,
   CALL print(trim(replace(prdct_evnt->qual[d.seq].lot_nbr,str_find,str_replace,3))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].modified_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].option_id,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].orig_expire_dt_tm,0,
      cnvtdatetimeutc(prdct_evnt->qual[d.seq].orig_expire_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm"))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].orig_expire_dt_tm,cnvtint(
      prdct_evnt->qual[d.seq].orig_expire_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0",
    "              ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_expire_tm_zn))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_unit_meas_cd,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_volume,16,4))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].start_dt_tm,0,
      cnvtdatetimeutc(prdct_evnt->qual[d.seq].start_dt_tm,3)),utc_timezone_index,"MM/DD/YYYY HH:mm"))
   ), v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].start_dt_tm,cnvtint(prdct_evnt->
      qual[d.seq].start_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0","              ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].start_tm_zn))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].stop_dt_tm,0,
      cnvtdatetimeutc(prdct_evnt->qual[d.seq].stop_dt_tm,3)),utc_timezone_index,"MM/DD/YYYY HH:mm"))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].stop_dt_tm,cnvtint(prdct_evnt->
      qual[d.seq].stop_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0","              ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].stop_tm_zn))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_unit_meas_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].mod_vis_insp_cd,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_volume,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].device_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_cooler_id,16))),
   v_bar,
   CALL print(trim(replace(prdct_evnt->qual[d.seq].dispense_cooler_text,str_find,str_replace,3))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_courier_id,16))), v_bar,
   CALL print(trim(replace(prdct_evnt->qual[d.seq].dispense_courier_text,str_find,str_replace,3))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_from_locn_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_dispense_intl_units,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_prov_id,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_dispense_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_reason_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_status_flag,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_to_locn_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].dispense_vis_insp_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_dispense_intl_units,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_dispense_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].unknown_patient_ind,16))), v_bar,
   CALL print(trim(replace(prdct_evnt->qual[d.seq].unknown_patient_text,str_find,str_replace,3))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_quar_intl_units,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_quar_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_quar_intl_units,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_quar_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].quar_reason_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].alpha_translation_id,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].bb_supplier_id,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].electronic_receipt_ind,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_intl_units,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_rcvd_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].ship_cond_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].temperature_degree_cd,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].temperature_value,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].receipt_vis_insp_cd,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].bag_returned_ind,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].orig_transfused_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].trfsn_tag_returned_ind,16))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].transfused_intl_units,16))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].cur_transfused_qty,16,4))), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].transfused_vol,16,4))), v_bar,
   CALL print(trim(prdct_evnt->qual[d.seq].active_ind)),
   v_bar, "3", v_bar,
   extract_dt_tm_fmt, v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].active_status_ref,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,prdct_evnt->qual[d.seq].active_status_dt_tm,0,
      cnvtdatetimeutc(prdct_evnt->qual[d.seq].active_status_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm"))), v_bar,
   CALL print(evaluate(datetimezoneformat(prdct_evnt->qual[d.seq].active_status_dt_tm,cnvtint(
      prdct_evnt->qual[d.seq].active_status_tm_zn),"MMDDYYYYHHmmss"),"00000000000000","0",
    "              ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].active_status_tm_zn))),
   v_bar,
   CALL print(trim(cnvtstring(prdct_evnt->qual[d.seq].active_status_prsnl,16))), v_bar,
   row + 1
  WITH check, noheading, nocounter,
   format = lfstream, maxcol = 35000, maxrow = 1,
   append
 ;end select
 SET script_version = "001 08/17/12 VR025894"
END GO

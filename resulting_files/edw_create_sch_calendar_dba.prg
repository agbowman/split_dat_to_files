CREATE PROGRAM edw_create_sch_calendar:dba
 SELECT INTO value(sch_cal_extractfile)
  FROM (dummyt d  WITH seq = value(cur_list_size))
  WHERE cur_list_size > 0
  DETAIL
   col 0,
   CALL print(trim(health_system_id)), v_bar,
   CALL print(trim(health_system_source_id)), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].sch_appointment_sk,16))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].sch_calendar_sk,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].block_instance_sk,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].group_sch_appointment_sk,16))),
   v_bar,
   CALL print(trim(replace(sch_cal->qual[d.seq].calendar_description,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].resource_dtl_sk,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].service_resource_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].role_ref,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].primary_role_ind,16))), v_bar,
   CALL print(trim(replace(sch_cal->qual[d.seq].role_description,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].role_seq,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].schedule_seq,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].contiguous_ind,16))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].duration_qty,16))), v_bar,
   CALL print(trim(replace(sch_cal->qual[d.seq].setup_duration_qty,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(sch_cal->qual[d.seq].cleanup_duration_qty,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].calendar_slot_prsnl,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].bookings_prsnl,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].activity_type_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].time_type_flg))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].slot_begin_dt_tm,0,
      cnvtdatetimeutc(sch_cal->qual[d.seq].slot_begin_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].slot_begin_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].slot_begin_dt_tm,cnvtint(sch_cal->
      qual[d.seq].slot_begin_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].slot_end_dt_tm,0,
      cnvtdatetimeutc(sch_cal->qual[d.seq].slot_end_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].slot_end_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].slot_end_dt_tm,cnvtint(sch_cal->qual[d
      .seq].slot_end_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].
      original_slot_begin_dt_tm,0,cnvtdatetimeutc(sch_cal->qual[d.seq].original_slot_begin_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].original_slot_begin_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].original_slot_begin_dt_tm,cnvtint(
      sch_cal->qual[d.seq].original_slot_begin_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].original_slot_end_dt_tm,
      0,cnvtdatetimeutc(sch_cal->qual[d.seq].original_slot_end_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].original_slot_end_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].original_slot_end_dt_tm,cnvtint(
      sch_cal->qual[d.seq].original_slot_end_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(sch_cal->qual[d.seq].holiday_weekend_flg)), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].apply_slot_sk,16))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].current_appointment_state_ref,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].current_slot_state_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].booking_slot_begin_dt_tm,
      0,cnvtdatetimeutc(sch_cal->qual[d.seq].booking_slot_begin_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].booking_slot_begin_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].booking_slot_begin_dt_tm,cnvtint(
      sch_cal->qual[d.seq].booking_slot_begin_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].booking_slot_end_dt_tm,0,
      cnvtdatetimeutc(sch_cal->qual[d.seq].booking_slot_end_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].booking_slot_end_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].booking_slot_end_dt_tm,cnvtint(sch_cal
      ->qual[d.seq].booking_slot_end_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].book_slot_release_dt_tm,
      0,cnvtdatetimeutc(sch_cal->qual[d.seq].book_slot_release_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].book_slot_release_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].book_slot_release_dt_tm,cnvtint(
      sch_cal->qual[d.seq].book_slot_release_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,sch_cal->qual[d.seq].book_beg_effective_dt_tm,
      0,cnvtdatetimeutc(sch_cal->qual[d.seq].book_beg_effective_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].book_beg_effective_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(sch_cal->qual[d.seq].book_beg_effective_dt_tm,cnvtint(
      sch_cal->qual[d.seq].book_beg_effective_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].current_visible_ind))),
   v_bar, "3", v_bar,
   CALL print(trim(extract_dt_tm_fmt)), v_bar,
   CALL print(trim(sch_cal->qual[d.seq].active_ind)),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].booked_correctly_ind,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].def_slot_id,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].slot_type_id,16))),
   v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].schedule_sk,16))), v_bar,
   CALL print(trim(sch_cal->qual[d.seq].role_meaning,16)), v_bar,
   CALL print(trim(sch_cal->qual[d.seq].slot_meaning,16)),
   v_bar,
   CALL print(trim(sch_cal->qual[d.seq].slot_state_meaning,16)), v_bar,
   v_bar,
   CALL print(trim(replace(sch_cal->qual[d.seq].encounter_nk,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].encntr_id,16))), v_bar,
   CALL print(trim(cnvtstring(sch_cal->qual[d.seq].appt_location_ref,16))),
   v_bar, row + 1
  WITH noheading, nocounter, format = lfstream,
   maxcol = 1999, maxrow = 1, append
 ;end select
 SET script_version = "008 01/23/18 mf025696"
END GO

CREATE PROGRAM edw_create_encounter_files:dba
 SELECT INTO value(encounter_extractfile)
  FROM (dummyt d  WITH seq = value(cur_list_size))
  PLAN (d)
  DETAIL
   col 0, health_system_id, v_bar,
   health_system_source_id, v_bar, "0",
   v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].encounter_nk,str_find,str_replace,3))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].encounter_sk,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].person_hss_id,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].person_sk,16))), v_bar,
   CALL print(trim(evaluate(fin_ind,"Y",build(replace(encounters->qual[d.seq].financial_nbr_raw,
       str_find,str_replace,3),cnvtint(encounters->qual[d.seq].fin_alias_pool_cd))," "))), v_bar,
   CALL print(trim(evaluate(fin_ind,"Y",replace(encounters->qual[d.seq].financial_nbr_raw,str_find,
      str_replace,3)," "))),
   v_bar, v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].pre_admit_testing_ref,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].pre_admit_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].pre_admit_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].pre_admit_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].pre_admit_dt_tm,cnvtint(encounters
      ->qual[d.seq].pre_admit_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_loc_bed_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_loc_room_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_loc_nurse_unit_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_loc_building_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_loc_facility_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_loc_institution_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_source_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_type,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_status,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_mode_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].admit_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].admit_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].admit_dt_tm,cnvtint(encounters->
      qual[d.seq].admit_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].inpatient_admit_dt_tm,
      0,cnvtdatetimeutc(encounters->qual[d.seq].inpatient_admit_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].inpatient_admit_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].inpatient_admit_dt_tm,cnvtint(
      encounters->qual[d.seq].inpatient_admit_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].arrive_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].arrive_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].arrive_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].arrive_dt_tm,cnvtint(encounters->
      qual[d.seq].arrive_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      estimated_arrive_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].estimated_arrive_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].estimated_arrive_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].estimated_arrive_dt_tm,cnvtint(
      encounters->qual[d.seq].estimated_arrive_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].discharge_to_loc_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].discharge_disposition_ref,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].discharge_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].discharge_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].discharge_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].discharge_dt_tm,cnvtint(encounters
      ->qual[d.seq].discharge_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      estimated_depart_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].estimated_depart_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].estimated_depart_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].estimated_depart_dt_tm,cnvtint(
      encounters->qual[d.seq].estimated_depart_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].depart_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].depart_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].depart_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].depart_dt_tm,cnvtint(encounters->
      qual[d.seq].depart_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].visit_nbr,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].patient_type_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].encounter_class_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].encounter_type_class_ref,16))), v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].age_in_years,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].age_in_days,str_find,str_replace,3),3)),
   v_bar, v_bar, v_bar,
   v_bar, v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].organization_sk,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].current_loc_bed_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].current_loc_room_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].current_loc_nurse_unit_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].current_loc_building_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].current_loc_facility_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].temporary_loc_bed_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].temporary_loc_room_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].temporary_loc_nurse_unit_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].temporary_loc_building_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].temporary_loc_facility_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].loc_program_service_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].specialty_unit_ref,16))),
   v_bar, v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].isolation_code,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].accommodation_ref,16))), v_bar,
   v_bar, v_bar, v_bar,
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].ambulatory_condition_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].encounter_status_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].service_category_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].medical_service_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].patient_classification_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].financial_class_ref,16))),
   v_bar, v_bar, v_bar,
   v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].reason_for_visit_txt,str_find,str_replace,3))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].mental_category_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].mental_health_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].mental_health_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].mental_health_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].mental_health_dt_tm,cnvtint(
      encounters->qual[d.seq].mental_health_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].readmit_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].accommodation_reason_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].accommodation_request_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].accompanied_by_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_with_medication_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      alternate_decomp_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].alternate_decomp_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].alternate_decomp_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].alternate_decomp_dt_tm,cnvtint(
      encounters->qual[d.seq].alternate_decomp_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].alternate_reason_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].alternate_lvl_care_ref,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      alternate_lvl_care_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].alternate_lvl_care_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].alternate_lvl_care_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].alternate_lvl_care_dt_tm,cnvtint(
      encounters->qual[d.seq].alternate_lvl_care_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].blood_bank_donor_procedure_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].confidential_lvl_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].care_contract_status_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].courtesy_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].diet_type_ref,16))), v_bar,
   CALL print(trim(evaluate(encounters->qual[d.seq].estimated_length_of_stay,0.0,blank_field,
     cnvtstring(cnvtint(encounters->qual[d.seq].estimated_length_of_stay))))),
   v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].person_giving_information,str_find,str_replace,3))
   ), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].psychiatric_status_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].referring_facility_ref,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      referral_received_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].referral_received_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].referral_received_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].referral_received_dt_tm,cnvtint(
      encounters->qual[d.seq].referral_received_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].region_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].safekeeping_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].security_access_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].sitter_required_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].trauma_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].trauma_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].trauma_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].trauma_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].trauma_dt_tm,cnvtint(encounters->
      qual[d.seq].trauma_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].triage_ref,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].triage_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].triage_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].triage_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].triage_dt_tm,cnvtint(encounters->
      qual[d.seq].triage_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].valuables_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].vip_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].visitor_status_ref,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].assign_to_loc_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].assign_to_loc_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].assign_to_loc_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].assign_to_loc_dt_tm,cnvtint(
      encounters->qual[d.seq].assign_to_loc_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].chart_complete_dt_tm,
      0,cnvtdatetimeutc(encounters->qual[d.seq].chart_complete_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].chart_complete_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].chart_complete_dt_tm,cnvtint(
      encounters->qual[d.seq].chart_complete_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      document_received_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].document_received_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].document_received_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].document_received_dt_tm,cnvtint(
      encounters->qual[d.seq].document_received_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].zero_balance_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].zero_balance_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].zero_balance_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].zero_balance_dt_tm,cnvtint(
      encounters->qual[d.seq].zero_balance_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].source_created_dt_tm,
      0,cnvtdatetimeutc(encounters->qual[d.seq].source_created_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   v_bar,
   CALL print(evaluate(historic_ind,"Y","1","0")), v_bar,
   "3", v_bar, extract_dt_tm_fmt,
   v_bar,
   CALL print(build(encounters->qual[d.seq].active_ind)), v_bar,
   CALL print(build(encounters->qual[d.seq].cancer_code_cnt)), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].coding_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].coding_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].coding_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].coding_dt_tm,cnvtint(encounters->
      qual[d.seq].coding_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      coding_completed_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].coding_completed_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].coding_completed_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].coding_completed_dt_tm,cnvtint(
      encounters->qual[d.seq].coding_completed_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(build(encounters->qual[d.seq].final_coding_episode_cnt)),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].event_id,16))), v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].enc_alt_ident_1,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].enc_alt_ident_2,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].enc_alt_ident_3,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].enc_alt_ident_4,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].enc_alt_ident_5,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(evaluate(encounters->qual[d.seq].current_loc_bed_ref,0.0,evaluate(encounters->
      qual[d.seq].current_loc_room_ref,0.0,evaluate(encounters->qual[d.seq].
       current_loc_nurse_unit_ref,0.0,evaluate(encounters->qual[d.seq].current_loc_building_ref,0.0,
        evaluate(encounters->qual[d.seq].current_loc_facility_ref,0.0,"0",cnvtstring(encounters->
          qual[d.seq].current_loc_facility_ref,16)),cnvtstring(encounters->qual[d.seq].
         current_loc_building_ref,16)),cnvtstring(encounters->qual[d.seq].current_loc_nurse_unit_ref,
        16)),cnvtstring(encounters->qual[d.seq].current_loc_room_ref,16)),cnvtstring(encounters->
      qual[d.seq].current_loc_bed_ref,16)))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].temporary_loc_cd,16))), v_bar,
   CALL print(trim(evaluate(encounters->qual[d.seq].admit_loc_bed_ref,0.0,evaluate(encounters->qual[d
      .seq].admit_loc_room_ref,0.0,evaluate(encounters->qual[d.seq].admit_loc_nurse_unit_ref,0.0,
       evaluate(encounters->qual[d.seq].admit_loc_building_ref,0.0,evaluate(encounters->qual[d.seq].
         admit_loc_facility_ref,0.0,"0",cnvtstring(encounters->qual[d.seq].admit_loc_facility_ref,16)
         ),cnvtstring(encounters->qual[d.seq].admit_loc_building_ref,16)),cnvtstring(encounters->
        qual[d.seq].admit_loc_nurse_unit_ref,16)),cnvtstring(encounters->qual[d.seq].
       admit_loc_room_ref,16)),cnvtstring(encounters->qual[d.seq].admit_loc_bed_ref,16)))),
   v_bar,
   CALL print(cnvtstring(encounters->qual[d.seq].total_charge_amt,16,2)), v_bar,
   v_bar, v_bar, v_bar,
   v_bar, v_bar, v_bar,
   v_bar, v_bar, v_bar,
   v_bar, v_bar, v_bar,
   v_bar, v_bar, v_bar,
   v_bar, v_bar, v_bar,
   v_bar, v_bar, v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].nhs_commissioning_org,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].nhs_providing_org,16))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].referral_recvd_dt_tm,
      0,cnvtdatetimeutc(encounters->qual[d.seq].referral_recvd_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].referral_recvd_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].referral_recvd_dt_tm,cnvtint(
      encounters->qual[d.seq].referral_recvd_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].registering_prsnl,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].wait_list_start_dt_tm,
      0,cnvtdatetimeutc(encounters->qual[d.seq].wait_list_start_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].wait_list_start_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(encounters->qual[d.seq].wait_list_start_dt_tm,cnvtint(
      encounters->qual[d.seq].wait_list_start_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(evaluate(mrn_ind,"Y",replace(encounters->qual[d.seq].medical_record_nbr,str_find,
      str_replace,3)," "))), v_bar,
   CALL print(trim(evaluate(mrn_ind,"Y",replace(encounters->qual[d.seq].formatted_medical_record_nbr,
      str_find,str_replace,3)," "))),
   v_bar,
   CALL print(trim(evaluate(mrn_ind,"Y",replace(encounters->qual[d.seq].medical_record_nbr_raw,
      str_find,str_replace,3)," "))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].admit_type_ref,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].current_loc_facility_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].mother_encounter_sk,16))), v_bar,
   CALL print(build(encounters->qual[d.seq].mental_health_ind)), v_bar,
   CALL print(trim(evaluate(fin_ind,"Y",replace(encounters->qual[d.seq].formatted_financial_nbr,
      str_find,str_replace,3)," "))),
   v_bar, v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].deceased_ind,1))),
   v_bar, v_bar, v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].related_person_id,16))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].related_person_reltn_cd,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].pre_reg_prsnl_id,16))), v_bar,
   CALL print(trim(replace(encounters->qual[d.seq].referring_comment,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].coding_prsnl,16))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].create_prsnl,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].source_created_dt_tm,
      0,cnvtdatetimeutc(encounters->qual[d.seq].source_created_dt_tm,2)),encounters->qual[d.seq].
     encounter_tm_zn,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].encounter_tm_zn,4))),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      alias_beg_effective_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].alias_beg_effective_dt_tm,3
       )),utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].src_updt_dt_tm,0,
      cnvtdatetimeutc(encounters->qual[d.seq].src_updt_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,encounters->qual[d.seq].
      last_menstrual_period_dt_tm,0,cnvtdatetimeutc(encounters->qual[d.seq].
       last_menstrual_period_dt_tm,3)),utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(encounters->qual[d.seq].referral_source_cd,16))), v_bar,
   row + 1
  WITH noheading, nocounter, format = lfstream,
   maxcol = 1999, maxrow = 1, append
 ;end select
 SET script_version = "029 02/15/17 mf025696"
END GO

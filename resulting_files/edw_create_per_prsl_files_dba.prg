CREATE PROGRAM edw_create_per_prsl_files:dba
 SELECT INTO value(per_prsl_extractfile)
  FROM (dummyt d  WITH seq = value(cur_list_size))
  PLAN (d
   WHERE (per_prsl->qual[d.seq].per_person_sk > 0))
  DETAIL
   per_file_cnt = (per_file_cnt+ 1)
   IF (healthfacts_ind="Y"
    AND edw_ind="N"
    AND healthsentry_ind="N")
    per_prsl->qual[d.seq].national_ident = "", per_prsl->qual[d.seq].full_name = "", per_prsl->qual[d
    .seq].first_name = "",
    per_prsl->qual[d.seq].middle_name = "", per_prsl->qual[d.seq].last_name = "", per_prsl->qual[d
    .seq].maiden_full_name = "",
    per_prsl->qual[d.seq].maiden_first_name = "", per_prsl->qual[d.seq].maiden_middle_name = "",
    per_prsl->qual[d.seq].maiden_last_name = "",
    per_prsl->qual[d.seq].mother_maiden_last_name = "", per_prsl->qual[d.seq].address_line_1 = "",
    per_prsl->qual[d.seq].address_line_2 = "",
    per_prsl->qual[d.seq].address_line_3 = "", per_prsl->qual[d.seq].address_line_4 = "", per_prsl->
    qual[d.seq].birth_dt_tm = 0,
    per_prsl->qual[d.seq].birth_tm_zn = 0, per_prsl->qual[d.seq].phone_nbr = "", per_prsl->qual[d.seq
    ].email_address = "",
    per_prsl->qual[d.seq].nok_relation_ref = 0, per_prsl->qual[d.seq].nok_related_person_sk = 0,
    per_prsl->qual[d.seq].nok_related_person_reltn_ref = 0,
    per_prsl->qual[d.seq].nok_specific_family_reltn_ref = 0, per_prsl->qual[d.seq].
    nok_genetic_reltn_ind = 0, per_prsl->qual[d.seq].nok_living_with_ind = 0,
    per_prsl->qual[d.seq].nok_mother_child_reltn_ind = 0, per_prsl->qual[d.seq].nok_full_name = "",
    per_prsl->qual[d.seq].nok_first_name = "",
    per_prsl->qual[d.seq].nok_middle_name = "", per_prsl->qual[d.seq].nok_last_name = "", per_prsl->
    qual[d.seq].nok_address_line_1 = "",
    per_prsl->qual[d.seq].nok_address_line_2 = "", per_prsl->qual[d.seq].nok_address_line_3 = "",
    per_prsl->qual[d.seq].nok_address_line_4 = "",
    per_prsl->qual[d.seq].nok_city_txt = "", per_prsl->qual[d.seq].nok_state_ref = 0, per_prsl->qual[
    d.seq].nok_state = "",
    per_prsl->qual[d.seq].nok_postal_code = "", per_prsl->qual[d.seq].nok_postal_code_nls = "",
    per_prsl->qual[d.seq].nok_county_ref = 0,
    per_prsl->qual[d.seq].nok_county = "", per_prsl->qual[d.seq].nok_country_ref = 0, per_prsl->qual[
    d.seq].nok_country = "",
    per_prsl->qual[d.seq].nok_residence_ref = 0, per_prsl->qual[d.seq].nok_residence_type_ref = 0,
    per_prsl->qual[d.seq].nok_phone_nbr = "",
    per_prsl->qual[d.seq].nok_email_address = "", per_prsl->qual[d.seq].employer_org = 0, per_prsl->
    qual[d.seq].employer_organization_name_txt = "",
    per_prsl->qual[d.seq].employer_contact_title = "", per_prsl->qual[d.seq].employer_contact_name =
    "", per_prsl->qual[d.seq].employee_position = "",
    per_prsl->qual[d.seq].employee_title = "", per_prsl->qual[d.seq].employee_nbr = "", per_prsl->
    qual[d.seq].abs_birth_dt_tm = 0
   ENDIF
   col 0, health_system_id, v_bar,
   health_system_source_id, v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].per_person_sk,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].per_personnel_sk,16))), v_bar,
   v_bar, v_bar, v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].community_medical_record_nbr,str_find,str_replace,3),
    3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].formatted_comm_med_rec_nbr,str_find,str_replace,3),3
    )),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].comm_med_rec_nbr_raw,str_find,str_replace,3),3)),
   v_bar,
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].national_ident,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].full_name,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].first_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].middle_name,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].last_name,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].maiden_full_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].maiden_first_name,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].maiden_middle_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].maiden_last_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].mother_maiden_last_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].address_line_1,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].address_line_2,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].address_line_3,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].address_line_4,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].city,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].state_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].state,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].postal_code,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].postal_code_nls,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].county_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].county,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].country_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].country,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].residence_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].residence_type_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].phone_nbr,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].email_address,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].gender_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].parent_marital_status_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].marital_status_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].race_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].ethnic_group_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].language_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].language_dialect_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nationality_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].religion_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].birth_dt_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].birth_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].birth_dt_tm,3)),utc_timezone_index,"MM/DD/YYYY HH:mm:ss")
    )), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].birth_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].birth_dt_tm,cnvtint(per_prsl->qual[d
      .seq].birth_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].multiple_birth_ref,16))), v_bar,
   CALL print(trim(per_prsl->qual[d.seq].birth_order)),
   v_bar,
   CALL print(trim(evaluate(per_prsl->qual[d.seq].birth_length,0.0,blank_field,cnvtstring(per_prsl->
      qual[d.seq].birth_length)))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].birth_length_units_ref,16))), v_bar,
   CALL print(trim(evaluate(per_prsl->qual[d.seq].birth_weight,0.0,blank_field,cnvtstring(per_prsl->
      qual[d.seq].birth_weight)))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].birth_weight_units_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].conception_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].conception_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].conception_tm_zn))),
   v_bar,
   CALL print(trim(per_prsl->qual[d.seq].gestational_age_days_at_birth)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].gestational_age_method_ref,16))), v_bar,
   CALL print(trim(per_prsl->qual[d.seq].nbr_of_brothers)),
   v_bar,
   CALL print(trim(per_prsl->qual[d.seq].nbr_of_sisters)), v_bar,
   CALL print(trim(evaluate(per_prsl->qual[d.seq].family_income,0.0,blank_field,cnvtstring(per_prsl->
      qual[d.seq].family_income)))), v_bar,
   CALL print(trim(per_prsl->qual[d.seq].family_size)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].living_arrangement_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].living_will_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].deceased_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].deceased_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].deceased_dt_tm,cnvtint(per_prsl->
      qual[d.seq].deceased_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].cause_of_death_ref,16))),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].cause_of_death_txt,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_loc_bed_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_loc_room_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_loc_nurse_unit_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_loc_building_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_loc_facility_ref,16))), v_bar,
   v_bar, "0", v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].smokes_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].organ_donor_status_ref,16))),
   v_bar,
   CALL print(trim(per_prsl->qual[d.seq].nbr_of_pregnancies)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].adopted_status_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].bad_debt_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].callback_consent_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].student_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].highest_grade_complete_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].highest_degree_complete_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].diet_type_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].disease_alert_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].tumor_registry_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].autopsy_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].citizenship_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].confidential_level_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].military_base_location,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].military_rank_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].military_service_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].vet_military_status_ref,16))), v_bar,
   CALL print(build(per_prsl->qual[d.seq].sex_change_ind)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].species_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].vip_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_relation_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_related_person_sk,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_related_person_reltn_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_specific_family_reltn_ref,16))),
   v_bar,
   CALL print(build(per_prsl->qual[d.seq].nok_genetic_reltn_ind)), v_bar,
   CALL print(build(per_prsl->qual[d.seq].nok_living_with_ind)), v_bar,
   CALL print(build(per_prsl->qual[d.seq].nok_mother_child_reltn_ind)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_full_name,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_first_name,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_middle_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_last_name,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_address_line_1,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_address_line_2,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_address_line_3,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_address_line_4,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_city_txt,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_state_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_state,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_postal_code,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_postal_code_nls,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_county_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_county,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_country_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_country,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_residence_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].nok_residence_type_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_phone_nbr,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].nok_email_address,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].occupation_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].employer_org,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].employer_organization_name_txt,str_find,str_replace,
     3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].employer_contact_title,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].employer_contact_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].employee_type_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].employee_status_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].employee_position,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].employee_title,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].employee_nbr,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].employee_hire_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].employee_hire_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].employee_hire_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].employee_hire_dt_tm,cnvtint(per_prsl
      ->qual[d.seq].employee_hire_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].employee_retire_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].employee_retire_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].employee_retire_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].employee_retire_dt_tm,cnvtint(
      per_prsl->qual[d.seq].employee_retire_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].
      employee_terminated_dt_tm,0,cnvtdatetimeutc(per_prsl->qual[d.seq].employee_terminated_dt_tm,3)),
     utc_timezone_index,"MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].employee_terminated_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].employee_terminated_dt_tm,cnvtint(
      per_prsl->qual[d.seq].employee_terminated_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].primary_care_physician_prsnl,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].primary_care_physician_ft_name,str_find,str_replace,
     3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].ob_gyn_physician_prsnl,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].ob_gyn_physician_ft_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].pediatrician_physician_prsnl,16))),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].pediatrician_physician_ft_name,str_find,str_replace,
     3),3)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].family_physician_prsnl,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].family_physician_ft_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].life_case_manager_prsnl,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].life_case_manager_ft_name,str_find,str_replace,3),3)
   ), v_bar,
   CALL print(trim(evaluate(historic_ind,"Y","1","0"))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].subscriber_person_sk,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].subscriber_person_reltn_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].person_subscriber_reltn_ref,16))),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].per_alt1_alias,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].per_alt2_alias,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].per_alt3_alias,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].per_alt4_alias,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].per_alt5_alias,str_find,str_replace,3),3)), v_bar,
   health_system_source_id,
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].prsnl_personnel_sk,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].prsnl_person_sk,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].personnel_full_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].personnel_first_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].personnel_last_name,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_address_line_1,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_address_line_2,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_address_line_3,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_address_line_4,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_city,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].business_state_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_state,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_postal_code,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_postal_code_nls,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].business_county_ref,16))),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_county,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].business_country_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_country,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].business_residence_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].business_residence_type_ref,16))), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_phone_nbr,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_email_address,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_fax_nbr,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].business_pager_nbr,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].state_license_nbr,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].state_license_exp_dt_tm,
      0,cnvtdatetimeutc(per_prsl->qual[d.seq].state_license_exp_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].state_license_exp_tm_zn))),
   v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].state_license_exp_dt_tm,cnvtint(
      per_prsl->qual[d.seq].state_license_exp_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].upin_nbr,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].upin_nbr_exp_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].upin_nbr_exp_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].upin_nbr_exp_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].upin_nbr_exp_dt_tm,cnvtint(per_prsl->
      qual[d.seq].upin_nbr_exp_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].dea_nbr,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].dea_nbr_exp_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].dea_nbr_exp_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].dea_nbr_exp_tm_zn))), v_bar,
   CALL print(evaluate(datetimezoneformat(per_prsl->qual[d.seq].dea_nbr_exp_dt_tm,cnvtint(per_prsl->
      qual[d.seq].dea_nbr_exp_tm_zn),"HHmmsscc"),"00000000","0","        ","0",
    "1")),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].emergency_staff_nbr,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].community_physician_nbr,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].organization_physician_nbr,str_find,str_replace,3),3
    )),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].external_identifier_nbr,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].primary_medical_specialty_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].position_ref,16))),
   v_bar,
   CALL print(build(per_prsl->qual[d.seq].physician_ind)), v_bar,
   CALL print(evaluate(historic_ind,"Y","1","0")), v_bar, act_from_dt_tm_fmt,
   v_bar, act_to_dt_tm_fmt, v_bar,
   "3", v_bar, extract_dt_tm_fmt,
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].alt1_alias,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].alt2_alias,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].alt3_alias,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].alt4_alias,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].alt5_alias,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(evaluate(per_prsl->qual[d.seq].deceased_loc_bed_ref,0.0,evaluate(per_prsl->qual[d
      .seq].deceased_loc_room_ref,0.0,evaluate(per_prsl->qual[d.seq].deceased_loc_nurse_unit_ref,0.0,
       evaluate(per_prsl->qual[d.seq].deceased_loc_building_ref,0.0,evaluate(per_prsl->qual[d.seq].
         deceased_loc_facility_ref,0.0,"0",cnvtstring(per_prsl->qual[d.seq].deceased_loc_facility_ref,
          16)),cnvtstring(per_prsl->qual[d.seq].deceased_loc_building_ref,16)),cnvtstring(per_prsl->
        qual[d.seq].deceased_loc_nurse_unit_ref,16)),cnvtstring(per_prsl->qual[d.seq].
       deceased_loc_room_ref,16)),cnvtstring(per_prsl->qual[d.seq].deceased_loc_bed_ref,16)))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].primary_care_physician_org,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].antenatal_physician_prsnl,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].antenatal_physician_org,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].contact_method_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].written_format_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].school_org,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].process_alert_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].living_dependency_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].national_ident_status_ref,16))),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].contact_time_txt,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].non_gen_practitioner_ident,str_find,str_replace,3),3
    )), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].birth_prec_flag))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_source_cd,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].gen_practitioner_org,16))), v_bar,
   CALL print(build(per_prsl->qual[d.seq].prsl_src_active_ind)),
   v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].prsl_src_create_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].prsl_src_create_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))), v_bar,
   CALL print(build(per_prsl->qual[d.seq].src_active_ind)), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].src_create_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].src_create_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].community_phys_group_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].prim_assign_loc_ref,16))), v_bar,
   CALL print(trim(datetimezoneformat(evaluate(curutc,1,per_prsl->qual[d.seq].abs_birth_dt_tm,0,
      cnvtdatetimeutc(per_prsl->qual[d.seq].abs_birth_dt_tm,3)),utc_timezone_index,
     "MM/DD/YYYY HH:mm:ss"))),
   v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].prsnl_npi,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].username,str_find,str_replace,3),3)), v_bar,
   CALL print(trim(replace(per_prsl->qual[d.seq].prsnl_email,str_find,str_replace,3),3)),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].deceased_id_method_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].active_status_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].data_status_ref,16))),
   v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].prsnl_active_status_ref,16))), v_bar,
   CALL print(trim(cnvtstring(per_prsl->qual[d.seq].person_type_ref,16))), v_bar, row + 1
  WITH noheading, nocounter, format = lfstream,
   maxcol = 1999, maxrow = 1, append
 ;end select
 SET script_version = "030 05/15/18 SB026554"
END GO

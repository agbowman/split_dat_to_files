CREATE PROGRAM cclauditcsv:dba
 PROMPT
  "Enter output name(cclsource:cclauditdispatch.prg): " = "cclsource:cclauditdispatch.prg",
  "Enter log name(ccluserdir:cclauditdispatch.log): " = "ccluserdir:cclauditdispatch.log",
  "Enter input csv name(cclsource:hipaa.csv): " = "cclsource:hipaa.csv"
 FREE DEFINE rtl2
 DEFINE rtl2 trim( $3)
 RECORD rec(
   1 cnt = i4
   1 qual[*]
     2 hipaa = c500
   1 requests[11]
     2 cache = vc
 )
 SET stat = alterlist(rec->qual,50)
 SELECT INTO trim( $1)
  request_num = cnvtint(substring(1,7,r.line)), dispatch_id =
  IF (cnvtint(substring(1,7,r.line))=0) 10
  ELSE minval(9,(cnvtint(substring(1,7,r.line))/ 100000))
  ENDIF
  , hipaa = substring(1,500,r.line)
  FROM rtl2t r
  WHERE substring(1,1,r.line) BETWEEN "0" AND "9"
  ORDER BY dispatch_id, substring(1,40,r.line)
  HEAD REPORT
   ";cclauditdispatch programs auto-generated by cclauditcsv", row + 1,
   ";cclauditdispatch num = minval(9,request/100000)",
   row + 1, ";cclauditdispatch(0-9) find by request, cclauditdispatch find by name", row + 1,
   fnd[11] = 0, disp_cnt = 0, rec->cnt = 0,
   request_cur = 0.0, request_prev = 0.0, tmpbuf = fillstring(80," "),
   p_script_name = fillstring(31," "), script_name = fillstring(31," "), last_script_name =
   fillstring(31," "),
   MACRO (hipaa_print)
    len = 0, pos1 = 1, pos2 = 1,
    item = 0
    IF ((rec->cnt=1))
     mode = 0
    ELSEIF ((cnt=rec->cnt))
     mode = 3
    ELSEIF (cnt=1)
     mode = 1
    ELSE
     mode = 2
    ENDIF
    tot_param = 12, pos2 = 1, idx1_pos = 0,
    idx1_len = 0, idx2_pos = 0, idx2_len = 0
    WHILE (pos2)
     pos2 = findstring("|",rec->qual[cnt].hipaa,pos2),
     IF (pos2)
      len = (pos2 - pos1), item += 1
      CASE (item)
       OF 11:
        IF (((len > 1) OR (substring(pos1,1,rec->qual[cnt].hipaa) != "0")) )
         idx1_pos = pos1, idx1_len = len
        ENDIF
       OF 12:
        IF (((len > 1) OR (substring(pos1,1,rec->qual[cnt].hipaa) != "0")) )
         idx2_pos = pos1, idx2_len = len
        ENDIF
      ENDCASE
      pos2 += 1, pos1 = pos2
     ENDIF
    ENDWHILE
    item = 0, pos1 = 1, pos2 = 1,
    by_req = 0
    WHILE (pos2)
     pos2 = findstring("|",rec->qual[cnt].hipaa,pos2),
     IF (pos2)
      len = (pos2 - pos1)
      IF (substring(pos1,len,rec->qual[cnt].hipaa)=" ")
       len = 0
      ENDIF
      item += 1
      CASE (item)
       OF 1:
        IF (cnvtint(substring(pos1,len,rec->qual[cnt].hipaa)) > 0)
         by_req = 1
         IF (cnt=1)
          "of ",
          CALL print(substring(pos1,len,rec->qual[cnt].hipaa)), ":"
         ENDIF
        ENDIF
       OF 2:
        p_script_name = cnvtupper(substring(pos1,len,rec->qual[cnt].hipaa)),
        IF (dispatch_id=10)
         IF (cnt=1)
          "of ",
          CALL print(build("^",p_script_name,"^")), ":",
          row + 1
         ENDIF
        ELSE
         "   ;",
         CALL print(trim(p_script_name)), row + 1
        ENDIF
       OF 3:
        IF ((rec->cnt > 1)
         AND cnt=1)
         "set cclaud->hipaamode = 0", row + 1
        ENDIF
        ,
        IF (idx1_len
         AND idx2_len)
         IF (mode IN (0, 3))
          tmpbuf = build("(",substring(idx2_pos,idx2_len,rec->qual[cnt].hipaa),"-",substring(idx1_pos,
            idx1_len,rec->qual[cnt].hipaa),")+1")
         ENDIF
         "for (curhipaacnt = ",
         CALL print(substring(idx1_pos,idx1_len,rec->qual[cnt].hipaa)), " to ",
         CALL print(substring(idx2_pos,idx2_len,rec->qual[cnt].hipaa)), ")", row + 1
         IF (mode=0)
          "execute cclaudit ", row + 1,
          CALL print(build("  evaluate(",tmpbuf,", 1,0,")),
          row + 1,
          CALL print(build("    evaluate(curhipaacnt, 1,1, ",tmpbuf,",3, 2))")), row + 1
         ELSE
          "set cclaud->hipaamode = evaluate(cclaud->hipaamode, 0,1, 2)", row + 1,
          "execute cclaudit cclaud->hipaamode",
          row + 1
         ENDIF
        ELSEIF ((rec->cnt > 1))
         IF ((cnt=rec->cnt))
          "set cclaud->hipaamode = evaluate(cclaud->hipaamode, 0,0, 3)", row + 1
         ELSE
          "set cclaud->hipaamode = evaluate(cclaud->hipaamode, 0,1, 2)", row + 1
         ENDIF
         "execute cclaudit cclaud->hipaamode", row + 1
        ELSE
         "execute cclaudit ", mode"#", row + 1
        ENDIF
        ,",^",
        CALL print(substring(pos1,len,rec->qual[cnt].hipaa))"^",
        row + 1
       OF 9:
        IF (len)
         ",",
         CALL print(substring(pos1,len,rec->qual[cnt].hipaa)), row + 1
        ELSE
         ",0.0", row + 1
        ENDIF
       OF 10:
        IF (len)
         ",",
         CALL print(substring(pos1,len,rec->qual[cnt].hipaa)), row + 1
        ELSE
         ",^ ^", row + 1
        ENDIF
       OF 4:
       OF 5:
       OF 6:
       OF 7:
       OF 8:
        IF (len)
         ",^",
         CALL print(substring(pos1,len,rec->qual[cnt].hipaa)), "^",
         row + 1
        ELSE
         ",^ ^", row + 1
        ENDIF
      ENDCASE
      pos2 += 1, pos1 = pos2, sep = ","
     ENDIF
    ENDWHILE
    IF (idx1_len
     AND idx2_len)
     "endfor", row + 1
    ENDIF
    IF ((rec->cnt > 1)
     AND (cnt=rec->cnt))
     "if (cclaud->hipaamode in (1,2)) execute cclaudit 4,^ ^,^ ^,^ ^,^ ^,^ ^,^ ^,0.0,^ ^ endif", row
      + 1
    ENDIF
   ENDMACRO
  HEAD dispatch_id
   script_name = " ", last_script_name = " ", request_cur = 0,
   request_prev = 0, fnd[(dispatch_id+ 1)] = 1, disp_cnt = 0,
   req_unique = 0, row + 1, "drop program cclauditdispatch",
   dispatch_id"#", ":dba go", row + 1,
   "create program cclauditdispatch", dispatch_id"#", ":dba",
   row + 1, "case ($1) ", row + 1
  DETAIL
   disp_cnt += 1, len = 0, pos1 = 1,
   pos2 = 1, pos2 = findstring("|",hipaa,pos1)
   IF (pos2)
    len = (pos2 - pos1), request_cur = cnvtreal(substring(pos1,len,hipaa))
    IF (request_prev=0)
     request_prev = request_cur
    ENDIF
   ENDIF
   IF (dispatch_id=10)
    pos2 += 1, pos3 = findstring("|",hipaa,pos2)
    IF (pos3)
     len = (pos3 - pos2), script_name = cnvtupper(substring(pos2,len,hipaa))
     IF (last_script_name=" ")
      last_script_name = script_name
     ENDIF
    ENDIF
    IF (script_name != last_script_name)
     req_unique += 1, rec->requests[(dispatch_id+ 1)].cache = concat(rec->requests[(dispatch_id+ 1)].
      cache,trim(last_script_name),"|")
     IF (rec->cnt)
      FOR (cnt = 1 TO rec->cnt)
        hipaa_print
      ENDFOR
      rec->cnt = 0
     ENDIF
    ENDIF
    last_script_name = script_name
   ELSE
    IF (request_cur != request_prev)
     req_unique += 1, rec->requests[(dispatch_id+ 1)].cache = concat(rec->requests[(dispatch_id+ 1)].
      cache,format(request_prev,"#######;rp0"),"|")
     IF (rec->cnt)
      FOR (cnt = 1 TO rec->cnt)
        hipaa_print
      ENDFOR
      rec->cnt = 0
     ENDIF
    ENDIF
    request_prev = request_cur
   ENDIF
   rec->cnt += 1
   IF ((rec->cnt > size(rec->qual,5)))
    stat = alterlist(rec->qual,(rec->cnt+ 50))
   ENDIF
   rec->qual[rec->cnt].hipaa = hipaa
  FOOT  dispatch_id
   req_unique += 1
   IF (dispatch_id=10)
    rec->requests[(dispatch_id+ 1)].cache = concat(rec->requests[(dispatch_id+ 1)].cache,trim(
      last_script_name),"|")
   ELSE
    rec->requests[(dispatch_id+ 1)].cache = concat(rec->requests[(dispatch_id+ 1)].cache,format(
      request_prev,"#######;rp0"),"|")
   ENDIF
   FOR (cnt = 1 TO rec->cnt)
     hipaa_print
   ENDFOR
   "endcase", row + 1, "end go",
   rec->cnt = 0,
   CALL print(build(" ;cclauditdispatch",format(dispatch_id,"#")," event:",disp_cnt," request:",
    req_unique)),
   CALL echo(build(" ;cclauditdispatch",format(dispatch_id,"#")," event:",disp_cnt," request:",
    req_unique)),
   row + 1
  FOOT REPORT
   FOR (cnt = 1 TO 10)
     IF ((fnd[cnt]=0))
      cnt2 = (cnt - 1), row + 1, "drop program cclauditdispatch",
      cnt2"#", ":dba go", row + 1,
      "create program cclauditdispatch", cnt2"#", ":dba",
      row + 1, "  return ", row + 1,
      "end go",
      CALL print(build(" ;cclauditdispatch",cnt2," event:0 request:0")),
      CALL echo(build(" ;cclauditdispatch",cnt2," event:0 request:0")),
      row + 1
     ENDIF
   ENDFOR
   row + 1, "drop program cclauditcache:dba go", row + 1,
   "create program cclauditcache:dba", row + 1
   FOR (cnt = 1 TO 11)
     "  set cnt = ", cnt"##", row + 1,
     "  set cclaud->requests[cnt].cache = concat(", row + 1, pos = 1,
     cbuf = fillstring(80,"=")
     WHILE (cbuf != " ")
       cbuf = substring(pos,80,rec->requests[cnt].cache)
       IF (cbuf != " ")
        CALL print(build("'",cbuf,"',")), row + 1
       ENDIF
       sep = ",", pos += 80
     ENDWHILE
     "char(0)      )", row + 1
   ENDFOR
   "end go", row + 1
  WITH nocounter, maxcol = 132, maxrow = 1,
   noformfeed, check, format = variable
 ;end select
 FREE DEFINE rtl2
 CALL compile(trim( $1),trim( $2))
END GO
